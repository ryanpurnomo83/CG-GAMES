{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ryan%20Purnomo/Bahasa-Pemrograman/Website/Javascript/NextJS/CG-GAMES/node_modules/p5/dist/type/textCore.js"],"sourcesContent":["import { R as Renderer } from '../p5.Renderer-CwAYZOC2.js';\nimport '../creating_reading-D4AAKRbx.js';\nimport 'colorjs.io/fn';\nimport '../color/color_spaces/hsb.js';\nimport '../constants-C-g_eAdC.js';\nimport '../image/filters.js';\nimport '../math/p5.Vector.js';\nimport '../shape/custom_shapes.js';\nimport '../core/States.js';\nimport '../io/utilities.js';\nimport 'file-saver';\n\n/**\n * @module Typography\n * @requires core\n */\n\n\nconst textCoreConstants = {\n  IDEOGRAPHIC: 'ideographic',\n  RIGHT_TO_LEFT: 'rtl',\n  LEFT_TO_RIGHT: 'ltr',\n  _CTX_MIDDLE: 'middle',\n  _TEXT_BOUNDS: '_textBoundsSingle',\n  _FONT_BOUNDS: '_fontBoundsSingle',\n  HANGING: 'hanging',\n  START: 'start',\n  END: 'end',\n};\n\nfunction textCore(p5, fn) {\n  const LeadingScale = 1.275;\n  const DefaultFill = '#000000';\n  const LinebreakRe = /\\r?\\n/g;\n  const CommaDelimRe = /,\\s+/;\n  const QuotedRe = /^\".*\"$/;\n  const TabsRe = /\\t/g;\n\n  const FontVariationSettings = 'fontVariationSettings';\n  const VariableAxes = ['wght', 'wdth', 'ital', 'slnt', 'opsz'];\n  const VariableAxesRe = new RegExp(`(?:${VariableAxes.join('|')})`);\n\n  const textFunctions = [\n    'text',\n    'textAlign',\n    'textAscent',\n    'textDescent',\n    'textLeading',\n    'textMode',\n    'textFont',\n    'textSize',\n    'textStyle',\n    'textWidth',\n    'textWrap',\n    'textBounds',\n    'textDirection',\n    'textProperty',\n    'textProperties',\n    'fontBounds',\n    'fontWidth',\n    'fontAscent',\n    'fontDescent',\n    'textWeight'\n  ];\n\n  /**\n   * Draws text to the canvas.\n   *\n   * The first parameter, `str`, is the text to be drawn. The second and third\n   * parameters, `x` and `y`, set the coordinates of the text's bottom-left\n   * corner. See <a href=\"#/p5/textAlign\">textAlign()</a> for other ways to\n   * align text.\n   *\n   * The fourth and fifth parameters, `maxWidth` and `maxHeight`, are optional.\n   * They set the dimensions of the invisible rectangle containing the text. By\n   * default, they set its  maximum width and height. See\n   * <a href=\"#/p5/rectMode\">rectMode()</a> for other ways to define the\n   * rectangular text box. Text will wrap to fit within the text box. Text\n   * outside of the box won't be drawn.\n   *\n   * Text can be styled a few ways. Call the <a href=\"#/p5/fill\">fill()</a>\n   * function to set the text's fill color. Call\n   * <a href=\"#/p5/stroke\">stroke()</a> and\n   * <a href=\"#/p5/strokeWeight\">strokeWeight()</a> to set the text's outline.\n   * Call <a href=\"#/p5/textSize\">textSize()</a> and\n   * <a href=\"#/p5/textFont\">textFont()</a> to set the text's size and font,\n   * respectively.\n   *\n   * Note: `WEBGL` mode only supports fonts loaded with\n   * <a href=\"#/p5/loadFont\">loadFont()</a>. Calling\n   * <a href=\"#/p5/stroke\">stroke()</a> has no effect in `WEBGL` mode.\n   *\n   * @method text\n   * @param {String|Object|Array|Number|Boolean} str text to be displayed.\n   * @param {Number} x          x-coordinate of the text box.\n   * @param {Number} y          y-coordinate of the text box.\n   * @param {Number} [maxWidth] maximum width of the text box. See\n   *                            <a href=\"#/p5/rectMode\">rectMode()</a> for\n   *                            other options.\n   * @param {Number} [maxHeight] maximum height of the text box. See\n   *                            <a href=\"#/p5/rectMode\">rectMode()</a> for\n   *                            other options.\n   *\n   * @for p5\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background(200);\n   *   text('hi', 50, 50);\n   *\n   *   describe('The text \"hi\" written in black in the middle of a gray square.');\n   * }\n   * </code>\n   * </div>\n   *\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background('skyblue');\n   *   textSize(100);\n   *   text('🌈', 0, 100);\n   *\n   *   describe('A rainbow in a blue sky.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   textSize(32);\n   *   fill(255);\n   *   stroke(0);\n   *   strokeWeight(4);\n   *   text('hi', 50, 50);\n   *\n   *   describe('The text \"hi\" written in white with a black outline.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background('black');\n   *   textSize(22);\n   *   fill('yellow');\n   *   text('rainbows', 6, 20);\n   *   fill('cornflowerblue');\n   *   text('rainbows', 6, 45);\n   *   fill('tomato');\n   *   text('rainbows', 6, 70);\n   *   fill('limegreen');\n   *   text('rainbows', 6, 95);\n   *\n   *   describe('The text \"rainbows\" written on several lines, each in a different color.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background(200);\n   *   let s = 'The quick brown fox jumps over the lazy dog.';\n   *   text(s, 10, 10, 70, 80);\n   *\n   *   describe('The sample text \"The quick brown fox...\" written in black across several lines.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background(200);\n   *   rectMode(CENTER);\n   *   let s = 'The quick brown fox jumps over the lazy dog.';\n   *   text(s, 50, 50, 70, 80);\n   *\n   *   describe('The sample text \"The quick brown fox...\" written in black across several lines.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div modernizr='webgl'>\n   * <code>\n   * let font;\n   *\n   * async function setup() {\n   *   createCanvas(100, 100, WEBGL);\n   *   font = await loadFont('assets/inconsolata.otf');\n   *   textFont(font);\n   *   textSize(32);\n   *   textAlign(CENTER, CENTER);\n   * }\n   *\n   * function draw() {\n   *   background(200);\n   *   rotateY(frameCount / 30);\n   *   text('p5*js', 0, 0);\n   *\n   *   describe('The text \"p5*js\" written in white and spinning in 3D.');\n   * }\n   * </code>\n   * </div>\n   */\n\n  /**\n   * Sets the way text is aligned when <a href=\"#/p5/text\">text()</a> is called.\n   *\n   * By default, calling `text('hi', 10, 20)` places the bottom-left corner of\n   * the text's bounding box at (10, 20).\n   *\n   * The first parameter, `horizAlign`, changes the way\n   * <a href=\"#/p5/text\">text()</a> interprets x-coordinates. By default, the\n   * x-coordinate sets the left edge of the bounding box. `textAlign()` accepts\n   * the following values for `horizAlign`: `LEFT`, `CENTER`, or `RIGHT`.\n   *\n   * The second parameter, `vertAlign`, is optional. It changes the way\n   * <a href=\"#/p5/text\">text()</a> interprets y-coordinates. By default, the\n   * y-coordinate sets the bottom edge of the bounding box. `textAlign()`\n   * accepts the following values for `vertAlign`: `TOP`, `BOTTOM`, `CENTER`,\n   * or `BASELINE`.\n   *\n   * @method textAlign\n   * @for p5\n   * @param {LEFT|CENTER|RIGHT} horizAlign horizontal alignment\n   * @param {TOP|BOTTOM|CENTER|BASELINE} [vertAlign] vertical alignment\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Draw a vertical line.\n   *   strokeWeight(0.5);\n   *   line(50, 0, 50, 100);\n   *\n   *   // Top line.\n   *   textSize(16);\n   *   textAlign(RIGHT);\n   *   text('ABCD', 50, 30);\n   *\n   *   // Middle line.\n   *   textAlign(CENTER);\n   *   text('EFGH', 50, 50);\n   *\n   *   // Bottom line.\n   *   textAlign(LEFT);\n   *   text('IJKL', 50, 70);\n   *\n   *   describe('The letters ABCD displayed at top-left, EFGH at center, and IJKL at bottom-right. A vertical line divides the canvas in half.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   strokeWeight(0.5);\n   *\n   *   // First line.\n   *   line(0, 12, width, 12);\n   *   textAlign(CENTER, TOP);\n   *   text('TOP', 50, 12);\n   *\n   *   // Second line.\n   *   line(0, 37, width, 37);\n   *   textAlign(CENTER, CENTER);\n   *   text('CENTER', 50, 37);\n   *\n   *   // Third line.\n   *   line(0, 62, width, 62);\n   *   textAlign(CENTER, BASELINE);\n   *   text('BASELINE', 50, 62);\n   *\n   *   // Fourth line.\n   *   line(0, 97, width, 97);\n   *   textAlign(CENTER, BOTTOM);\n   *   text('BOTTOM', 50, 97);\n   *\n   *   describe('The words \"TOP\", \"CENTER\", \"BASELINE\", and \"BOTTOM\" each drawn relative to a horizontal line. Their positions demonstrate different vertical alignments.');\n   * }\n   * </code>\n   * </div>\n   */\n\n  /**\n   * Returns the ascent of the text.\n   *\n   * The `textAscent()` function calculates the distance from the baseline to the\n   * highest point of the current font. This value represents the ascent, which is essential\n   * for determining the overall height of the text along with `textDescent()`. If\n   * a text string is provided as an argument, the ascent is calculated based on that specific\n   * string; otherwise, the ascent of the current font is returned.\n   *\n   * @method textAscent\n   * @for p5\n   *\n   * @param {String} [txt] - (Optional) The text string for which to calculate the ascent.\n   *                         If omitted, the function returns the ascent for the current font.\n   * @returns {Number} The ascent value in pixels.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(400, 300);\n   *   background(220);\n   *\n   *   textSize(48);\n   *   textAlign(LEFT, BASELINE);\n   *   textFont('Georgia');\n   *\n   *   let s = \"Hello, p5.js!\";\n   *   let x = 50, y = 150;\n   *\n   *   fill(0);\n   *   text(s, x, y);\n   *\n   *   // Get the ascent of the current font\n   *   let asc = textAscent();\n   *\n   *   // Draw a red line at the baseline and a blue line at the ascent position\n   *   stroke('red');\n   *   line(x, y, x + 200, y); // Baseline\n   *   stroke('blue');\n   *   line(x, y - asc, x + 200, y - asc); // Ascent (top of text)\n   *\n   *   noStroke();\n   *   fill(0);\n   *   textSize(16);\n   *   text(\"textAscent: \" + asc.toFixed(2) + \" pixels\", x, y - asc - 10);\n   * }\n   * </code>\n   * </div>\n   *\n   *\n   * @example\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup()  {\n   *   font = await loadFont('assets/inconsolata.otf');\n   *\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textFont(font);\n   *\n   *   // Different for each font.\n   *   let fontScale = 0.8;\n   *\n   *   let baseY = 75;\n   *   strokeWeight(0.5);\n   *\n   *   // Draw small text.\n   *   textSize(24);\n   *   text('dp', 0, baseY);\n   *\n   *   // Draw baseline and ascent.\n   *   let a = textAscent() * fontScale;\n   *   line(0, baseY, 23, baseY);\n   *   line(23, baseY - a, 23, baseY);\n   *\n   *   // Draw large text.\n   *   textSize(48);\n   *   text('dp', 45, baseY);\n   *\n   *   // Draw baseline and ascent.\n   *   a = textAscent() * fontScale;\n   *   line(45, baseY, 91, baseY);\n   *   line(91, baseY - a, 91, baseY);\n   *\n   *   describe('The letters \"dp\" written twice in different sizes. Each version has a horizontal baseline. A vertical line extends upward from each baseline to the top of the \"d\".');\n   * }\n   * </code>\n   * </div>\n   */\n\n\n  /**\n   * Returns the descent of the text.\n   *\n   * The `textDescent()` function calculates the distance from the baseline to the\n   * lowest point of the current font. This value represents the descent, which, when combined\n   * with the ascent (from `textAscent()`), determines the overall vertical span of the text.\n   * If a text string is provided as an argument, the descent is calculated based on that specific string;\n   * otherwise, the descent of the current font is returned.\n   *\n   * @method textDescent\n   * @for p5\n   *\n   * @param {String} [txt] - (Optional) The text string for which to calculate the descent.\n   *                         If omitted, the function returns the descent for the current font.\n   * @returns {Number} The descent value in pixels.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(400, 300);\n   *   background(220);\n   *\n   *   textSize(48);\n   *   textAlign(LEFT, BASELINE);\n   *   textFont('Georgia');\n   *\n   *   let s = \"Hello, p5.js!\";\n   *   let x = 50, y = 150;\n   *\n   *   fill(0);\n   *   text(s, x, y);\n   *\n   *   // Get the descent of the current font\n   *   let desc = textDescent();\n   *\n   *   // Draw a red line at the baseline and a blue line at the bottom of the text\n   *   stroke('red');\n   *   line(x, y, x + 200, y); // Baseline\n   *   stroke('blue');\n   *   line(x, y + desc, x + 200, y + desc); // Descent (bottom of text)\n   *\n   *   noStroke();\n   *   fill(0);\n   *   textSize(16);\n   *   text(\"textDescent: \" + desc.toFixed(2) + \" pixels\", x, y + desc + 20);\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup()  {\n   *   font = await loadFont('assets/inconsolata.otf');\n   *\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the font.\n   *   textFont(font);\n   *\n   *   // Different for each font.\n   *   let fontScale = 0.9;\n   *\n   *   let baseY = 75;\n   *   strokeWeight(0.5);\n   *\n   *   // Draw small text.\n   *   textSize(24);\n   *   text('dp', 0, baseY);\n   *\n   *   // Draw baseline and descent.\n   *   let d = textDescent() * fontScale;\n   *   line(0, baseY, 23, baseY);\n   *   line(23, baseY, 23, baseY + d);\n   *\n   *   // Draw large text.\n   *   textSize(48);\n   *   text('dp', 45, baseY);\n   *\n   *   // Draw baseline and descent.\n   *   d = textDescent() * fontScale;\n   *   line(45, baseY, 91, baseY);\n   *   line(91, baseY, 91, baseY + d);\n   *\n   *   describe('The letters \"dp\" written twice in different sizes. Each version has a horizontal baseline. A vertical line extends downward from each baseline to the bottom of the \"p\".');\n   * }\n   * </code>\n   * </div>\n   */\n\n/**\n * Sets the spacing between lines of text when\n * <a href=\"#/p5/text\">text()</a> is called.\n *\n * Note: Spacing is measured in pixels.\n *\n * Calling `textLeading()` without an argument returns the current spacing.\n *\n * @method textLeading\n * @for p5\n * @param {Number} leading The new text leading to apply, in pixels\n * @returns {Number} If no arguments are provided, the current text leading\n *\n * @example\n * <div>\n * <code>\n * function setup() {\n *   createCanvas(100, 100);\n *\n *   background(200);\n *\n *   // \"\\n\" starts a new line of text.\n *   let lines = 'one\\ntwo';\n *\n *   // Left.\n *   text(lines, 10, 25);\n *\n *   // Right.\n *   textLeading(30);\n *   text(lines, 70, 25);\n *\n *   describe('The words \"one\" and \"two\" written on separate lines twice. The words on the left have less vertical spacing than the words on the right.');\n * }\n * </code>\n * </div>\n */\n /*\n  * @method textLeading\n  * @for p5\n  */\n\n  /**\n   * Sets the font used by the <a href=\"#/p5/text\">text()</a> function.\n   *\n   * The first parameter, `font`, sets the font. `textFont()` recognizes either\n   * a <a href=\"#/p5.Font\">p5.Font</a> object or a string with the name of a\n   * system font. For example, `'Courier New'`.\n   *\n   * The second parameter, `size`, is optional. It sets the font size in pixels.\n   * This has the same effect as calling <a href=\"#/p5/textSize\">textSize()</a>.\n   *\n   * Note: `WEBGL` mode only supports fonts loaded with\n   * <a href=\"#/p5/loadFont\">loadFont()</a>.\n   *\n   * @method textFont\n   * @param {p5.Font|String|Object} font The font to apply\n   * @param {Number} [size] An optional text size to apply.\n   * @for p5\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background(200);\n   *   textFont('Courier New');\n   *   textSize(24);\n   *   text('hi', 35, 55);\n   *\n   *   describe('The text \"hi\" written in a black, monospace font on a gray background.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background('black');\n   *   fill('palegreen');\n   *   textFont('Courier New', 10);\n   *   text('You turn to the left and see a door. Do you enter?', 5, 5, 90, 90);\n   *   text('>', 5, 70);\n   *\n   *   describe('A text prompt from a game is written in a green, monospace font on a black background.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   background(200);\n   *   textFont('Verdana');\n   *   let currentFont = textFont();\n   *   text(currentFont, 25, 50);\n   *\n   *   describe('The text \"Verdana\" written in a black, sans-serif font on a gray background.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * let fontRegular;\n   * let fontItalic;\n   * let fontBold;\n   *\n   * async function setup() {\n   *   createCanvas(100, 100);\n   *   fontRegular = await loadFont('assets/Regular.otf');\n   *   fontItalic = await loadFont('assets/Italic.ttf');\n   *   fontBold = await loadFont('assets/Bold.ttf');\n   *\n   *   background(200);\n   *   textFont(fontRegular);\n   *   text('I am Normal', 10, 30);\n   *   textFont(fontItalic);\n   *   text('I am Italic', 10, 50);\n   *   textFont(fontBold);\n   *   text('I am Bold', 10, 70);\n   *\n   *   describe('The statements \"I am Normal\", \"I am Italic\", and \"I am Bold\" written in black on separate lines. The statements have normal, italic, and bold fonts, respectively.');\n   * }\n   * </code>\n   * </div>\n   */\n\n  /**\n   * Sets or gets the current text size.\n   *\n   * The `textSize()` function is used to specify the size of the text\n   * that will be rendered on the canvas. When called with an argument, it sets the\n   * text size to the specified value (which can be a number representing pixels or a\n   * CSS-style string, e.g., '32px', '2em'). When called without an argument, it\n   * returns the current text size in pixels.\n   *\n   * @method textSize\n   * @for p5\n   *\n   * @param {Number} size - The size to set for the text.\n   * @returns {Number} If no arguments are provided, the current text size in pixels.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(600, 200);\n   *   background(240);\n   *\n   *   // Set the text size to 48 pixels\n   *   textSize(48);\n   *   textAlign(CENTER, CENTER);\n   *   textFont(\"Georgia\");\n   *\n   *   // Draw text using the current text size\n   *   fill(0);\n   *   text(\"Hello, p5.js!\", width / 2, height / 2);\n   *\n   *   // Retrieve and display the current text size\n   *   let currentSize = textSize();\n   *   fill(50);\n   *   textSize(16);\n   *   text(\"Current text size: \" + currentSize, width / 2, height - 20);\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Top.\n   *   textSize(12);\n   *   text('Font Size 12', 10, 30);\n   *\n   *   // Middle.\n   *   textSize(14);\n   *   text('Font Size 14', 10, 60);\n   *\n   *   // Bottom.\n   *   textSize(16);\n   *   text('Font Size 16', 10, 90);\n   *\n   *   describe('The text \"Font Size 12\" drawn small, \"Font Size 14\" drawn medium, and \"Font Size 16\" drawn large.');\n   * }\n   * </code>\n   * </div>\n   */\n   /**\n    * @method textSize\n    * @for p5\n    * @returns {Number} The current text size in pixels.\n    */\n\n  /**\n   * Sets the style for system fonts when\n   * <a href=\"#/p5/text\">text()</a> is called.\n   *\n   * The parameter, `style`, can be either `NORMAL`, `ITALIC`, `BOLD`, or\n   * `BOLDITALIC`.\n   *\n   * `textStyle()` may be overridden by CSS styling. This function doesn't\n   * affect fonts loaded with <a href=\"#/p5/loadFont\">loadFont()</a>.\n   *\n   * @method textStyle\n   * @for p5\n   * @param {NORMAL|ITALIC|BOLD|BOLDITALIC} style The style to use\n   * @returns {NORMAL|ITALIC|BOLD|BOLDITALIC} If no arguments are provided, the current style\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textSize(12);\n   *   textAlign(CENTER);\n   *\n   *   // First row.\n   *   textStyle(NORMAL);\n   *   text('Normal', 50, 15);\n   *\n   *   // Second row.\n   *   textStyle(ITALIC);\n   *   text('Italic', 50, 40);\n   *\n   *   // Third row.\n   *   textStyle(BOLD);\n   *   text('Bold', 50, 65);\n   *\n   *   // Fourth row.\n   *   textStyle(BOLDITALIC);\n   *   text('Bold Italic', 50, 90);\n   *\n   *   describe('The words \"Normal\" displayed normally, \"Italic\" in italic, \"Bold\" in bold, and \"Bold Italic\" in bold italics.');\n   * }\n   * </code>\n   * </div>\n   */\n  /**\n   * @method textStyle\n   * @for p5\n   * @returns {NORMAL|BOLD|ITALIC|BOLDITALIC}\n   */\n\n\n  /**\n   * Calculates the width of the given text string in pixels.\n   *\n   * The `textWidth()` function processes the provided text string to determine its tight bounding box\n   * based on the current text properties such as font, textSize, and textStyle. Internally, it splits\n   * the text into individual lines (if line breaks are present) and computes the bounding box for each\n   * line using the renderer’s measurement functions. The final width is determined as the maximum width\n   * among all these lines.\n   *\n   * For example, if the text contains multiple lines due to wrapping or explicit line breaks, textWidth()\n   * will return the width of the longest line.\n   *\n   * @method textWidth\n   * @for p5\n   * @param {String} text The text to measure\n   * @returns {Number} The width of the text\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(200, 200);\n   *   background(220);\n   *\n   *   // Set text size and alignment\n   *   textSize(48);\n   *   textAlign(LEFT, TOP);\n   *\n   *   let myText = \"Hello\";\n   *\n   *   // Calculate the width of the text\n   *   let tw = textWidth(myText);\n   *\n   *   // Draw the text on the canvas\n   *   fill(0);\n   *   text(myText, 50, 50);\n   *\n   *   // Display the text width below\n   *   noStroke();\n   *   fill(0);\n   *   textSize(20);\n   *   text(\"Text width: \" + tw, 10, 150);\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textSize(28);\n   *   strokeWeight(0.5);\n   *\n   *   // Calculate the text width.\n   *   let s = 'yoyo';\n   *   let w = textWidth(s);\n   *\n   *   // Display the text.\n   *   text(s, 22, 55);\n   *\n   *   // Underline the text.\n   *   line(22, 55, 22 + w, 55);\n   *\n   *   describe('The word \"yoyo\" underlined.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textSize(28);\n   *   strokeWeight(0.5);\n   *\n   *   // Calculate the text width.\n   *   // \"\\n\" starts a new line.\n   *   let s = 'yo\\nyo';\n   *   let w = textWidth(s);\n   *\n   *   // Display the text.\n   *   text(s, 22, 55);\n   *\n   *   // Underline the text.\n   *   line(22, 55, 22 + w, 55);\n   *\n   *   describe('The word \"yo\" written twice, one copy beneath the other. The words are divided by a horizontal line.');\n   * }\n   * </code>\n   * </div>\n   */\n\n  /**\n   * Sets the style for wrapping text when\n   * <a href=\"#/p5/text\">text()</a> is called.\n   *\n   * The parameter, `style`, can be one of the following values:\n   *\n   * `WORD` starts new lines of text at spaces. If a string of text doesn't\n   * have spaces, it may overflow the text box and the canvas. This is the\n   * default style.\n   *\n   * `CHAR` starts new lines as needed to stay within the text box.\n   *\n   * `textWrap()` only works when the maximum width is set for a text box. For\n   * example, calling `text('Have a wonderful day', 0, 10, 100)` sets the\n   * maximum width to 100 pixels.\n   *\n   * Calling `textWrap()` without an argument returns the current style.\n   *\n   * @method textWrap\n   * @for p5\n   *\n   * @param {WORD|CHAR} style The wrapping style to use\n   * @returns {CHAR|WORD} If no arguments are provided, the current wrapping style\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textSize(20);\n   *   textWrap(WORD);\n   *\n   *   // Display the text.\n   *   text('Have a wonderful day', 0, 10, 100);\n   *\n   *   describe('The text \"Have a wonderful day\" written across three lines.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textSize(20);\n   *   textWrap(CHAR);\n   *\n   *   // Display the text.\n   *   text('Have a wonderful day', 0, 10, 100);\n   *\n   *   describe('The text \"Have a wonderful day\" written across two lines.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *\n   *   background(200);\n   *\n   *   // Style the text.\n   *   textSize(20);\n   *   textWrap(CHAR);\n   *\n   *   // Display the text.\n   *   text('祝你有美好的一天', 0, 10, 100);\n   *\n   *   describe('The text \"祝你有美好的一天\" written across two lines.');\n   * }\n   * </code>\n   * </div>\n   */\n   /**\n    * @method textWrap\n    * @for p5\n    * @returns {CHAR|WORD} The current wrapping style\n    */\n\n\n  /**\n   * Computes the tight bounding box for a block of text.\n   *\n   * The `textBounds()` function calculates the precise pixel boundaries that enclose\n   * the rendered text based on the current text properties (such as font, textSize, textStyle, and\n   * alignment). If the text spans multiple lines (due to line breaks or wrapping), the function\n   * measures each line individually and then aggregates these measurements into a single bounding box.\n   * The resulting object contains the x and y coordinates along with the width (w) and height (h)\n   * of the text block.\n   *\n   * @method textBounds\n   * @for p5\n   *\n   * @param {String} str - The text string to measure.\n   * @param {Number} x - The x-coordinate where the text is drawn.\n   * @param {Number} y - The y-coordinate where the text is drawn.\n   * @param {Number} [width] - (Optional) The maximum width available for the text block.\n   *                           When specified, the text may be wrapped to fit within this width.\n   * @param {Number} [height] - (Optional) The maximum height available for the text block.\n   *                            Any lines exceeding this height will be truncated.\n   * @returns {Object} An object with properties `x`, `y`, `w`, and `h` that represent the tight\n   *                   bounding box of the rendered text.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 200);\n   *   background(220);\n   *\n   *   // Set up text properties for clarity\n   *   textSize(32);\n   *   textAlign(LEFT, TOP);\n   *\n   *   let txt = \"Hello, World!\";\n   *   // Compute the bounding box for the text starting at (50, 50)\n   *   let bounds = textBounds(txt, 50, 50);\n   *\n   *   // Draw the text\n   *   fill(0);\n   *   text(txt, 50, 50);\n   *\n   *   // Draw the computed bounding box in red to visualize the measured area\n   *   noFill();\n   *   stroke('red');\n   *   rect(bounds.x, bounds.y, bounds.w, bounds.h);\n   * }\n   * </code>\n   * </div>\n   */\n\n\n  /**\n   * Sets or gets the text drawing direction.\n   *\n   * The <code>textDirection()</code> function allows you to specify the direction in which text is\n   * rendered on the canvas. When provided with a <code>direction</code> parameter (such as \"ltr\" for\n   * left-to-right, \"rtl\" for right-to-left, or \"inherit\"), it updates the renderer's state with that\n   * value and applies the new setting. When called without any arguments, it returns the current text\n   * direction. This function is particularly useful for rendering text in languages with different\n   * writing directions.\n   *\n   * @method textDirection\n   * @for p5\n   *\n   * @param {String} direction - The text direction to set (\"ltr\", \"rtl\", or \"inherit\").\n   * @returns {String} If no arguments are provided, the current text direction, either \"ltr\", \"rtl\", or \"inherit\"\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 300);\n   *   background(240);\n   *\n   *   textSize(32);\n   *   textFont(\"Georgia\");\n   *   textAlign(LEFT, TOP);\n   *\n   *   // Set text direction to right-to-left and draw Arabic text.\n   *   textDirection(\"rtl\");\n   *   fill(0);\n   *   text(\"مرحبًا!\", 50, 50);\n   *\n   *   // Set text direction to left-to-right and draw English text.\n   *   textDirection(\"ltr\");\n   *   text(\"Hello, p5.js!\", 50, 150);\n   *\n   *   // Display the current text direction.\n   *   textSize(16);\n   *   fill(50);\n   *   textAlign(LEFT, TOP);\n   *   text(\"Current textDirection: \" + textDirection(), 50, 250);\n   * }\n   * </code>\n   * </div>\n   */\n   /**\n    * @method textDirection\n    * @for p5\n    * @returns {String} The current text direction, either \"ltr\", \"rtl\", or \"inherit\"\n    */\n\n  /**\n   * Sets or gets a single text property for the renderer.\n   *\n   * The `textProperty()` function allows you to set or retrieve a single text-related property,\n   * such as `textAlign`, `textBaseline`, `fontStyle`, or any other property\n   * that may be part of the renderer's state, its drawing context, or the canvas style.\n   *\n   * When called with a `prop` and a `value`, the function sets the property by checking\n   * for its existence in the renderer's state, the drawing context, or the canvas style. If the property is\n   * successfully modified, the function applies the updated text properties. If called with only the\n   * `prop` parameter, the function returns the current value of that property.\n   *\n   * @method textProperty\n   * @for p5\n   *\n   * @param {String} prop - The name of the text property to set or get.\n   * @param value - The value to set for the specified text property. If omitted, the current\n   *                      value of the property is returned\n   * @returns If no arguments are provided, the current value of the specified text property\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 300);\n   *   background(240);\n   *\n   *   // Set the text alignment to CENTER and the baseline to TOP using textProperty.\n   *   textProperty(\"textAlign\", CENTER);\n   *   textProperty(\"textBaseline\", TOP);\n   *\n   *   // Set additional text properties and draw the text.\n   *   textSize(32);\n   *   textFont(\"Georgia\");\n   *   fill(0);\n   *   text(\"Hello, World!\", width / 2, 50);\n   *\n   *   // Retrieve and display the current text properties.\n   *   let currentAlign = textProperty(\"textAlign\");\n   *   let currentBaseline = textProperty(\"textBaseline\");\n   *\n   *   textSize(16);\n   *   textAlign(LEFT, TOP);\n   *   fill(50);\n   *   text(\"Current textAlign: \" + currentAlign, 50, 150);\n   *   text(\"Current textBaseline: \" + currentBaseline, 50, 170);\n   * }\n   * </code>\n   * </div>\n   */\n   /**\n    * @method textProperty\n    * @for p5\n    * @param {String} prop - The name of the text property to set or get.\n    * @returns The current value of the specified text property\n    */\n\n  /**\n   * Gets or sets text properties in batch, similar to calling `textProperty()`\n   * multiple times.\n   *\n   * If an object is passed in, `textProperty(key, value)` will be called for you\n   * on every key/value pair in the object.\n   *\n   * If no arguments are passed in, an object will be returned with all the current\n   * properties.\n   *\n   * @method textProperties\n   * @for p5\n   * @param {Object} properties An object whose keys are properties to set, and whose\n   *                            values are what they should be set to.\n   */\n  /**\n   * @method textProperties\n   * @for p5\n   * @returns {Object} An object with all the possible properties and their current values.\n   */\n\n  /**\n   * Computes a generic (non-tight) bounding box for a block of text.\n   *\n   * The `fontBounds()` function calculates the bounding box for the text based on the\n   * font's intrinsic metrics (such as `fontBoundingBoxAscent` and\n   * `fontBoundingBoxDescent`). Unlike `textBounds()`, which measures the exact\n   * pixel boundaries of the rendered text, `fontBounds()` provides a looser measurement\n   * derived from the font’s default spacing. This measurement is useful for layout purposes where\n   * a consistent approximation of the text's dimensions is desired.\n   *\n   * @method fontBounds\n   * @for p5\n   *\n   * @param {String} str - The text string to measure.\n   * @param {Number} x - The x-coordinate where the text is drawn.\n   * @param {Number} y - The y-coordinate where the text is drawn.\n   * @param {Number} [width] - (Optional) The maximum width available for the text block.\n   *                           When specified, the text may be wrapped to fit within this width.\n   * @param {Number} [height] - (Optional) The maximum height available for the text block.\n   *                            Any lines exceeding this height will be truncated.\n   * @returns {Object} An object with properties `x`, `y`, `w`, and `h` representing the loose\n   *                   bounding box of the text based on the font's intrinsic metrics.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 200);\n   *   background(240);\n   *\n   *   textSize(32);\n   *   textAlign(LEFT, TOP);\n   *   textFont('Georgia');\n   *\n   *   let txt = \"Hello, World!\";\n   *   // Compute the bounding box based on the font's intrinsic metrics\n   *   let bounds = fontBounds(txt, 50, 50);\n   *\n   *   fill(0);\n   *   text(txt, 50, 50);\n   *\n   *   noFill();\n   *   stroke('green');\n   *   rect(bounds.x, bounds.y, bounds.w, bounds.h);\n   *\n   *   noStroke();\n   *   fill(50);\n   *   textSize(15);\n   *   text(\"Font Bounds: x=\" + bounds.x.toFixed(1) + \", y=\" + bounds.y.toFixed(1) +\n   *        \", w=\" + bounds.w.toFixed(1) + \", h=\" + bounds.h.toFixed(1), 8, 100);\n   * }\n   * </code>\n   * </div>\n   */\n\n\n  /**\n   * Returns the loose width of a text string based on the current font.\n   *\n   * The `fontWidth()` function measures the width of the provided text string using\n   * the font's default measurement (i.e., the width property from the text metrics returned by\n   * the browser). Unlike `textWidth()`, which calculates the tight pixel boundaries\n   * of the text glyphs, `fontWidth()` uses the font's intrinsic spacing, which may include\n   * additional space for character spacing and kerning. This makes it useful for scenarios where\n   * an approximate width is sufficient for layout and positioning.\n   *\n   * @method fontWidth\n   * @for p5\n   *\n   * @param {String} theText - The text string to measure.\n   * @returns {Number} The loose width of the text in pixels.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 200);\n   *   background(240);\n   *\n   *   textSize(32);\n   *   textAlign(LEFT, TOP);\n   *   textFont('Georgia');\n   *\n   *   let s = \"Hello, World!\";\n   *   let fw = fontWidth(s);\n   *\n   *   fill(0);\n   *   text(s, 50, 50);\n   *\n   *   stroke('blue');\n   *   line(50, 90, 50 + fw, 90);\n   *\n   *   noStroke();\n   *   fill(50);\n   *   textSize(16);\n   *   text(\"Font width: \" + fw.toFixed(2) + \" pixels\", 50, 100);\n   * }\n   * </code>\n   * </div>\n   */\n\n\n  /**\n   * Returns the loose ascent of the text based on the font's intrinsic metrics.\n   *\n   * The `fontAscent()` function calculates the ascent of the text using the font's\n   * intrinsic metrics (e.g., `fontBoundingBoxAscent`). This value represents the space\n   * above the baseline that the font inherently occupies, and is useful for layout purposes when\n   * an approximate vertical measurement is required.\n   *\n   * @method fontAscent\n   * @for p5\n   *\n   * @returns {Number} The loose ascent value in pixels.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 300);\n   *   background(220);\n   *\n   *   textSize(48);\n   *   textAlign(LEFT, BASELINE);\n   *   textFont('Georgia');\n   *\n   *   let s = \"Hello, p5.js!\";\n   *   let x = 50, y = 150;\n   *\n   *   fill(0);\n   *   text(s, x, y);\n   *\n   *   // Get the font descent of the current font\n   *   let fasc = fontAscent();\n   *\n   *   // Draw a red line at the baseline and a blue line at the ascent position\n   *   stroke('red');\n   *   line(x, y, x + 200, y); // Baseline\n   *   stroke('blue');\n   *   line(x, y - fasc, x + 200, y - fasc); // Font ascent position\n   *\n   *   noStroke();\n   *   fill(0);\n   *   textSize(16);\n   *   text(\"fontAscent: \" + fasc.toFixed(2) + \" pixels\", x, y + fdesc + 20);\n   * }\n   * </code>\n   * </div>\n   */\n\n  /**\n   * Returns the loose descent of the text based on the font's intrinsic metrics.\n   *\n   * The `fontDescent()` function calculates the descent of the text using the font's\n   * intrinsic metrics (e.g., `fontBoundingBoxDescent`). This value represents the space\n   * below the baseline that the font inherently occupies, and is useful for layout purposes when\n   * an approximate vertical measurement is required.\n   *\n   * @method fontDescent\n   * @for p5\n   *\n   * @returns {Number} The loose descent value in pixels.\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 300);\n   *   background(220);\n   *\n   *   textSize(48);\n   *   textAlign(LEFT, BASELINE);\n   *   textFont('Georgia');\n   *\n   *   let s = \"Hello, p5.js!\";\n   *   let x = 50, y = 150;\n   *\n   *   fill(0);\n   *   text(s, x, y);\n   *\n   *   // Get the font descent of the current font\n   *   let fdesc = fontDescent();\n   *\n   *   // Draw a red line at the baseline and a blue line at the descent position\n   *   stroke('red');\n   *   line(x, y, x + 200, y); // Baseline\n   *   stroke('blue');\n   *   line(x, y + fdesc, x + 200, y + fdesc); // Font descent position\n   *\n   *   noStroke();\n   *   fill(0);\n   *   textSize(16);\n   *   text(\"fontDescent: \" + fdesc.toFixed(2) + \" pixels\", x, y + fdesc + 20);\n   * }\n   * </code>\n   * </div>\n   */\n\n  /**\n   *\n   * Sets or gets the current font weight.\n   *\n   * The <code>textWeight()</code> function is used to specify the weight (thickness) of the text.\n   * When a numeric value is provided, it sets the font weight to that value and updates the\n   * rendering properties accordingly (including the \"font-variation-settings\" on the canvas style).\n   * When called without an argument, it returns the current font weight setting.\n   *\n   * @method textWeight\n   * @for p5\n   *\n   * @param {Number} weight - The numeric weight value to set for the text.\n   * @returns {Number} If no arguments are provided, the current font weight\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(300, 200);\n   *   background(240);\n   *\n   *   // Set text alignment, size, and font\n   *   textAlign(LEFT, TOP);\n   *   textSize(20);\n   *   textFont(\"Georgia\");\n   *\n   *   // Draw text with a normal weight (lighter appearance)\n   *   push();\n   *   textWeight(400);  // Set font weight to 400\n   *   fill(0);\n   *   text(\"Normal\", 50, 50);\n   *   let normalWeight = textWeight();  // Should return 400\n   *   pop();\n   *\n   *   // Draw text with a bold weight (heavier appearance)\n   *   push();\n   *   textWeight(900);  // Set font weight to 900\n   *   fill(0);\n   *   text(\"Bold\", 50, 100);\n   *   let boldWeight = textWeight();  // Should return 900\n   *   pop();\n   *\n   *   // Display the current font weight values on the canvas\n   *   textSize(16);\n   *   fill(50);\n   *   text(\"Normal Weight: \" + normalWeight, 150, 52);\n   *   text(\"Bold Weight: \" + boldWeight, 150, 100);\n   * }\n   * </code>\n   * </div>\n   *\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup() {\n   *   createCanvas(100, 100);\n   *   font = await loadFont(\n   *     'https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap'\n   *   );\n   * }\n   *\n   * function draw() {\n   *   background(255);\n   *   textFont(font);\n   *   textAlign(LEFT, TOP);\n   *   textSize(35);\n   *   textWeight(sin(millis() * 0.002) * 200 + 400);\n   *   text('p5*js', 0, 10);\n   *   describe('The text p5*js pulsing its weight over time');\n   * }\n   * </code>\n   * </div>\n   */\n  /**\n   * @method textWeight\n   * @for p5\n   * @returns {Number} The current font weight\n   */\n\n  // attach each text func to p5, delegating to the renderer\n  textFunctions.forEach(func => {\n    fn[func] = function (...args) {\n      if (!(func in Renderer.prototype)) {\n        throw Error(`Renderer2D.prototype.${func} is not defined.`);\n      }\n      return this._renderer[func](...args);\n    };\n    // attach also to p5.Graphics.prototype\n    p5.Graphics.prototype[func] = function (...args) {\n      return this._renderer[func](...args);\n    };\n  });\n\n  const RendererTextProps = {\n    textAlign: { default: fn.LEFT, type: 'Context2d' },\n    textBaseline: { default: fn.BASELINE, type: 'Context2d' },\n    textFont: { default: { family: 'sans-serif' } },\n    textLeading: { default: 15 },\n    textSize: { default: 12 },\n    textWrap: { default: fn.WORD },\n    fontStretch: { default: fn.NORMAL, isShorthand: true },  // font-stretch: { default:  normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded }\n    fontWeight: { default: fn.NORMAL, isShorthand: true },   // font-stretch: { default:  normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded }\n    lineHeight: { default: fn.NORMAL, isShorthand: true },   // line-height: { default:  normal | number | length | percentage }\n    fontVariant: { default: fn.NORMAL, isShorthand: true },  // font-variant: { default:  normal | small-caps }\n    fontStyle: { default: fn.NORMAL, isShorthand: true },    // font-style: { default:  normal | italic | oblique } [was 'textStyle' in v1]\n    direction: { default: 'inherit' }, // direction: { default: inherit | ltr | rtl }\n  };\n\n  // note: font must be first here otherwise it may reset other properties\n  const ContextTextProps = ['font', 'direction', 'fontKerning', 'fontStretch', 'fontVariantCaps', 'letterSpacing', 'textAlign', 'textBaseline', 'textRendering', 'wordSpacing'];\n\n  // shorthand font properties that can be set with context2d.font\n  const ShorthandFontProps = Object.keys(RendererTextProps).filter(p => RendererTextProps[p].isShorthand);\n\n  // allowable values for font-stretch property for context2d.font\n  const FontStretchKeys = [\"ultra-condensed\", \"extra-condensed\", \"condensed\", \"semi-condensed\", \"normal\", \"semi-expanded\", \"expanded\", \"extra-expanded\", \"ultra-expanded\"];\n\n  let contextQueue, cachedDiv; // lazy\n\n  ////////////////////////////// start API ///////////////////////////////\n\n  Renderer.prototype.text = function (str, x, y, width, height) {\n\n    let setBaseline = this.textDrawingContext().textBaseline; // store baseline\n\n    // adjust {x,y,w,h} properties based on rectMode\n    ({ x, y, width, height } = this._handleRectMode(x, y, width, height));\n\n    // parse the lines according to width, height & linebreaks\n    let lines = this._processLines(str, width, height);\n\n    // add the adjusted positions [x,y] to each line\n    lines = this._positionLines(x, y, width, height, lines);\n\n    // render each line at the adjusted position\n    lines.forEach(line => this._renderText(line.text, line.x, line.y));\n\n    this.textDrawingContext().textBaseline = setBaseline; // restore baseline\n  };\n\n  /**\n   * Computes the precise (tight) bounding box for a block of text\n   * @param {String} str - the text to measure\n   * @param {Number} x - the x-coordinate of the text\n   * @param {Number} y - the y-coordinate of the text\n   * @param {Number} width - the max width of the text block\n   * @param {Number} height - the max height of the text block\n   * @returns - a bounding box object for the text block: {x,y,w,h}\n   * @private\n   */\n  Renderer.prototype.textBounds = function (str, x, y, width, height) {\n    // delegate to _textBoundsSingle for measuring\n    return this._computeBounds(textCoreConstants._TEXT_BOUNDS, str, x, y, width, height).bounds;\n  };\n\n  /**\n   * Computes a generic (non-tight) bounding box for a block of text\n   * @param {String} str - the text to measure\n   * @param {Number} x - the x-coordinate of the text\n   * @param {Number} y - the y-coordinate of the text\n   * @param {Number} width - the max width of the text block\n   * @param {Number} height - the max height of the text block\n   * @returns - a bounding box object for the text block: {x,y,w,h}\n   * @private\n   */\n  Renderer.prototype.fontBounds = function (str, x, y, width, height) {\n    // delegate to _fontBoundsSingle for measuring\n    return this._computeBounds(textCoreConstants._FONT_BOUNDS, str, x, y, width, height).bounds;\n  };\n\n  /**\n   * Get the width of a text string in pixels (tight bounds)\n   * @param {String} theText\n   * @returns - the width of the text in pixels\n   * @private\n   */\n  Renderer.prototype.textWidth = function (theText) {\n    let lines = this._processLines(theText);\n    // return the max width of the lines (using tight bounds)\n    return Math.max(...lines.map(l => this._textWidthSingle(l)));\n  };\n\n  /**\n   * Get the width of a text string in pixels (loose bounds)\n   * @param {String} theText\n   * @returns - the width of the text in pixels\n   * @private\n   */\n  Renderer.prototype.fontWidth = function (theText) {\n    // return the max width of the lines (using loose bounds)\n    let lines = this._processLines(theText);\n    return Math.max(...lines.map(l => this._fontWidthSingle(l)));\n  };\n\n  /**\n   * @param {*} txt - optional text to measure, if provided will be\n   * used to compute the ascent, otherwise the font's ascent will be used\n   * @returns - the ascent of the text\n   * @private\n   */\n  Renderer.prototype.textAscent = function (txt = '') {\n    if (!txt.length) return this.fontAscent();\n    return this.textDrawingContext().measureText(txt).actualBoundingBoxAscent;\n  };\n\n  /**\n   * @returns - returns the ascent for the current font\n   * @private\n   */\n  Renderer.prototype.fontAscent = function () {\n    return this.textDrawingContext().measureText('_').fontBoundingBoxAscent;\n  };\n\n  /**\n   * @param {*} txt - optional text to measure, if provided will\n   * be used to compute the descent, otherwise the font's descent will be used\n   * @returns - the descent of the text\n   * @private\n   */\n  Renderer.prototype.textDescent = function (txt = '') {\n    if (!txt.length) return this.fontDescent();\n    return this.textDrawingContext().measureText(txt).actualBoundingBoxDescent;\n  };\n\n  Renderer.prototype.fontDescent = function () {\n    return this.textDrawingContext().measureText('_').fontBoundingBoxDescent;\n  };\n\n\n  // setters/getters for text properties //////////////////////////\n\n  Renderer.prototype.textAlign = function (h, v) {\n\n    // the setter\n    if (typeof h !== 'undefined') {\n      this.states.setValue('textAlign', h);\n      if (typeof v !== 'undefined') {\n        if (v === fn.CENTER) {\n          v = textCoreConstants._CTX_MIDDLE;\n        }\n        this.states.setValue('textBaseline', v);\n      }\n      return this._applyTextProperties();\n    }\n    // the getter\n    return {\n      horizontal: this.states.textAlign,\n      vertical: this.states.textBaseline\n    };\n  };\n\n  Renderer.prototype._currentTextFont = function () {\n    return this.states.textFont.font || this.states.textFont.family;\n  };\n\n  /**\n   * Set the font and [size] and [options] for rendering text\n   * @param {p5.Font | string} font - the font to use for rendering text\n   * @param {Number} size - the size of the text, can be a number or a css-style string\n   * @param {Object} options - additional options for rendering text, see FontProps\n   * @private\n   */\n  Renderer.prototype.textFont = function (font, size, options) {\n\n    if (arguments.length === 0) {\n      return this._currentTextFont();\n    }\n\n    let family = font;\n\n    // do we have a custon loaded font ?\n    if (font instanceof p5.Font) {\n      family = font.face.family;\n    }\n    else if (font.data instanceof Uint8Array) {\n      family = font.name.fontFamily;\n      if (font.name?.fontSubfamily) {\n        family += '-' + font.name.fontSubfamily;\n      }\n    }\n    else if (typeof font === 'string') {\n      // direct set the font-string if it contains size\n      if (typeof size === 'undefined' && /[.0-9]+(%|em|p[xt])/.test(family)) {\n        //console.log('direct set font-string: ', family);\n        ({ family, size } = this._directSetFontString(family));\n      }\n    }\n\n    if (typeof family !== 'string') throw Error('null font in textFont()');\n\n    // handle two-arg case: textFont(font, options)\n    if (arguments.length === 2 && typeof size === 'object') {\n      options = size;\n      size = undefined;\n    }\n\n    // update font properties in this.states\n    this.states.setValue('textFont', { font, family, size });\n\n    // convert/update the size in this.states\n    if (typeof size !== 'undefined') {\n      this._setTextSize(size);\n    }\n\n    // apply any options to this.states\n    if (typeof options === 'object') {\n      this.textProperties(options);\n    }\n\n    return this._applyTextProperties();\n  };\n\n  Renderer.prototype._directSetFontString = function (font, debug = 0) {\n    if (debug) console.log('_directSetFontString\"' + font + '\"');\n\n    let defaults = ShorthandFontProps.reduce((props, p) => {\n      props[p] = RendererTextProps[p].default;\n      return props;\n    }, {});\n\n    let el = this._cachedDiv(defaults);\n    el.style.font = font;\n    let style = getComputedStyle(el);\n    ShorthandFontProps.forEach(prop => {\n      this.states[prop] = style[prop];\n      if (debug) console.log('  this.states.' + prop + '=\"' + style[prop] + '\"');\n    });\n\n    return { family: style.fontFamily, size: style.fontSize };\n  };\n\n  Renderer.prototype.textLeading = function (leading) {\n    // the setter\n    if (typeof leading === 'number') {\n      this.states.setValue('leadingSet', true);\n      this.states.setValue('textLeading', leading);\n      return this._applyTextProperties();\n    }\n    // the getter\n    return this.states.textLeading;\n  };\n\n  Renderer.prototype.textWeight = function (weight) {\n    // the setter\n    if (typeof weight === 'number') {\n      this.states.setValue('fontWeight', weight);\n      this._applyTextProperties();\n\n      // Safari works without weight set in the canvas style attribute, and actually\n      // has buggy behavior if it is present, using the wrong weight when drawing\n      // multiple times with different weights\n      if (!p5.prototype._isSafari()) {\n        this._setCanvasStyleProperty('font-variation-settings', `\"wght\" ${weight}`);\n      }\n      return;\n    }\n    // the getter\n    return this.states.fontWeight;\n  };\n\n  /**\n   * @param {*} size - the size of the text, can be a number or a css-style string\n   * @private\n   */\n  Renderer.prototype.textSize = function (size) {\n\n    // the setter\n    if (typeof size !== 'undefined') {\n      this._setTextSize(size);\n      return this._applyTextProperties();\n    }\n    // the getter\n    return this.states.textSize;\n  };\n\n  Renderer.prototype.textStyle = function (style) {\n\n    // the setter\n    if (typeof style !== 'undefined') {\n      this.states.setValue('fontStyle', style);\n      return this._applyTextProperties();\n    }\n    // the getter\n    return this.states.fontStyle;\n  };\n\n  Renderer.prototype.textWrap = function (wrapStyle) {\n\n    if (wrapStyle === fn.WORD || wrapStyle === fn.CHAR) {\n      this.states.setValue('textWrap', wrapStyle);\n      // no need to apply text properties here as not a context property\n      return this._pInst;\n    }\n    return this.states.textWrap;\n  };\n\n  Renderer.prototype.textDirection = function (direction) {\n\n    if (typeof direction !== 'undefined') {\n      this.states.setValue('direction', direction);\n      return this._applyTextProperties();\n    }\n    return this.states.direction;\n  };\n\n  /**\n   * Sets/gets a single text property for the renderer (eg. fontStyle, fontStretch, etc.)\n   * The property to be set can be a mapped or unmapped property on `this.states` or a property\n   * on `this.textDrawingContext()` or on `this.canvas.style`\n   * The property to get can exist in `this.states` or `this.textDrawingContext()` or `this.canvas.style`\n   * @private\n   */\n  Renderer.prototype.textProperty = function (prop, value, opts) {\n\n    let modified = false, debug = opts?.debug || false;\n\n    // getter: return option from this.states or this.textDrawingContext()\n    if (typeof value === 'undefined') {\n      let props = this.textProperties();\n      if (prop in props) return props[prop];\n      throw Error('Unknown text option \"' + prop + '\"'); // FES?\n    }\n\n    // set the option in this.states if it exists\n    if (prop in this.states && this.states[prop] !== value) {\n      this.states[prop] = value;\n      modified = true;\n      if (debug) {\n        console.log('this.states.' + prop + '=\"' + options[prop] + '\"');\n      }\n    }\n    // does it exist in CanvasRenderingContext2D ?\n    else if (prop in this.textDrawingContext()) {\n      this._setContextProperty(prop, value, debug);\n      modified = true;\n    }\n    // does it exist in the canvas.style ?\n    else if (prop in this.textCanvas().style) {\n      this._setCanvasStyleProperty(prop, value, debug);\n      modified = true;\n    }\n    else {\n      console.warn('Ignoring unknown text option: \"' + prop + '\"\\n'); // FES?\n    }\n\n    return modified ? this._applyTextProperties() : this._pInst;\n  };\n\n  /**\n   * Batch set/get text properties for the renderer.\n   * The properties can be either on `states` or `drawingContext`\n   * @private\n   */\n  Renderer.prototype.textProperties = function (properties) {\n\n    // setter\n    if (typeof properties !== 'undefined') {\n      Object.keys(properties).forEach(opt => {\n        this.textProperty(opt, properties[opt]);\n      });\n      return this._pInst;\n    }\n\n    // getter: get props from drawingContext\n    let context = this.textDrawingContext();\n    properties = ContextTextProps.reduce((props, p) => {\n      props[p] = context[p];\n      return props;\n    }, {});\n\n    // add renderer props\n    Object.keys(RendererTextProps).forEach(p => {\n      if (RendererTextProps[p]?.type === 'Context2d') {\n        properties[p] = context[p];\n      }\n      else { // a renderer.states property\n        if (p === 'textFont') {\n          // avoid circular ref. inside textFont\n          let current = this._currentTextFont();\n          if (typeof current === 'object' && '_pInst' in current) {\n            current = Object.assign({}, current);\n            delete current._pInst;\n          }\n          properties[p] = current;\n        }\n        else {\n          properties[p] = this.states[p];\n        }\n      }\n    });\n\n    return properties;\n  };\n\n  Renderer.prototype.textMode = function () { /* no-op for processing api */ };\n\n  /////////////////////////////// end API ////////////////////////////////\n\n  Renderer.prototype._currentTextFont = function () {\n    return this.states.textFont.font || this.states.textFont.family;\n  };\n\n  /*\n    Compute the bounds for a block of text based on the specified\n    measure function, either _textBoundsSingle or _fontBoundsSingle\n   * @private\n  */\n  Renderer.prototype._computeBounds = function (type, str, x, y, width, height, opts) {\n\n    let context = this.textDrawingContext();\n    let setBaseline = context.textBaseline;\n    let { textLeading, textAlign } = this.states;\n\n    // adjust width, height based on current rectMode\n    ({ width, height } = this._rectModeAdjust(x, y, width, height));\n\n    // parse the lines according to the width & linebreaks\n    let lines = this._processLines(str, width, height);\n\n    // get the adjusted positions [x,y] for each line\n    let boxes = lines.map((line, i) => this[type].bind(this)\n      (line, x, y + i * textLeading));\n\n    // adjust the bounding boxes based on horiz. text alignment\n    if (lines.length > 1) {\n      // Call the 2D mode version: the WebGL mode version does additional\n      // alignment adjustments to account for how WebGL renders text.\n      boxes.forEach(bb => bb.x += p5.Renderer2D.prototype._xAlignOffset.call(this, textAlign, width));\n    }\n\n    // adjust the bounding boxes based on vert. text alignment\n    if (typeof height !== 'undefined') {\n      // Call the 2D mode version: the WebGL mode version does additional\n      // alignment adjustments to account for how WebGL renders text.\n      p5.Renderer2D.prototype._yAlignOffset.call(this, boxes, height);\n    }\n\n    // get the bounds for the text block\n    let bounds = boxes[0];\n    if (lines.length > 1) {\n\n      // get the bounds for the multi-line text block\n      bounds = this._aggregateBounds(boxes);\n\n      // align the multi-line bounds\n      if (!opts?.ignoreRectMode) {\n        this._rectModeAlign(bounds, width || 0, height || 0);\n      }\n    }\n\n    context.textBaseline = setBaseline; // restore baseline\n\n    return { bounds, lines };\n  };\n\n  /*\n    Adjust width, height of bounds based on current rectMode\n   * @private\n  */\n  Renderer.prototype._rectModeAdjust = function (x, y, width, height) {\n\n    if (typeof width !== 'undefined') {\n      switch (this.states.rectMode) {\n        case fn.CENTER:\n          break;\n        case fn.CORNERS:\n          width -= x;\n          height -= y;\n          break;\n        case fn.RADIUS:\n          width *= 2;\n          height *= 2;\n          break;\n      }\n    }\n    return { x, y, width, height };\n  };\n\n  /*\n    Attempts to set a property directly on the canvas.style object\n   * @private\n  */\n  Renderer.prototype._setCanvasStyleProperty = function (opt, val, debug) {\n\n    let value = val.toString(); // ensure its a string\n\n    if (debug) console.log('canvas.style.' + opt + '=\"' + value + '\"');\n\n    // handle variable fonts options\n    if (opt === FontVariationSettings) {\n      this._handleFontVariationSettings(value);\n    }\n\n    // lets try to set it on the canvas style\n    this.textCanvas().style[opt] = value;\n\n    // check if the value was set successfully\n    if (this.textCanvas().style[opt] !== value) ;\n  };\n\n  /*\n    Parses the fontVariationSettings string and sets the font properties, only font-weight\n    working consistently across browsers at present\n   * @private\n  */\n  Renderer.prototype._handleFontVariationSettings = function (value, debug = false) {\n    // check if the value is a string or an object\n    if (typeof value === 'object') {\n      value = Object.keys(value).map(k => k + ' ' + value[k]).join(', ');\n    }\n    let values = value.split(CommaDelimRe);\n    values.forEach(v => {\n      v = v.replace(/[\"']/g, ''); // remove quotes\n      let matches = VariableAxesRe.exec(v);\n      //console.log('matches: ', matches);\n      if (matches && matches.length) {\n        let axis = matches[0];\n        // get the value to 3 digits of precision with no trailing zeros\n        let val = parseFloat(parseFloat(v.replace(axis, '').trim()).toFixed(3));\n        switch (axis) {\n          case 'wght':\n            if (debug) console.log('setting font-weight=' + val);\n            // manually set the font-weight via the font string\n            if (this.states.fontWeight !== val) this.textWeight(val);\n            return val;\n          case 'wdth':\n            break;\n          case 'ital':\n            if (debug) console.log('setting font-style=' + (val ? 'italic' : 'normal'));\n            break;\n          case 'slnt':\n            if (debug) console.log('setting font-style=' + (val ? 'oblique' : 'normal'));\n            break;\n          case 'opsz':\n            if (debug) console.log('setting font-optical-size=' + val);\n            break;\n        }\n      }\n    });\n  };\n\n\n\n\n  /*\n    For properties not directly managed by the renderer in this.states\n      we check if it has a mapping to a property in this.states\n    Otherwise, add the property to the context-queue for later application\n  */\n  Renderer.prototype._setContextProperty = function (prop, val, debug = false) {\n\n    // check if the value is actually different, else short-circuit\n    if (this.textDrawingContext()[prop] === val) {\n      return this._pInst;\n    }\n\n    // otherwise, we will set the property directly on the `this.textDrawingContext()`\n    // by adding [property, value] to context-queue for later application\n    (contextQueue ??= []).push([prop, val]);\n\n    if (debug) console.log('queued context2d.' + prop + '=\"' + val + '\"');\n  };\n\n  /*\n     Adjust parameters (x,y,w,h) based on current rectMode\n  */\n  Renderer.prototype._handleRectMode = function (x, y, width, height) {\n\n    let rectMode = this.states.rectMode;\n\n    if (typeof width !== 'undefined') {\n      switch (rectMode) {\n        case fn.RADIUS:\n          width *= 2;\n          x -= width / 2;\n          if (typeof height !== 'undefined') {\n            height *= 2;\n            y -= height / 2;\n          }\n          break;\n        case fn.CENTER:\n          x -= width / 2;\n          if (typeof height !== 'undefined') {\n            y -= height / 2;\n          }\n          break;\n        case fn.CORNERS:\n          width -= x;\n          if (typeof height !== 'undefined') {\n            height -= y;\n          }\n          break;\n      }\n    }\n    return { x, y, width, height };\n  };\n\n  /*\n    Get the computed font-size in pixels for a given size string\n    @param {String} size - the font-size string to compute\n    @returns {number} - the computed font-size in pixels\n   * @private\n   */\n  Renderer.prototype._fontSizePx = function (theSize, { family } = this.states.textFont) {\n\n    const isNumString = (num) => !isNaN(num) && num.trim() !== '';\n\n    // check for a number in a string, eg '12'\n    if (isNumString(theSize)) {\n      return parseFloat(theSize);\n    }\n    let ele = this._cachedDiv({ fontSize: theSize });\n    ele.style.fontSize = theSize;\n    ele.style.fontFamily = family;\n    let fontSizeStr = getComputedStyle(ele).fontSize;\n    let fontSize = parseFloat(fontSizeStr);\n    if (typeof fontSize !== 'number') {\n      throw Error('textSize: invalid font-size');\n    }\n    return fontSize;\n  };\n\n  Renderer.prototype._cachedDiv = function (props) {\n    if (typeof cachedDiv === 'undefined') {\n      let ele = document.createElement('div');\n      ele.ariaHidden = 'true';\n      ele.style.display = 'none';\n      Object.entries(props).forEach(([prop, val]) => {\n        ele.style[prop] = val;\n      });\n      this.textCanvas().appendChild(ele);\n      cachedDiv = ele;\n    }\n    return cachedDiv;\n  };\n\n\n  /*\n    Aggregate the bounding boxes of multiple lines of text\n    @param {Array} bboxes - the bounding boxes to aggregate\n    @returns {object} - the aggregated bounding box\n   * @private\n  */\n  Renderer.prototype._aggregateBounds = function (bboxes) {\n    // loop over the bounding boxes to get the min/max x/y values\n    let minX = Math.min(...bboxes.map(b => b.x));\n    let minY = Math.min(...bboxes.map(b => b.y));\n    let maxY = Math.max(...bboxes.map(b => b.y + b.h));\n    let maxX = Math.max(...bboxes.map(b => b.x + b.w));\n    return { x: minX, y: minY, w: maxX - minX, h: maxY - minY };\n  };\n\n  // Renderer.prototype._aggregateBounds = function (tx, ty, bboxes) {\n  //   let x = Math.min(...bboxes.map(b => b.x));\n  //   let y = Math.min(...bboxes.map(b => b.y));\n  //   // the width is the max of the x-offset + the box width\n  //   let w = Math.max(...bboxes.map(b => (b.x - tx) + b.w));\n  //   let h = bboxes[bboxes.length - 1].y - bboxes[0].y + bboxes[bboxes.length - 1].h;\n\n\n  //   return { x, y, w, h };\n  // };\n\n  /*\n    Process the text string to handle line-breaks and text wrapping\n    @param {String} str - the text to process\n    @param {Number} width - the width to wrap the text to\n    @returns {array} - the processed lines of text\n   * @private\n  */\n  Renderer.prototype._processLines = function (str, width, height) {\n\n    if (typeof width !== 'undefined') { // only for text with bounds\n      let drawingContext = this.textDrawingContext();\n      if (drawingContext.textBaseline === fn.BASELINE) {\n        this.drawingContext.textBaseline = fn.TOP;\n      }\n    }\n\n    let lines = this._splitOnBreaks(str.toString());\n    let hasLineBreaks = lines.length > 1;\n    let hasWidth = typeof width !== 'undefined';\n    let exceedsWidth = hasWidth && lines.some(l => this._textWidthSingle(l) > width);\n    let { textLeading: leading, textWrap } = this.states;\n\n    //if (!hasLineBreaks && !exceedsWidth) return lines; // a single-line\n    if (hasLineBreaks || exceedsWidth) {\n      if (hasWidth) lines = this._lineate(textWrap, lines, width);\n    }\n\n    // handle height truncation\n    if (hasWidth && typeof height !== 'undefined') {\n\n      if (typeof leading === 'undefined') {\n        throw Error('leading is required if height is specified');\n      }\n\n      // truncate lines that exceed the height\n      for (let i = 0; i < lines.length; i++) {\n        let lh = leading * (i + 1);\n        if (lh > height) {\n          //console.log('TRUNCATING: ', i, '-', lines.length, '\"' + lines.slice(i) + '\"');\n          lines = lines.slice(0, i);\n          break;\n        }\n      }\n    }\n\n    return lines;\n  };\n\n  /*\n    Get the x-offset for text given the width and textAlign property\n  */\n  Renderer.prototype._xAlignOffset = function (textAlign, width) {\n    switch (textAlign) {\n      case fn.LEFT:\n        return 0;\n      case fn.CENTER:\n        return width / 2;\n      case fn.RIGHT:\n        return width;\n      case textCoreConstants.START:\n        return 0;\n      case textCoreConstants.END:\n        throw new Error('textBounds: END not yet supported for textAlign');\n      default:\n        return 0;\n    }\n  };\n\n  /*\n    Align the bounding box based on the current rectMode setting\n  */\n  Renderer.prototype._rectModeAlign = function (bb, width, height) {\n    if (typeof width !== 'undefined') {\n\n      switch (this.states.rectMode) {\n        case fn.CENTER:\n          bb.x -= (width - bb.w) / 2;\n          bb.y -= (height - bb.h) / 2;\n          break;\n        case fn.CORNERS:\n          bb.w += bb.x;\n          bb.h += bb.y;\n          break;\n        case fn.RADIUS:\n          bb.x -= (width - bb.w) / 2;\n          bb.y -= (height - bb.h) / 2;\n          bb.w /= 2;\n          bb.h /= 2;\n          break;\n      }\n      return bb;\n    }\n  };\n\n  Renderer.prototype._rectModeAlignRevert = function (bb, width, height) {\n    if (typeof width !== 'undefined') {\n\n      switch (this.states.rectMode) {\n        case fn.CENTER:\n          bb.x += (width - bb.w) / 2;\n          bb.y += (height - bb.h) / 2;\n          break;\n        case fn.CORNERS:\n          bb.w -= bb.x;\n          bb.h -= bb.y;\n          break;\n        case fn.RADIUS:\n          bb.x += (width - bb.w) / 2;\n          bb.y += (height - bb.h) / 2;\n          bb.w *= 2;\n          bb.h *= 2;\n          break;\n      }\n      return bb;\n    }\n  };\n\n  /*\n    Get the (tight) width of a single line of text\n  */\n  Renderer.prototype._textWidthSingle = function (s) {\n    let metrics = this.textDrawingContext().measureText(s);\n    let abl = metrics.actualBoundingBoxLeft;\n    let abr = metrics.actualBoundingBoxRight;\n    return abr + abl;\n  };\n\n  /*\n    Get the (loose) width of a single line of text as specified by the font\n  */\n  Renderer.prototype._fontWidthSingle = function (s) {\n    return this.textDrawingContext().measureText(s).width;\n  };\n\n  /*\n    Get the (tight) bounds of a single line of text based on its actual bounding box\n  */\n  Renderer.prototype._textBoundsSingle = function (s, x = 0, y = 0) {\n\n    let metrics = this.textDrawingContext().measureText(s);\n    let asc = metrics.actualBoundingBoxAscent;\n    let desc = metrics.actualBoundingBoxDescent;\n    let abl = metrics.actualBoundingBoxLeft;\n    let abr = metrics.actualBoundingBoxRight;\n    return { x: x - abl, y: y - asc, w: abr + abl, h: asc + desc };\n  };\n\n  /*\n    Get the (loose) bounds of a single line of text based on its font's bounding box\n  */\n  Renderer.prototype._fontBoundsSingle = function (s, x = 0, y = 0) {\n\n    let metrics = this.textDrawingContext().measureText(s);\n    let asc = metrics.fontBoundingBoxAscent;\n    let desc = metrics.fontBoundingBoxDescent;\n    x -= this._xAlignOffset(this.states.textAlign, metrics.width);\n    return { x, y: y - asc, w: metrics.width, h: asc + desc };  };\n\n  /*\n    Set the textSize property in `this.states` if it has changed\n    @param {number | string} theSize - the font-size to set\n    @returns {boolean} - true if the size was changed, false otherwise\n   */\n  Renderer.prototype._setTextSize = function (theSize) {\n\n    if (typeof theSize === 'string') {\n      // parse the size string via computed style, eg '2em'\n      theSize = this._fontSizePx(theSize);\n    }\n\n    // should be a number now\n    if (typeof theSize === 'number') {\n\n      // set it in `this.states` if its been changed\n      if (this.states.textSize !== theSize) {\n        this.states.setValue('textSize', theSize);\n\n        // handle leading here, if not set otherwise\n        if (!this.states.leadingSet) {\n          this.states.setValue('textLeading', this.states.textSize * LeadingScale);\n        }\n        return true; // size was changed\n      }\n    }\n    else {\n      console.warn('textSize: invalid size: ' + theSize);\n    }\n\n    return false;\n  };\n\n  /*\n    Split the lines of text based on the width and the textWrap property\n    @param {Array} lines - the lines of text to split\n    @param {Number} maxWidth - the maximum width of the lines\n    @param {Object} opts - additional options for splitting the lines\n    @returns {array} - the split lines of text\n   * @private\n  */\n  Renderer.prototype._lineate = function (textWrap, lines, maxWidth = Infinity, opts = {}) {\n\n    let splitter = opts.splitChar ?? (textWrap === fn.WORD ? ' ' : '');\n    let line, testLine, testWidth, words, newLines = [];\n\n    for (let lidx = 0; lidx < lines.length; lidx++) {\n      line = '';\n      words = lines[lidx].split(splitter);\n      for (let widx = 0; widx < words.length; widx++) {\n        testLine = `${line + words[widx]}` + splitter;\n        testWidth = this._textWidthSingle(testLine);\n        if (line.length > 0 && testWidth > maxWidth) {\n          newLines.push(line.trim());\n          line = `${words[widx]}` + splitter;\n        } else {\n          line = testLine;\n        }\n      }\n      newLines.push(line.trim());\n    }\n    return newLines;\n  };\n\n  /*\n    Split the text into lines based on line-breaks and tabs\n  */\n  Renderer.prototype._splitOnBreaks = function (s) {\n    if (!s || s.length === 0) return [''];\n    return s.replace(TabsRe, '  ').split(LinebreakRe);\n  };\n\n  /*\n    Parse the font-family string to handle complex names, fallbacks, etc.\n  */\n  Renderer.prototype._parseFontFamily = function (familyStr) {\n\n    let parts = familyStr.split(CommaDelimRe);\n    let family = parts.map(part => {\n      part = part.trim();\n      if (part.indexOf(' ') > -1 && !QuotedRe.test(part)) {\n        part = `\"${part}\"`; // quote font names with spaces\n      }\n      return part;\n    }).join(', ');\n\n    return family;\n  };\n\n  Renderer.prototype._applyFontString = function () {\n    /*\n      Create the font-string according to the CSS font-string specification:\n      If font is specified as a shorthand for several font-related properties, then:\n      - it must include values for: <font-size> and <font-family>\n      - it may optionally include values for:\n          [<font-style>, <font-variant>, <font-weight>, <font-stretch>, <line-height>]\n      Format:\n      - font-style, font-variant and font-weight must precede font-size\n      - font-variant may only specify the values defined in CSS 2.1, that is 'normal' and 'small-caps'.\n      - font-stretch may only be a single keyword value.\n      - line-height must immediately follow font-size, preceded by \"/\", eg 16px/3.\n      - font-family must be the last value specified.\n    */\n    let { textFont, textSize, lineHeight, fontStyle, fontWeight, fontVariant } = this.states;\n    let drawingContext = this.textDrawingContext();\n\n    let family = this._parseFontFamily(textFont.family);\n    let style = fontStyle !== fn.NORMAL ? `${fontStyle} ` : '';\n    let weight = fontWeight !== fn.NORMAL ? `${fontWeight} ` : '';\n    let variant = fontVariant !== fn.NORMAL ? `${fontVariant} ` : '';\n    let fsize = `${textSize}px` + (lineHeight !== fn.NORMAL ? `/${lineHeight} ` : ' ');\n    let fontString = `${style}${variant}${weight}${fsize}${family}`.trim();\n    //console.log('fontString=\"' + fontString + '\"');\n\n    // set the font string on the context\n    drawingContext.font = fontString;\n\n    // verify that it was set successfully\n    if (drawingContext.font !== fontString) {\n      let expected = fontString;\n      let actual = drawingContext.font;\n      if (expected !== actual) {\n        //console.warn(`Unable to set font property on context2d. It may not be supported.`);\n        //console.log('Expected \"' + expected + '\" but got: \"' + actual + '\"'); // TMP\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /*\n    Apply the text properties in `this.states` to the `this.textDrawingContext()`\n    Then apply any properties in the context-queue\n   */\n  Renderer.prototype._applyTextProperties = function (debug = false) {\n\n    this._applyFontString();\n\n    // set these after the font so they're not overridden\n    let context = this.textDrawingContext();\n    context.direction = this.states.direction;\n    context.textAlign = this.states.textAlign;\n    context.textBaseline = this.states.textBaseline;\n\n    // set manually as (still) not fully supported as part of font-string\n    let stretch = this.states.fontStretch;\n    if (FontStretchKeys.includes(stretch) && context.fontStretch !== stretch) {\n      context.fontStretch = stretch;\n    }\n\n    // apply each property in queue after the font so they're not overridden\n    while (contextQueue?.length) {\n\n      let [prop, val] = contextQueue.shift();\n      if (debug) console.log('apply context property \"' + prop + '\" = \"' + val + '\"');\n      context[prop] = val;\n\n      // check if the value was set successfully\n      if (context[prop] !== val) {\n        console.warn(`Unable to set '${prop}' property on context2d. It may not be supported.`); // FES?\n        console.log('Expected \"' + val + '\" but got: \"' + context[prop] + '\"');\n      }\n    }\n\n    return this._pInst;\n  };\n\n  if (p5.Renderer2D) {\n    p5.Renderer2D.prototype.textCanvas = function () {\n      return this.canvas;\n    };\n    p5.Renderer2D.prototype.textDrawingContext = function () {\n      return this.drawingContext;\n    };\n\n    p5.Renderer2D.prototype._renderText = function (text, x, y, maxY, minY) {\n      let states = this.states;\n      let context = this.textDrawingContext();\n\n      if (y < minY || y >= maxY) {\n        return; // don't render lines beyond minY/maxY\n      }\n\n      this.push();\n\n      // no stroke unless specified by user\n      if (states.strokeColor && states.strokeSet) {\n        context.strokeText(text, x, y);\n      }\n\n      if (!this._clipping && states.fillColor) {\n\n        // if fill hasn't been set by user, use default text fill\n        if (!states.fillSet) {\n          this._setFill(DefaultFill);\n        }\n        context.fillText(text, x, y);\n      }\n\n      this.pop();\n    };\n\n    /*\n      Position the lines of text based on their textAlign/textBaseline properties\n    */\n    p5.Renderer2D.prototype._positionLines = function (x, y, width, height, lines) {\n\n      let { textLeading, textAlign } = this.states;\n      let adjustedX, lineData = new Array(lines.length);\n      let adjustedW = typeof width === 'undefined' ? 0 : width;\n      let adjustedH = typeof height === 'undefined' ? 0 : height;\n\n      for (let i = 0; i < lines.length; i++) {\n        switch (textAlign) {\n          case textCoreConstants.START:\n            throw new Error('textBounds: START not yet supported for textAlign'); // default to LEFT\n          case fn.LEFT:\n            adjustedX = x;\n            break;\n          case fn.CENTER:\n            adjustedX = x + adjustedW / 2;\n            break;\n          case fn.RIGHT:\n            adjustedX = x + adjustedW;\n            break;\n          case textCoreConstants.END:\n            throw new Error('textBounds: END not yet supported for textAlign');\n        }\n        lineData[i] = { text: lines[i], x: adjustedX, y: y + i * textLeading };\n      }\n\n      return this._yAlignOffset(lineData, adjustedH);\n    };\n\n    /*\n      Get the y-offset for text given the height, leading, line-count and textBaseline property\n    */\n    p5.Renderer2D.prototype._yAlignOffset = function (dataArr, height) {\n\n      if (typeof height === 'undefined') {\n        throw Error('_yAlignOffset: height is required');\n      }\n\n      let { textLeading, textBaseline } = this.states;\n      let yOff = 0, numLines = dataArr.length;\n      let ydiff = height - (textLeading * (numLines - 1));\n      switch (textBaseline) { // drawingContext ?\n        case fn.TOP:\n          break; // ??\n        case fn.BASELINE:\n          break;\n        case textCoreConstants._CTX_MIDDLE:\n          yOff = ydiff / 2;\n          break;\n        case fn.BOTTOM:\n          yOff = ydiff;\n          break;\n        case textCoreConstants.IDEOGRAPHIC:\n          console.warn('textBounds: IDEOGRAPHIC not yet supported for textBaseline'); // FES?\n          break;\n        case textCoreConstants.HANGING:\n          console.warn('textBounds: HANGING not yet supported for textBaseline'); // FES?\n          break;\n      }\n      dataArr.forEach(ele => ele.y += yOff);\n      return dataArr;\n    };\n  }\n\n  if (p5.RendererGL) {\n    p5.RendererGL.prototype.textCanvas = function() {\n      if (!this._textCanvas) {\n        this._textCanvas = document.createElement('canvas');\n        this._textCanvas.width = 1;\n        this._textCanvas.height = 1;\n        this._textCanvas.style.display = 'none';\n        // Has to be added to the DOM for measureText to work properly!\n        this.canvas.parentElement.insertBefore(this._textCanvas, this.canvas);\n      }\n      return this._textCanvas;\n    };\n    p5.RendererGL.prototype.textDrawingContext = function() {\n      if (!this._textDrawingContext) {\n        const textCanvas = this.textCanvas();\n        this._textDrawingContext = textCanvas.getContext('2d');\n      }\n      return this._textDrawingContext;\n    };\n    const oldRemove = p5.RendererGL.prototype.remove;\n    p5.RendererGL.prototype.remove = function() {\n      if (this._textCanvas) {\n        this._textCanvas.parentElement.removeChild(this._textCanvas);\n      }\n      oldRemove.call(this);\n    };\n\n    p5.RendererGL.prototype._positionLines = function (x, y, width, height, lines) {\n\n      let { textLeading, textAlign } = this.states;\n      const widths = lines.map((line) => this._fontWidthSingle(line));\n      let adjustedX, lineData = new Array(lines.length);\n      let adjustedW = typeof width === 'undefined' ? Math.max(0, ...widths) : width;\n      let adjustedH = typeof height === 'undefined' ? 0 : height;\n\n      for (let i = 0; i < lines.length; i++) {\n        switch (textAlign) {\n          case textCoreConstants.START:\n            throw new Error('textBounds: START not yet supported for textAlign'); // default to LEFT\n          case fn.LEFT:\n            adjustedX = x;\n            break;\n          case fn.CENTER:\n            adjustedX = x + (adjustedW - widths[i]) / 2 - adjustedW / 2 + (width || 0) / 2;\n            break;\n          case fn.RIGHT:\n            adjustedX = x + adjustedW - widths[i] - adjustedW + (width || 0);\n            break;\n          case textCoreConstants.END:\n            throw new Error('textBounds: END not yet supported for textAlign');\n        }\n        lineData[i] = { text: lines[i], x: adjustedX, y: y + i * textLeading };\n      }\n\n      return this._yAlignOffset(lineData, adjustedH);\n    };\n\n    p5.RendererGL.prototype._yAlignOffset = function (dataArr, height) {\n\n      if (typeof height === 'undefined') {\n        throw Error('_yAlignOffset: height is required');\n      }\n\n      let { textLeading, textBaseline, textSize, textFont } = this.states;\n      let yOff = 0, numLines = dataArr.length;\n      let totalHeight = textSize * numLines + ((textLeading - textSize) * (numLines - 1));\n      switch (textBaseline) { // drawingContext ?\n        case fn.TOP:\n          yOff = textSize;\n          break;\n        case fn.BASELINE:\n          break;\n        case textCoreConstants._CTX_MIDDLE:\n          yOff = -totalHeight / 2 + textSize + (height || 0) / 2;\n          break;\n        case fn.BOTTOM:\n          yOff = -(totalHeight - textSize) + (height || 0);\n          break;\n        default:\n          console.warn(`${textBaseline} is not supported in WebGL mode.`); // FES?\n          break;\n      }\n      yOff += this.states.textFont.font?._verticalAlign(textSize) || 0; // Does this function exist?\n      dataArr.forEach(ele => ele.y += yOff);\n      return dataArr;\n    };\n  }\n}\n\nif (typeof p5 !== 'undefined') {\n  textCore(p5, p5.prototype);\n}\n\nexport { textCore as default, textCoreConstants };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2475, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ryan%20Purnomo/Bahasa-Pemrograman/Website/Javascript/NextJS/CG-GAMES/node_modules/p5/dist/type/unicodeRanges.js"],"sourcesContent":["// From https://github.com/radiovisual/unicode-range-json,\n// with decimal ranges removed to save space, and with category\n// names converted to lowercase ahead of time\nconst unicodeRanges = [\n  {\n    category: \"control character\",\n    hexrange: [\"0000\", \"001f\"],\n  },\n  {\n    category: \"basic latin\",\n    hexrange: [\"0000\", \"007f\"],\n  },\n  {\n    category: \"latin-1 supplement\",\n    hexrange: [\"0080\", \"00ff\"],\n  },\n  {\n    category: \"latin extended-a\",\n    hexrange: [\"0100\", \"017f\"],\n  },\n  {\n    category: \"latin extended-b\",\n    hexrange: [\"0180\", \"024f\"],\n  },\n  {\n    category: \"ipa extensions\",\n    hexrange: [\"0250\", \"02af\"],\n  },\n  {\n    category: \"spacing modifier letters\",\n    hexrange: [\"02b0\", \"02ff\"],\n  },\n  {\n    category: \"combining diacritical marks\",\n    hexrange: [\"0300\", \"036f\"],\n  },\n  {\n    category: \"greek and coptic\",\n    hexrange: [\"0370\", \"03ff\"],\n  },\n  {\n    category: \"cyrillic\",\n    hexrange: [\"0400\", \"04ff\"],\n  },\n  {\n    category: \"cyrillic supplement\",\n    hexrange: [\"0500\", \"052f\"],\n  },\n  {\n    category: \"armenian\",\n    hexrange: [\"0530\", \"058f\"],\n  },\n  {\n    category: \"hebrew\",\n    hexrange: [\"0590\", \"05ff\"],\n  },\n  {\n    category: \"arabic\",\n    hexrange: [\"0600\", \"06ff\"],\n  },\n  {\n    category: \"syriac\",\n    hexrange: [\"0700\", \"074f\"],\n  },\n  {\n    category: \"arabic supplement\",\n    hexrange: [\"0750\", \"077f\"],\n  },\n  {\n    category: \"thaana\",\n    hexrange: [\"0780\", \"07bf\"],\n  },\n  {\n    category: \"nko\",\n    hexrange: [\"07c0\", \"07ff\"],\n  },\n  {\n    category: \"samaritan\",\n    hexrange: [\"0800\", \"083f\"],\n  },\n  {\n    category: \"mandaic\",\n    hexrange: [\"0840\", \"085f\"],\n  },\n  {\n    category: \"syriac supplement\",\n    hexrange: [\"0860\", \"086f\"],\n  },\n  {\n    category: \"arabic extended-b\",\n    hexrange: [\"0870\", \"089f\"],\n  },\n  {\n    category: \"arabic extended-a\",\n    hexrange: [\"08a0\", \"08ff\"],\n  },\n  {\n    category: \"devanagari\",\n    hexrange: [\"0900\", \"097f\"],\n  },\n  {\n    category: \"bengali\",\n    hexrange: [\"0980\", \"09ff\"],\n  },\n  {\n    category: \"gurmukhi\",\n    hexrange: [\"0a00\", \"0a7f\"],\n  },\n  {\n    category: \"gujarati\",\n    hexrange: [\"0a80\", \"0aff\"],\n  },\n  {\n    category: \"oriya\",\n    hexrange: [\"0b00\", \"0b7f\"],\n  },\n  {\n    category: \"tamil\",\n    hexrange: [\"0b80\", \"0bff\"],\n  },\n  {\n    category: \"telugu\",\n    hexrange: [\"0c00\", \"0c7f\"],\n  },\n  {\n    category: \"kannada\",\n    hexrange: [\"0c80\", \"0cff\"],\n  },\n  {\n    category: \"malayalam\",\n    hexrange: [\"0d00\", \"0d7f\"],\n  },\n  {\n    category: \"sinhala\",\n    hexrange: [\"0d80\", \"0dff\"],\n  },\n  {\n    category: \"thai\",\n    hexrange: [\"0e00\", \"0e7f\"],\n  },\n  {\n    category: \"lao\",\n    hexrange: [\"0e80\", \"0eff\"],\n  },\n  {\n    category: \"tibetan\",\n    hexrange: [\"0f00\", \"0fff\"],\n  },\n  {\n    category: \"myanmar\",\n    hexrange: [\"1000\", \"109f\"],\n  },\n  {\n    category: \"georgian\",\n    hexrange: [\"10a0\", \"10ff\"],\n  },\n  {\n    category: \"hangul jamo\",\n    hexrange: [\"1100\", \"11ff\"],\n  },\n  {\n    category: \"ethiopic\",\n    hexrange: [\"1200\", \"137f\"],\n  },\n  {\n    category: \"ethiopic supplement\",\n    hexrange: [\"1380\", \"139f\"],\n  },\n  {\n    category: \"cherokee\",\n    hexrange: [\"13a0\", \"13ff\"],\n  },\n  {\n    category: \"unified canadian aboriginal syllabics\",\n    hexrange: [\"1400\", \"167f\"],\n  },\n  {\n    category: \"ogham\",\n    hexrange: [\"1680\", \"169f\"],\n  },\n  {\n    category: \"runic\",\n    hexrange: [\"16a0\", \"16ff\"],\n  },\n  {\n    category: \"tagalog\",\n    hexrange: [\"1700\", \"171f\"],\n  },\n  {\n    category: \"hanunoo\",\n    hexrange: [\"1720\", \"173f\"],\n  },\n  {\n    category: \"buhid\",\n    hexrange: [\"1740\", \"175f\"],\n  },\n  {\n    category: \"tagbanwa\",\n    hexrange: [\"1760\", \"177f\"],\n  },\n  {\n    category: \"khmer\",\n    hexrange: [\"1780\", \"17ff\"],\n  },\n  {\n    category: \"mongolian\",\n    hexrange: [\"1800\", \"18af\"],\n  },\n  {\n    category: \"unified canadian aboriginal syllabics extended\",\n    hexrange: [\"18b0\", \"18ff\"],\n  },\n  {\n    category: \"limbu\",\n    hexrange: [\"1900\", \"194f\"],\n  },\n  {\n    category: \"tai le\",\n    hexrange: [\"1950\", \"197f\"],\n  },\n  {\n    category: \"new tai lue\",\n    hexrange: [\"1980\", \"19df\"],\n  },\n  {\n    category: \"khmer symbols\",\n    hexrange: [\"19e0\", \"19ff\"],\n  },\n  {\n    category: \"buginese\",\n    hexrange: [\"1a00\", \"1a1f\"],\n  },\n  {\n    category: \"tai tham\",\n    hexrange: [\"1a20\", \"1aaf\"],\n  },\n  {\n    category: \"combining diacritical marks extended\",\n    hexrange: [\"1ab0\", \"1aff\"],\n  },\n  {\n    category: \"balinese\",\n    hexrange: [\"1b00\", \"1b7f\"],\n  },\n  {\n    category: \"sundanese\",\n    hexrange: [\"1b80\", \"1bbf\"],\n  },\n  {\n    category: \"batak\",\n    hexrange: [\"1bc0\", \"1bff\"],\n  },\n  {\n    category: \"lepcha\",\n    hexrange: [\"1c00\", \"1c4f\"],\n  },\n  {\n    category: \"ol chiki\",\n    hexrange: [\"1c50\", \"1c7f\"],\n  },\n  {\n    category: \"cyrillic extended-c\",\n    hexrange: [\"1c80\", \"1c8f\"],\n  },\n  {\n    category: \"georgian extended\",\n    hexrange: [\"1c90\", \"1cbf\"],\n  },\n  {\n    category: \"sundanese supplement\",\n    hexrange: [\"1cc0\", \"1ccf\"],\n  },\n  {\n    category: \"vedic extensions\",\n    hexrange: [\"1cd0\", \"1cff\"],\n  },\n  {\n    category: \"phonetic extensions\",\n    hexrange: [\"1d00\", \"1d7f\"],\n  },\n  {\n    category: \"phonetic extensions supplement\",\n    hexrange: [\"1d80\", \"1dbf\"],\n  },\n  {\n    category: \"combining diacritical marks supplement\",\n    hexrange: [\"1dc0\", \"1dff\"],\n  },\n  {\n    category: \"latin extended additional\",\n    hexrange: [\"1e00\", \"1eff\"],\n  },\n  {\n    category: \"greek extended\",\n    hexrange: [\"1f00\", \"1fff\"],\n  },\n  {\n    category: \"general punctuation\",\n    hexrange: [\"2000\", \"206f\"],\n  },\n  {\n    category: \"superscripts and subscripts\",\n    hexrange: [\"2070\", \"209f\"],\n  },\n  {\n    category: \"currency symbols\",\n    hexrange: [\"20a0\", \"20cf\"],\n  },\n  {\n    category: \"combining diacritical marks for symbols\",\n    hexrange: [\"20d0\", \"20ff\"],\n  },\n  {\n    category: \"letterlike symbols\",\n    hexrange: [\"2100\", \"214f\"],\n  },\n  {\n    category: \"number forms\",\n    hexrange: [\"2150\", \"218f\"],\n  },\n  {\n    category: \"arrows\",\n    hexrange: [\"2190\", \"21ff\"],\n  },\n  {\n    category: \"mathematical operators\",\n    hexrange: [\"2200\", \"22ff\"],\n  },\n  {\n    category: \"miscellaneous technical\",\n    hexrange: [\"2300\", \"23ff\"],\n  },\n  {\n    category: \"control pictures\",\n    hexrange: [\"2400\", \"243f\"],\n  },\n  {\n    category: \"optical character recognition\",\n    hexrange: [\"2440\", \"245f\"],\n  },\n  {\n    category: \"enclosed alphanumerics\",\n    hexrange: [\"2460\", \"24ff\"],\n  },\n  {\n    category: \"box drawing\",\n    hexrange: [\"2500\", \"257f\"],\n  },\n  {\n    category: \"block elements\",\n    hexrange: [\"2580\", \"259f\"],\n  },\n  {\n    category: \"geometric shapes\",\n    hexrange: [\"25a0\", \"25ff\"],\n  },\n  {\n    category: \"miscellaneous symbols\",\n    hexrange: [\"2600\", \"26ff\"],\n  },\n  {\n    category: \"dingbats\",\n    hexrange: [\"2700\", \"27bf\"],\n  },\n  {\n    category: \"miscellaneous mathematical symbols-a\",\n    hexrange: [\"27c0\", \"27ef\"],\n  },\n  {\n    category: \"supplemental arrows-a\",\n    hexrange: [\"27f0\", \"27ff\"],\n  },\n  {\n    category: \"braille patterns\",\n    hexrange: [\"2800\", \"28ff\"],\n  },\n  {\n    category: \"supplemental arrows-b\",\n    hexrange: [\"2900\", \"297f\"],\n  },\n  {\n    category: \"miscellaneous mathematical symbols-b\",\n    hexrange: [\"2980\", \"29ff\"],\n  },\n  {\n    category: \"supplemental mathematical operators\",\n    hexrange: [\"2a00\", \"2aff\"],\n  },\n  {\n    category: \"miscellaneous symbols and arrows\",\n    hexrange: [\"2b00\", \"2bff\"],\n  },\n  {\n    category: \"glagolitic\",\n    hexrange: [\"2c00\", \"2c5f\"],\n  },\n  {\n    category: \"latin extended-c\",\n    hexrange: [\"2c60\", \"2c7f\"],\n  },\n  {\n    category: \"coptic\",\n    hexrange: [\"2c80\", \"2cff\"],\n  },\n  {\n    category: \"georgian supplement\",\n    hexrange: [\"2d00\", \"2d2f\"],\n  },\n  {\n    category: \"tifinagh\",\n    hexrange: [\"2d30\", \"2d7f\"],\n  },\n  {\n    category: \"ethiopic extended\",\n    hexrange: [\"2d80\", \"2ddf\"],\n  },\n  {\n    category: \"cyrillic extended-a\",\n    hexrange: [\"2de0\", \"2dff\"],\n  },\n  {\n    category: \"supplemental punctuation\",\n    hexrange: [\"2e00\", \"2e7f\"],\n  },\n  {\n    category: \"cjk radicals supplement\",\n    hexrange: [\"2e80\", \"2eff\"],\n  },\n  {\n    category: \"kangxi radicals\",\n    hexrange: [\"2f00\", \"2fdf\"],\n  },\n  {\n    category: \"ideographic description characters\",\n    hexrange: [\"2ff0\", \"2fff\"],\n  },\n  {\n    category: \"cjk symbols and punctuation\",\n    hexrange: [\"3000\", \"303f\"],\n  },\n  {\n    category: \"hiragana\",\n    hexrange: [\"3040\", \"309f\"],\n  },\n  {\n    category: \"katakana\",\n    hexrange: [\"30a0\", \"30ff\"],\n  },\n  {\n    category: \"bopomofo\",\n    hexrange: [\"3100\", \"312f\"],\n  },\n  {\n    category: \"hangul compatibility jamo\",\n    hexrange: [\"3130\", \"318f\"],\n  },\n  {\n    category: \"kanbun\",\n    hexrange: [\"3190\", \"319f\"],\n  },\n  {\n    category: \"bopomofo extended\",\n    hexrange: [\"31a0\", \"31bf\"],\n  },\n  {\n    category: \"cjk strokes\",\n    hexrange: [\"31c0\", \"31ef\"],\n  },\n  {\n    category: \"katakana phonetic extensions\",\n    hexrange: [\"31f0\", \"31ff\"],\n  },\n  {\n    category: \"enclosed cjk letters and months\",\n    hexrange: [\"3200\", \"32ff\"],\n  },\n  {\n    category: \"cjk compatibility\",\n    hexrange: [\"3300\", \"33ff\"],\n  },\n  {\n    category: \"cjk unified ideographs extension a\",\n    hexrange: [\"3400\", \"4dbf\"],\n  },\n  {\n    category: \"yijing hexagram symbols\",\n    hexrange: [\"4dc0\", \"4dff\"],\n  },\n  {\n    category: \"cjk unified ideographs\",\n    hexrange: [\"4e00\", \"9fff\"],\n  },\n  {\n    category: \"yi syllables\",\n    hexrange: [\"a000\", \"a48f\"],\n  },\n  {\n    category: \"yi radicals\",\n    hexrange: [\"a490\", \"a4cf\"],\n  },\n  {\n    category: \"lisu\",\n    hexrange: [\"a4d0\", \"a4ff\"],\n  },\n  {\n    category: \"vai\",\n    hexrange: [\"a500\", \"a63f\"],\n  },\n  {\n    category: \"cyrillic extended-b\",\n    hexrange: [\"a640\", \"a69f\"],\n  },\n  {\n    category: \"bamum\",\n    hexrange: [\"a6a0\", \"a6ff\"],\n  },\n  {\n    category: \"modifier tone letters\",\n    hexrange: [\"a700\", \"a71f\"],\n  },\n  {\n    category: \"latin extended-d\",\n    hexrange: [\"a720\", \"a7ff\"],\n  },\n  {\n    category: \"syloti nagri\",\n    hexrange: [\"a800\", \"a82f\"],\n  },\n  {\n    category: \"common indic number forms\",\n    hexrange: [\"a830\", \"a83f\"],\n  },\n  {\n    category: \"phags-pa\",\n    hexrange: [\"a840\", \"a87f\"],\n  },\n  {\n    category: \"saurashtra\",\n    hexrange: [\"a880\", \"a8df\"],\n  },\n  {\n    category: \"devanagari extended\",\n    hexrange: [\"a8e0\", \"a8ff\"],\n  },\n  {\n    category: \"kayah li\",\n    hexrange: [\"a900\", \"a92f\"],\n  },\n  {\n    category: \"rejang\",\n    hexrange: [\"a930\", \"a95f\"],\n  },\n  {\n    category: \"hangul jamo extended-a\",\n    hexrange: [\"a960\", \"a97f\"],\n  },\n  {\n    category: \"javanese\",\n    hexrange: [\"a980\", \"a9df\"],\n  },\n  {\n    category: \"myanmar extended-b\",\n    hexrange: [\"a9e0\", \"a9ff\"],\n  },\n  {\n    category: \"cham\",\n    hexrange: [\"aa00\", \"aa5f\"],\n  },\n  {\n    category: \"myanmar extended-a\",\n    hexrange: [\"aa60\", \"aa7f\"],\n  },\n  {\n    category: \"tai viet\",\n    hexrange: [\"aa80\", \"aadf\"],\n  },\n  {\n    category: \"meetei mayek extensions\",\n    hexrange: [\"aae0\", \"aaff\"],\n  },\n  {\n    category: \"ethiopic extended-a\",\n    hexrange: [\"ab00\", \"ab2f\"],\n  },\n  {\n    category: \"latin extended-e\",\n    hexrange: [\"ab30\", \"ab6f\"],\n  },\n  {\n    category: \"cherokee supplement\",\n    hexrange: [\"ab70\", \"abbf\"],\n  },\n  {\n    category: \"meetei mayek\",\n    hexrange: [\"abc0\", \"abff\"],\n  },\n  {\n    category: \"hangul syllables\",\n    hexrange: [\"ac00\", \"d7af\"],\n  },\n  {\n    category: \"hangul jamo extended-b\",\n    hexrange: [\"d7b0\", \"d7ff\"],\n  },\n  {\n    category: \"high surrogates\",\n    hexrange: [\"d800\", \"db7f\"],\n  },\n  {\n    category: \"high private use surrogates\",\n    hexrange: [\"db80\", \"dbff\"],\n  },\n  {\n    category: \"low surrogates\",\n    hexrange: [\"dc00\", \"dfff\"],\n  },\n  {\n    category: \"private use area\",\n    hexrange: [\"e000\", \"f8ff\"],\n  },\n  {\n    category: \"cjk compatibility ideographs\",\n    hexrange: [\"f900\", \"faff\"],\n  },\n  {\n    category: \"alphabetic presentation forms\",\n    hexrange: [\"fb00\", \"fb4f\"],\n  },\n  {\n    category: \"arabic presentation forms-a\",\n    hexrange: [\"fb50\", \"fdff\"],\n  },\n  {\n    category: \"variation selectors\",\n    hexrange: [\"fe00\", \"fe0f\"],\n  },\n  {\n    category: \"vertical forms\",\n    hexrange: [\"fe10\", \"fe1f\"],\n  },\n  {\n    category: \"combining half marks\",\n    hexrange: [\"fe20\", \"fe2f\"],\n  },\n  {\n    category: \"cjk compatibility forms\",\n    hexrange: [\"fe30\", \"fe4f\"],\n  },\n  {\n    category: \"small form variants\",\n    hexrange: [\"fe50\", \"fe6f\"],\n  },\n  {\n    category: \"arabic presentation forms-b\",\n    hexrange: [\"fe70\", \"feff\"],\n  },\n  {\n    category: \"halfwidth and fullwidth forms\",\n    hexrange: [\"ff00\", \"ffef\"],\n  },\n  {\n    category: \"specials\",\n    hexrange: [\"fff0\", \"ffff\"],\n  },\n  {\n    category: \"linear b syllabary\",\n    hexrange: [\"10000\", \"1007f\"],\n  },\n  {\n    category: \"linear b ideograms\",\n    hexrange: [\"10080\", \"100ff\"],\n  },\n  {\n    category: \"aegean numbers\",\n    hexrange: [\"10100\", \"1013f\"],\n  },\n  {\n    category: \"ancient greek numbers\",\n    hexrange: [\"10140\", \"1018f\"],\n  },\n  {\n    category: \"ancient symbols\",\n    hexrange: [\"10190\", \"101cf\"],\n  },\n  {\n    category: \"phaistos disc\",\n    hexrange: [\"101d0\", \"101ff\"],\n  },\n  {\n    category: \"lycian\",\n    hexrange: [\"10280\", \"1029f\"],\n  },\n  {\n    category: \"carian\",\n    hexrange: [\"102a0\", \"102df\"],\n  },\n  {\n    category: \"coptic epact numbers\",\n    hexrange: [\"102e0\", \"102ff\"],\n  },\n  {\n    category: \"old italic\",\n    hexrange: [\"10300\", \"1032f\"],\n  },\n  {\n    category: \"gothic\",\n    hexrange: [\"10330\", \"1034f\"],\n  },\n  {\n    category: \"old permic\",\n    hexrange: [\"10350\", \"1037f\"],\n  },\n  {\n    category: \"ugaritic\",\n    hexrange: [\"10380\", \"1039f\"],\n  },\n  {\n    category: \"old persian\",\n    hexrange: [\"103a0\", \"103df\"],\n  },\n  {\n    category: \"deseret\",\n    hexrange: [\"10400\", \"1044f\"],\n  },\n  {\n    category: \"shavian\",\n    hexrange: [\"10450\", \"1047f\"],\n  },\n  {\n    category: \"osmanya\",\n    hexrange: [\"10480\", \"104af\"],\n  },\n  {\n    category: \"osage\",\n    hexrange: [\"104b0\", \"104ff\"],\n  },\n  {\n    category: \"elbasan\",\n    hexrange: [\"10500\", \"1052f\"],\n  },\n  {\n    category: \"caucasian albanian\",\n    hexrange: [\"10530\", \"1056f\"],\n  },\n  {\n    category: \"vithkuqi\",\n    hexrange: [\"10570\", \"105bf\"],\n  },\n  {\n    category: \"linear a\",\n    hexrange: [\"10600\", \"1077f\"],\n  },\n  {\n    category: \"latin extended-f\",\n    hexrange: [\"10780\", \"107bf\"],\n  },\n  {\n    category: \"cypriot syllabary\",\n    hexrange: [\"10800\", \"1083f\"],\n  },\n  {\n    category: \"imperial aramaic\",\n    hexrange: [\"10840\", \"1085f\"],\n  },\n  {\n    category: \"palmyrene\",\n    hexrange: [\"10860\", \"1087f\"],\n  },\n  {\n    category: \"nabataean\",\n    hexrange: [\"10880\", \"108af\"],\n  },\n  {\n    category: \"hatran\",\n    hexrange: [\"108e0\", \"108ff\"],\n  },\n  {\n    category: \"phoenician\",\n    hexrange: [\"10900\", \"1091f\"],\n  },\n  {\n    category: \"lydian\",\n    hexrange: [\"10920\", \"1093f\"],\n  },\n  {\n    category: \"meroitic hieroglyphs\",\n    hexrange: [\"10980\", \"1099f\"],\n  },\n  {\n    category: \"meroitic cursive\",\n    hexrange: [\"109a0\", \"109ff\"],\n  },\n  {\n    category: \"kharoshthi\",\n    hexrange: [\"10a00\", \"10a5f\"],\n  },\n  {\n    category: \"old south arabian\",\n    hexrange: [\"10a60\", \"10a7f\"],\n  },\n  {\n    category: \"old north arabian\",\n    hexrange: [\"10a80\", \"10a9f\"],\n  },\n  {\n    category: \"manichaean\",\n    hexrange: [\"10ac0\", \"10aff\"],\n  },\n  {\n    category: \"avestan\",\n    hexrange: [\"10b00\", \"10b3f\"],\n  },\n  {\n    category: \"inscriptional parthian\",\n    hexrange: [\"10b40\", \"10b5f\"],\n  },\n  {\n    category: \"inscriptional pahlavi\",\n    hexrange: [\"10b60\", \"10b7f\"],\n  },\n  {\n    category: \"psalter pahlavi\",\n    hexrange: [\"10b80\", \"10baf\"],\n  },\n  {\n    category: \"old turkic\",\n    hexrange: [\"10c00\", \"10c4f\"],\n  },\n  {\n    category: \"old hungarian\",\n    hexrange: [\"10c80\", \"10cff\"],\n  },\n  {\n    category: \"hanifi rohingya\",\n    hexrange: [\"10d00\", \"10d3f\"],\n  },\n  {\n    category: \"rumi numeral symbols\",\n    hexrange: [\"10e60\", \"10e7f\"],\n  },\n  {\n    category: \"yezidi\",\n    hexrange: [\"10e80\", \"10ebf\"],\n  },\n  {\n    category: \"arabic extended-c\",\n    hexrange: [\"10ec0\", \"10eff\"],\n  },\n  {\n    category: \"old sogdian\",\n    hexrange: [\"10f00\", \"10f2f\"],\n  },\n  {\n    category: \"sogdian\",\n    hexrange: [\"10f30\", \"10f6f\"],\n  },\n  {\n    category: \"old uyghur\",\n    hexrange: [\"10f70\", \"10faf\"],\n  },\n  {\n    category: \"chorasmian\",\n    hexrange: [\"10fb0\", \"10fdf\"],\n  },\n  {\n    category: \"elymaic\",\n    hexrange: [\"10fe0\", \"10fff\"],\n  },\n  {\n    category: \"brahmi\",\n    hexrange: [\"11000\", \"1107f\"],\n  },\n  {\n    category: \"kaithi\",\n    hexrange: [\"11080\", \"110cf\"],\n  },\n  {\n    category: \"sora sompeng\",\n    hexrange: [\"110d0\", \"110ff\"],\n  },\n  {\n    category: \"chakma\",\n    hexrange: [\"11100\", \"1114f\"],\n  },\n  {\n    category: \"mahajani\",\n    hexrange: [\"11150\", \"1117f\"],\n  },\n  {\n    category: \"sharada\",\n    hexrange: [\"11180\", \"111df\"],\n  },\n  {\n    category: \"sinhala archaic numbers\",\n    hexrange: [\"111e0\", \"111ff\"],\n  },\n  {\n    category: \"khojki\",\n    hexrange: [\"11200\", \"1124f\"],\n  },\n  {\n    category: \"multani\",\n    hexrange: [\"11280\", \"112af\"],\n  },\n  {\n    category: \"khudawadi\",\n    hexrange: [\"112b0\", \"112ff\"],\n  },\n  {\n    category: \"grantha\",\n    hexrange: [\"11300\", \"1137f\"],\n  },\n  {\n    category: \"newa\",\n    hexrange: [\"11400\", \"1147f\"],\n  },\n  {\n    category: \"tirhuta\",\n    hexrange: [\"11480\", \"114df\"],\n  },\n  {\n    category: \"siddham\",\n    hexrange: [\"11580\", \"115ff\"],\n  },\n  {\n    category: \"modi\",\n    hexrange: [\"11600\", \"1165f\"],\n  },\n  {\n    category: \"mongolian supplement\",\n    hexrange: [\"11660\", \"1167f\"],\n  },\n  {\n    category: \"takri\",\n    hexrange: [\"11680\", \"116cf\"],\n  },\n  {\n    category: \"ahom\",\n    hexrange: [\"11700\", \"1174f\"],\n  },\n  {\n    category: \"dogra\",\n    hexrange: [\"11800\", \"1184f\"],\n  },\n  {\n    category: \"warang citi\",\n    hexrange: [\"118a0\", \"118ff\"],\n  },\n  {\n    category: \"dives akuru\",\n    hexrange: [\"11900\", \"1195f\"],\n  },\n  {\n    category: \"nandinagari\",\n    hexrange: [\"119a0\", \"119ff\"],\n  },\n  {\n    category: \"zanabazar square\",\n    hexrange: [\"11a00\", \"11a4f\"],\n  },\n  {\n    category: \"soyombo\",\n    hexrange: [\"11a50\", \"11aaf\"],\n  },\n  {\n    category: \"unified canadian aboriginal syllabics extended-a\",\n    hexrange: [\"11ab0\", \"11abf\"],\n  },\n  {\n    category: \"pau cin hau\",\n    hexrange: [\"11ac0\", \"11aff\"],\n  },\n  {\n    category: \"devanagari extended-a\",\n    hexrange: [\"11b00\", \"11b5f\"],\n  },\n  {\n    category: \"bhaiksuki\",\n    hexrange: [\"11c00\", \"11c6f\"],\n  },\n  {\n    category: \"marchen\",\n    hexrange: [\"11c70\", \"11cbf\"],\n  },\n  {\n    category: \"masaram gondi\",\n    hexrange: [\"11d00\", \"11d5f\"],\n  },\n  {\n    category: \"gunjala gondi\",\n    hexrange: [\"11d60\", \"11daf\"],\n  },\n  {\n    category: \"makasar\",\n    hexrange: [\"11ee0\", \"11eff\"],\n  },\n  {\n    category: \"kawi\",\n    hexrange: [\"11f00\", \"11f5f\"],\n  },\n  {\n    category: \"lisu supplement\",\n    hexrange: [\"11fb0\", \"11fbf\"],\n  },\n  {\n    category: \"tamil supplement\",\n    hexrange: [\"11fc0\", \"11fff\"],\n  },\n  {\n    category: \"cuneiform\",\n    hexrange: [\"12000\", \"123ff\"],\n  },\n  {\n    category: \"cuneiform numbers and punctuation\",\n    hexrange: [\"12400\", \"1247f\"],\n  },\n  {\n    category: \"early dynastic cuneiform\",\n    hexrange: [\"12480\", \"1254f\"],\n  },\n  {\n    category: \"cypro-minoan\",\n    hexrange: [\"12f90\", \"12fff\"],\n  },\n  {\n    category: \"egyptian hieroglyphs\",\n    hexrange: [\"13000\", \"1342f\"],\n  },\n  {\n    category: \"egyptian hieroglyph format controls\",\n    hexrange: [\"13430\", \"1345f\"],\n  },\n  {\n    category: \"anatolian hieroglyphs\",\n    hexrange: [\"14400\", \"1467f\"],\n  },\n  {\n    category: \"bamum supplement\",\n    hexrange: [\"16800\", \"16a3f\"],\n  },\n  {\n    category: \"mro\",\n    hexrange: [\"16a40\", \"16a6f\"],\n  },\n  {\n    category: \"tangsa\",\n    hexrange: [\"16a70\", \"16acf\"],\n  },\n  {\n    category: \"bassa vah\",\n    hexrange: [\"16ad0\", \"16aff\"],\n  },\n  {\n    category: \"pahawh hmong\",\n    hexrange: [\"16b00\", \"16b8f\"],\n  },\n  {\n    category: \"medefaidrin\",\n    hexrange: [\"16e40\", \"16e9f\"],\n  },\n  {\n    category: \"miao\",\n    hexrange: [\"16f00\", \"16f9f\"],\n  },\n  {\n    category: \"ideographic symbols and punctuation\",\n    hexrange: [\"16fe0\", \"16fff\"],\n  },\n  {\n    category: \"tangut\",\n    hexrange: [\"17000\", \"187ff\"],\n  },\n  {\n    category: \"tangut components\",\n    hexrange: [\"18800\", \"18aff\"],\n  },\n  {\n    category: \"khitan small script\",\n    hexrange: [\"18b00\", \"18cff\"],\n  },\n  {\n    category: \"tangut supplement\",\n    hexrange: [\"18d00\", \"18d7f\"],\n  },\n  {\n    category: \"kana extended-b\",\n    hexrange: [\"1aff0\", \"1afff\"],\n  },\n  {\n    category: \"kana supplement\",\n    hexrange: [\"1b000\", \"1b0ff\"],\n  },\n  {\n    category: \"kana extended-a\",\n    hexrange: [\"1b100\", \"1b12f\"],\n  },\n  {\n    category: \"small kana extension\",\n    hexrange: [\"1b130\", \"1b16f\"],\n  },\n  {\n    category: \"nushu\",\n    hexrange: [\"1b170\", \"1b2ff\"],\n  },\n  {\n    category: \"duployan\",\n    hexrange: [\"1bc00\", \"1bc9f\"],\n  },\n  {\n    category: \"shorthand format controls\",\n    hexrange: [\"1bca0\", \"1bcaf\"],\n  },\n  {\n    category: \"znamenny musical notation\",\n    hexrange: [\"1cf00\", \"1cfcf\"],\n  },\n  {\n    category: \"byzantine musical symbols\",\n    hexrange: [\"1d000\", \"1d0ff\"],\n  },\n  {\n    category: \"musical symbols\",\n    hexrange: [\"1d100\", \"1d1ff\"],\n  },\n  {\n    category: \"ancient greek musical notation\",\n    hexrange: [\"1d200\", \"1d24f\"],\n  },\n  {\n    category: \"kaktovik numerals\",\n    hexrange: [\"1d2c0\", \"1d2df\"],\n  },\n  {\n    category: \"mayan numerals\",\n    hexrange: [\"1d2e0\", \"1d2ff\"],\n  },\n  {\n    category: \"tai xuan jing symbols\",\n    hexrange: [\"1d300\", \"1d35f\"],\n  },\n  {\n    category: \"counting rod numerals\",\n    hexrange: [\"1d360\", \"1d37f\"],\n  },\n  {\n    category: \"mathematical alphanumeric symbols\",\n    hexrange: [\"1d400\", \"1d7ff\"],\n  },\n  {\n    category: \"sutton signwriting\",\n    hexrange: [\"1d800\", \"1daaf\"],\n  },\n  {\n    category: \"latin extended-g\",\n    hexrange: [\"1df00\", \"1dfff\"],\n  },\n  {\n    category: \"glagolitic supplement\",\n    hexrange: [\"1e000\", \"1e02f\"],\n  },\n  {\n    category: \"cyrillic extended-d\",\n    hexrange: [\"1e030\", \"1e08f\"],\n  },\n  {\n    category: \"nyiakeng puachue hmong\",\n    hexrange: [\"1e100\", \"1e14f\"],\n  },\n  {\n    category: \"toto\",\n    hexrange: [\"1e290\", \"1e2bf\"],\n  },\n  {\n    category: \"wancho\",\n    hexrange: [\"1e2c0\", \"1e2ff\"],\n  },\n  {\n    category: \"nag mundari\",\n    hexrange: [\"1e4d0\", \"1e4ff\"],\n  },\n  {\n    category: \"ethiopic extended-b\",\n    hexrange: [\"1e7e0\", \"1e7ff\"],\n  },\n  {\n    category: \"mende kikakui\",\n    hexrange: [\"1e800\", \"1e8df\"],\n  },\n  {\n    category: \"adlam\",\n    hexrange: [\"1e900\", \"1e95f\"],\n  },\n  {\n    category: \"indic siyaq numbers\",\n    hexrange: [\"1ec70\", \"1ecbf\"],\n  },\n  {\n    category: \"ottoman siyaq numbers\",\n    hexrange: [\"1ed00\", \"1ed4f\"],\n  },\n  {\n    category: \"arabic mathematical alphabetic symbols\",\n    hexrange: [\"1ee00\", \"1eeff\"],\n  },\n  {\n    category: \"mahjong tiles\",\n    hexrange: [\"1f000\", \"1f02f\"],\n  },\n  {\n    category: \"domino tiles\",\n    hexrange: [\"1f030\", \"1f09f\"],\n  },\n  {\n    category: \"playing cards\",\n    hexrange: [\"1f0a0\", \"1f0ff\"],\n  },\n  {\n    category: \"enclosed alphanumeric supplement\",\n    hexrange: [\"1f100\", \"1f1ff\"],\n  },\n  {\n    category: \"enclosed ideographic supplement\",\n    hexrange: [\"1f200\", \"1f2ff\"],\n  },\n  {\n    category: \"miscellaneous symbols and pictographs\",\n    hexrange: [\"1f300\", \"1f5ff\"],\n  },\n  {\n    category: \"emoticons (emoji)\",\n    hexrange: [\"1f600\", \"1f64f\"],\n  },\n  {\n    category: \"ornamental dingbats\",\n    hexrange: [\"1f650\", \"1f67f\"],\n  },\n  {\n    category: \"transport and map symbols\",\n    hexrange: [\"1f680\", \"1f6ff\"],\n  },\n  {\n    category: \"alchemical symbols\",\n    hexrange: [\"1f700\", \"1f77f\"],\n  },\n  {\n    category: \"geometric shapes extended\",\n    hexrange: [\"1f780\", \"1f7ff\"],\n  },\n  {\n    category: \"supplemental arrows-c\",\n    hexrange: [\"1f800\", \"1f8ff\"],\n  },\n  {\n    category: \"supplemental symbols and pictographs\",\n    hexrange: [\"1f900\", \"1f9ff\"],\n  },\n  {\n    category: \"chess symbols\",\n    hexrange: [\"1fa00\", \"1fa6f\"],\n  },\n  {\n    category: \"symbols and pictographs extended-a\",\n    hexrange: [\"1fa70\", \"1faff\"],\n  },\n  {\n    category: \"symbols for legacy computing\",\n    hexrange: [\"1fb00\", \"1fbff\"],\n  },\n  {\n    category: \"cjk unified ideographs extension b\",\n    hexrange: [\"20000\", \"2a6df\"],\n  },\n  {\n    category: \"cjk unified ideographs extension c\",\n    hexrange: [\"2a700\", \"2b73f\"],\n  },\n  {\n    category: \"cjk unified ideographs extension d\",\n    hexrange: [\"2b740\", \"2b81f\"],\n  },\n  {\n    category: \"cjk unified ideographs extension e\",\n    hexrange: [\"2b820\", \"2ceaf\"],\n  },\n  {\n    category: \"cjk unified ideographs extension f\",\n    hexrange: [\"2ceb0\", \"2ebef\"],\n  },\n  {\n    category: \"cjk unified ideographs extension i\",\n    hexrange: [\"2ebf0\", \"2ee5f\"],\n  },\n  {\n    category: \"cjk compatibility ideographs supplement\",\n    hexrange: [\"2f800\", \"2fa1f\"],\n  },\n  {\n    category: \"cjk unified ideographs extension g\",\n    hexrange: [\"30000\", \"3134f\"],\n  },\n  {\n    category: \"cjk unified ideographs extension h\",\n    hexrange: [\"31350\", \"323af\"],\n  },\n  {\n    category: \"tags\",\n    hexrange: [\"e0000\", \"e007f\"],\n  },\n  {\n    category: \"variation selectors supplement\",\n    hexrange: [\"e0100\", \"e01ef\"],\n  },\n  {\n    category: \"supplementary private use area-a\",\n    hexrange: [\"f0000\", \"fffff\"],\n  },\n  {\n    category: \"supplementary private use area-b\",\n    hexrange: [\"100000\", \"10ffff\"],\n  },\n];\n\nexport { unicodeRanges };\n"],"names":[],"mappings":"AAAA,0DAA0D;AAC1D,+DAA+D;AAC/D,6CAA6C;;;;AAC7C,MAAM,gBAAgB;IACpB;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAQ;SAAO;IAC5B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAS;SAAQ;IAC9B;IACA;QACE,UAAU;QACV,UAAU;YAAC;YAAU;SAAS;IAChC;CACD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4793, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ryan%20Purnomo/Bahasa-Pemrograman/Website/Javascript/NextJS/CG-GAMES/node_modules/p5/dist/type/lib/Typr.js"],"sourcesContent":["import { inflate } from 'pako';\n\n// Mocking the pako module to just have inflate for a smaller package size\nconst pako = { inflate };\n\nvar Typr = {};\n\nTypr[\"parse\"] = function (buff) {\n  var bin = Typr[\"B\"];\n\n  var readFont = function (data, idx, offset, tmap) {\n    var T = Typr[\"T\"];\n    var prsr = {\n      \"cmap\": T.cmap,\n      \"head\": T.head,\n      \"hhea\": T.hhea,\n      \"maxp\": T.maxp,\n      \"hmtx\": T.hmtx,\n      \"name\": T.name,\n      \"OS/2\": T.OS2,\n      \"post\": T.post,\n\n      \"loca\": T.loca,\n      \"kern\": T.kern,\n      \"glyf\": T.glyf,\n\n      \"CFF \": T.CFF,\n      /*\n      \"GPOS\",\n      \"GSUB\",\n      \"GDEF\",*/\n      \"GSUB\": T.GSUB,\n      \"CBLC\": T.CBLC,\n      \"CBDT\": T.CBDT,\n\n      \"SVG \": T.SVG,\n      \"COLR\": T.colr,\n      \"CPAL\": T.cpal,\n      \"sbix\": T.sbix,\n\n      \"fvar\": T.fvar,\n      \"gvar\": T.gvar,\n      \"avar\": T.avar,\n      \"HVAR\": T.HVAR\n      //\"VORG\",\n    };\n    var obj = { \"_data\": data, \"_index\": idx, \"_offset\": offset };\n\n    for (var t in prsr) {\n      var tab = Typr[\"findTable\"](data, t, offset);\n      if (tab) {\n        var off = tab[0], tobj = tmap[off];\n        if (tobj == null) tobj = prsr[t].parseTab(data, off, tab[1], obj);\n        obj[t] = tmap[off] = tobj;\n      }\n    }\n    return obj;\n  };\n\n  function woffToOtf(data) {\n    var numTables = bin.readUshort(data, 12);\n    var totalSize = bin.readUint(data, 16);\n\n    var otf = new Uint8Array(totalSize), toff = 12 + numTables * 16;\n\n    bin.writeASCII(otf, 0, \"OTTO\");\n    bin.writeUshort(otf, 4, numTables);\n\n    var off = 44;\n    for (var i = 0; i < numTables; i++) {\n      var tag = bin.readASCII(data, off, 4);\n      var tof = bin.readUint(data, off + 4);\n      var cLe = bin.readUint(data, off + 8);\n      var oLe = bin.readUint(data, off + 12);\n      off += 20;\n      //console.log(i, \":::\", tag,tof,oLe);\n\n      var tab = data.slice(tof, tof + cLe);\n      if (cLe != oLe) tab = pako[\"inflate\"](tab);\n\n      var to = 12 + i * 16;\n      bin.writeASCII(otf, to, tag);\n      bin.writeUint(otf, to + 8, toff);\n      bin.writeUint(otf, to + 12, oLe);\n\n      otf.set(tab, toff); toff += oLe;\n    }\n    //console.log(otf);\n    return otf;\n  }\n\n\n  var data = new Uint8Array(buff);\n  // PATCHED: keep around the compressed data if we inflate it\n  let compressedData;\n  if (data[0] == 0x77) {\n    compressedData = data;\n    data = woffToOtf(data);\n  }\n\n  var tmap = {};\n  var tag = bin.readASCII(data, 0, 4);\n  if (tag == \"ttcf\") {\n    var offset = 4;\n    bin.readUshort(data, offset); offset += 2;\n    bin.readUshort(data, offset); offset += 2;\n    var numF = bin.readUint(data, offset); offset += 4;\n    var fnts = [];\n    for (var i = 0; i < numF; i++) {\n      var foff = bin.readUint(data, offset); offset += 4;\n      fnts.push(readFont(data, i, foff, tmap));\n    }\n    return fnts;\n  }\n  var fnt = readFont(data, 0, 0, tmap);  //console.log(fnt);  throw \"e\";\n  fnt._compressedData = compressedData; // PATCH: make compressed data accessible\n  var fvar = fnt[\"fvar\"];\n  if (fvar) {\n    var out = [fnt];\n    for (var i = 0; i < fvar[1].length; i++) {\n      var fv = fvar[1][i];\n      var obj = {}; out.push(obj); for (var p in fnt) obj[p] = fnt[p];\n      obj[\"_index\"] = i;\n      var name = obj[\"name\"] = JSON.parse(JSON.stringify(obj[\"name\"]));\n      name[\"fontSubfamily\"] = fv[0];\n      if (fv[3] == null) fv[3] = (name[\"fontFamily\"] + \"-\" + name[\"fontSubfamily\"])[\"replaceAll\"](\" \", \"\");\n      name[\"postScriptName\"] = fv[3];\n    }\n    return out;\n  }\n\n  return [fnt];\n};\n\n\nTypr[\"findTable\"] = function (data, tab, foff) {\n  var bin = Typr[\"B\"];\n  var numTables = bin.readUshort(data, foff + 4);\n  var offset = foff + 12;\n  for (var i = 0; i < numTables; i++) {\n    var tag = bin.readASCII(data, offset, 4);   //console.log(tag);\n    bin.readUint(data, offset + 4);\n    var toffset = bin.readUint(data, offset + 8);\n    var length = bin.readUint(data, offset + 12);\n    if (tag == tab) return [toffset, length];\n    offset += 16;\n  }\n  return null;\n};\n/*\nTypr[\"splitBy\"] = function(data,tag) {\n  data = new Uint8Array(data);  console.log(data.slice(0,64));\n  var bin = Typr[\"B\"];\n  var ttcf = bin.readASCII(data, 0, 4);  if(ttcf!=\"ttcf\") return {};\n\n  var offset = 8;\n  var numF = bin.readUint  (data, offset);  offset+=4;\n  var colls = [], used={};\n  for(var i=0; i<numF; i++) {\n    var foff = bin.readUint  (data, offset);  offset+=4;\n    var toff = Typr[\"findTable\"](data,tag,foff)[0];\n    if(used[toff]==null) used[toff] = [];\n    used[toff].push([foff,bin.readUshort(data,foff+4)]);  // font offset, numTables\n  }\n  for(var toff in used) {\n    var offs = used[toff];\n    var hlen = 12+4*offs.length;\n    var out = new Uint8Array(hlen);\n    for(var i=0; i<8; i++) out[i]=data[i];\n    bin.writeUint(out,8,offs.length);\n\n    for(var i=0; i<offs.length; i++) hlen += 12+offs[i][1]*16;\n\n    var hdrs = [out], tabs = [], hoff=out.length, toff=hlen, noffs={};\n    for(var i=0; i<offs.length; i++) {\n      bin.writeUint(out, 12+i*4, hoff);  hoff+=12+offs[i][1]*16;\n      toff = Typr[\"_cutFont\"](data, offs[i][0], hdrs, tabs, toff, noffs);\n    }\n    colls.push(Typr[\"_joinArrs\"](hdrs.concat(tabs)));\n  }\n  return colls;\n}\n\nTypr[\"splitFonts\"] = function(data) {\n  data = new Uint8Array(data);\n  var bin = Typr[\"B\"];\n  var ttcf = bin.readASCII(data, 0, 4);  if(ttcf!=\"ttcf\") return {};\n\n  var offset = 8;\n  var numF = bin.readUint  (data, offset);  offset+=4;\n  var fnts = [];\n  for(var i=0; i<numF; i++) {\n    var foff = bin.readUint  (data, offset);  offset+=4;\n    fnts.push(Typr._cutFont(data, foff));\n    break;\n  }\n  return fnts;\n}\n\nTypr[\"_cutFont\"] = function(data,foff,hdrs,tabs,toff, noffs) {\n  var bin = Typr[\"B\"];\n  var numTables = bin.readUshort(data, foff+4);\n\n  var out = new Uint8Array(12+numTables*16);  hdrs.push(out);\n  for(var i=0; i<12; i++) out[i]=data[foff+i];  //console.log(out);\n\n  var off = 12;\n  for(var i=0; i<numTables; i++)\n  {\n    var tag      = bin.readASCII(data, foff+off, 4);\n    var checkSum = bin.readUint (data, foff+off+ 4);\n    var toffset  = bin.readUint (data, foff+off+ 8);\n    var length   = bin.readUint (data, foff+off+12);\n\n    while((length&3)!=0) length++;\n\n    for(var j=0; j<16; j++) out[off+j]=data[foff+off+j];\n\n    if(noffs[toffset]!=null) bin.writeUint(out,off+8,noffs[toffset]);\n    else {\n      noffs[toffset] = toff;\n      bin.writeUint(out, off+8, toff);\n      tabs.push(new Uint8Array(data.buffer, toffset, length));  toff+=length;\n    }\n    off+=16;\n  }\n  return toff;\n}\nTypr[\"_joinArrs\"] = function(tabs) {\n  var len = 0;\n  for(var i=0; i<tabs.length; i++) len+=tabs[i].length;\n  var out = new Uint8Array(len), ooff=0;\n  for(var i=0; i<tabs.length; i++) {\n    var tab = tabs[i];\n    for(var j=0; j<tab.length; j++) out[ooff+j]=tab[j];\n    ooff+=tab.length;\n  }\n  return out;\n}\n*/\n\nTypr[\"T\"] = {};\n\n\n\n\n\nTypr[\"B\"] = {\n  readFixed: function (data, o) {\n    return ((data[o] << 8) | data[o + 1]) + (((data[o + 2] << 8) | data[o + 3]) / (256 * 256 + 4));\n  },\n  readF2dot14: function (data, o) {\n    var num = Typr[\"B\"].readShort(data, o);\n    return num / 16384;\n  },\n  readInt: function (buff, p) {\n    //if(p>=buff.length) throw \"error\";\n    var a = Typr[\"B\"].t.uint8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p];\n    return Typr[\"B\"].t.int32[0];\n  },\n\n  readInt8: function (buff, p) {\n    //if(p>=buff.length) throw \"error\";\n    var a = Typr[\"B\"].t.uint8;\n    a[0] = buff[p];\n    return Typr[\"B\"].t.int8[0];\n  },\n  readShort: function (buff, p) {\n    //if(p>=buff.length) throw \"error\";\n    var a = Typr[\"B\"].t.uint16;\n    a[0] = (buff[p] << 8) | buff[p + 1];\n    return Typr[\"B\"].t.int16[0];\n  },\n  readUshort: function (buff, p) {\n    //if(p>=buff.length) throw \"error\";\n    return (buff[p] << 8) | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = (n >> 8) & 255; buff[p + 1] = n & 255;\n  },\n  readUshorts: function (buff, p, len) {\n    var arr = [];\n    for (var i = 0; i < len; i++) {\n      var v = Typr[\"B\"].readUshort(buff, p + i * 2);  //if(v==932) console.log(p+i*2);\n      arr.push(v);\n    }\n    return arr;\n  },\n  readUint: function (buff, p) {\n    //if(p>=buff.length) throw \"error\";\n    var a = Typr[\"B\"].t.uint8;\n    a[3] = buff[p]; a[2] = buff[p + 1]; a[1] = buff[p + 2]; a[0] = buff[p + 3];\n    return Typr[\"B\"].t.uint32[0];\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = (n >> 24) & 255; buff[p + 1] = (n >> 16) & 255; buff[p + 2] = (n >> 8) & 255; buff[p + 3] = (n >> 0) & 255;\n  },\n  readUint64: function (buff, p) {\n    //if(p>=buff.length) throw \"error\";\n    return (Typr[\"B\"].readUint(buff, p) * (0xffffffff + 1)) + Typr[\"B\"].readUint(buff, p + 4);\n  },\n  readASCII: function (buff, p, l)\t// l : length in Characters (not Bytes)\n  {\n    //if(p>=buff.length) throw \"error\";\n    var s = \"\";\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function (buff, p, s)\t// l : length in Characters (not Bytes)\n  {\n    for (var i = 0; i < s.length; i++)\n      buff[p + i] = s.charCodeAt(i);\n  },\n  readUnicode: function (buff, p, l) {\n    //if(p>=buff.length) throw \"error\";\n    var s = \"\";\n    for (var i = 0; i < l; i++) {\n      var c = (buff[p++] << 8) | buff[p++];\n      s += String.fromCharCode(c);\n    }\n    return s;\n  },\n  _tdec: window[\"TextDecoder\"] ? new window[\"TextDecoder\"]() : null,\n  readUTF8: function (buff, p, l) {\n    var tdec = Typr[\"B\"]._tdec;\n    if (tdec && p == 0 && l == buff.length) return tdec[\"decode\"](buff);\n    return Typr[\"B\"].readASCII(buff, p, l);\n  },\n  readBytes: function (buff, p, l) {\n    //if(p>=buff.length) throw \"error\";\n    var arr = [];\n    for (var i = 0; i < l; i++) arr.push(buff[p + i]);\n    return arr;\n  },\n  readASCIIArray: function (buff, p, l)\t// l : length in Characters (not Bytes)\n  {\n    //if(p>=buff.length) throw \"error\";\n    var s = [];\n    for (var i = 0; i < l; i++)\n      s.push(String.fromCharCode(buff[p + i]));\n    return s;\n  },\n  t: function () {\n    var ab = new ArrayBuffer(8);\n    return {\n      buff: ab,\n      int8: new Int8Array(ab),\n      uint8: new Uint8Array(ab),\n      int16: new Int16Array(ab),\n      uint16: new Uint16Array(ab),\n      int32: new Int32Array(ab),\n      uint32: new Uint32Array(ab)\n    }\n  }()\n};\n\n\n\n\n\n\nTypr[\"T\"].CFF = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var CFF = Typr[\"T\"].CFF;\n\n    data = new Uint8Array(data.buffer, offset, length);\n    offset = 0;\n\n    // Header\n    data[offset]; offset++;\n    data[offset]; offset++;\n    data[offset]; offset++;\n    data[offset]; offset++;\n    //console.log(major, minor, hdrSize, offsize);\n\n    // Name INDEX\n    var ninds = [];\n    offset = CFF.readIndex(data, offset, ninds);\n    var names = [];\n\n    for (var i = 0; i < ninds.length - 1; i++) names.push(bin.readASCII(data, offset + ninds[i], ninds[i + 1] - ninds[i]));\n    offset += ninds[ninds.length - 1];\n\n\n    // Top DICT INDEX\n    var tdinds = [];\n    offset = CFF.readIndex(data, offset, tdinds);  //console.log(tdinds);\n    // Top DICT Data\n    var topDicts = [];\n    for (var i = 0; i < tdinds.length - 1; i++) topDicts.push(CFF.readDict(data, offset + tdinds[i], offset + tdinds[i + 1]));\n    offset += tdinds[tdinds.length - 1];\n    var topdict = topDicts[0];\n    //console.log(topdict);\n\n    // String INDEX\n    var sinds = [];\n    offset = CFF.readIndex(data, offset, sinds);\n    // String Data\n    var strings = [];\n    for (var i = 0; i < sinds.length - 1; i++) strings.push(bin.readASCII(data, offset + sinds[i], sinds[i + 1] - sinds[i]));\n    offset += sinds[sinds.length - 1];\n\n    // Global Subr INDEX  (subroutines)\n    CFF.readSubrs(data, offset, topdict);\n\n    // charstrings\n\n    if (topdict[\"CharStrings\"]) topdict[\"CharStrings\"] = CFF.readBytes(data, topdict[\"CharStrings\"]);\n\n    // CID font\n    if (topdict[\"ROS\"]) {\n      offset = topdict[\"FDArray\"];\n      var fdind = [];\n      offset = CFF.readIndex(data, offset, fdind);\n\n      topdict[\"FDArray\"] = [];\n      for (var i = 0; i < fdind.length - 1; i++) {\n        var dict = CFF.readDict(data, offset + fdind[i], offset + fdind[i + 1]);\n        CFF._readFDict(data, dict, strings);\n        topdict[\"FDArray\"].push(dict);\n      }\n      offset += fdind[fdind.length - 1];\n\n      offset = topdict[\"FDSelect\"];\n      topdict[\"FDSelect\"] = [];\n      var fmt = data[offset]; offset++;\n      if (fmt == 3) {\n        var rns = bin.readUshort(data, offset); offset += 2;\n        for (var i = 0; i < rns + 1; i++) {\n          topdict[\"FDSelect\"].push(bin.readUshort(data, offset), data[offset + 2]); offset += 3;\n        }\n      }\n      else throw fmt;\n    }\n\n    // Encoding\n    //if(topdict[\"Encoding\"]) topdict[\"Encoding\"] = CFF.readEncoding(data, topdict[\"Encoding\"], topdict[\"CharStrings\"].length);\n\n    // charset\n    if (topdict[\"charset\"]) topdict[\"charset\"] = CFF.readCharset(data, topdict[\"charset\"], topdict[\"CharStrings\"].length);\n\n    CFF._readFDict(data, topdict, strings);\n    return topdict;\n  },\n\n  _readFDict: function (data, dict, ss) {\n    var CFF = Typr[\"T\"].CFF;\n    var offset;\n    if (dict[\"Private\"]) {\n      offset = dict[\"Private\"][1];\n      dict[\"Private\"] = CFF.readDict(data, offset, offset + dict[\"Private\"][0]);\n      if (dict[\"Private\"][\"Subrs\"]) CFF.readSubrs(data, offset + dict[\"Private\"][\"Subrs\"], dict[\"Private\"]);\n    }\n    for (var p in dict) if ([\"FamilyName\", \"FontName\", \"FullName\", \"Notice\", \"version\", \"Copyright\"].indexOf(p) != -1) dict[p] = ss[dict[p] - 426 + 35];\n  },\n\n  readSubrs: function (data, offset, obj) {\n    obj[\"Subrs\"] = Typr[\"T\"].CFF.readBytes(data, offset);\n\n    var bias, nSubrs = obj[\"Subrs\"].length + 1;\n    if (nSubrs < 1240) bias = 107;\n    else if (nSubrs < 33900) bias = 1131;\n    else bias = 32768;\n    obj[\"Bias\"] = bias;\n  },\n  readBytes: function (data, offset) {\n    Typr[\"B\"];\n    var arr = [];\n    offset = Typr[\"T\"].CFF.readIndex(data, offset, arr);\n\n    var subrs = [], arl = arr.length - 1, no = data.byteOffset + offset;\n    for (var i = 0; i < arl; i++) {\n      var ari = arr[i];\n      subrs.push(new Uint8Array(data.buffer, no + ari, arr[i + 1] - ari));\n    }\n    return subrs;\n  },\n\n  tableSE: [\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    1, 2, 3, 4, 5, 6, 7, 8,\n    9, 10, 11, 12, 13, 14, 15, 16,\n    17, 18, 19, 20, 21, 22, 23, 24,\n    25, 26, 27, 28, 29, 30, 31, 32,\n    33, 34, 35, 36, 37, 38, 39, 40,\n    41, 42, 43, 44, 45, 46, 47, 48,\n    49, 50, 51, 52, 53, 54, 55, 56,\n    57, 58, 59, 60, 61, 62, 63, 64,\n    65, 66, 67, 68, 69, 70, 71, 72,\n    73, 74, 75, 76, 77, 78, 79, 80,\n    81, 82, 83, 84, 85, 86, 87, 88,\n    89, 90, 91, 92, 93, 94, 95, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 96, 97, 98, 99, 100, 101, 102,\n    103, 104, 105, 106, 107, 108, 109, 110,\n    0, 111, 112, 113, 114, 0, 115, 116,\n    117, 118, 119, 120, 121, 122, 0, 123,\n    0, 124, 125, 126, 127, 128, 129, 130,\n    131, 0, 132, 133, 0, 134, 135, 136,\n    137, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0,\n    0, 138, 0, 139, 0, 0, 0, 0,\n    140, 141, 142, 143, 0, 0, 0, 0,\n    0, 144, 0, 0, 0, 145, 0, 0,\n    146, 147, 148, 149, 0, 0, 0, 0\n  ],\n\n  glyphByUnicode: function (cff, code) {\n    for (var i = 0; i < cff[\"charset\"].length; i++) if (cff[\"charset\"][i] == code) return i;\n    return -1;\n  },\n\n  glyphBySE: function (cff, charcode)\t// glyph by standard encoding\n  {\n    if (charcode < 0 || charcode > 255) return -1;\n    return Typr[\"T\"].CFF.glyphByUnicode(cff, Typr[\"T\"].CFF.tableSE[charcode]);\n  },\n\n  /*readEncoding : function(data, offset, num)\n  {\n    var bin = Typr[\"B\"];\n\n    var array = ['.notdef'];\n    var format = data[offset];  offset++;\n    //console.log(\"Encoding\");\n    //console.log(format);\n\n    if(format==0)\n    {\n      var nCodes = data[offset];  offset++;\n      for(var i=0; i<nCodes; i++)  array.push(data[offset+i]);\n    }\n    /*\n    else if(format==1 || format==2)\n    {\n      while(charset.length<num)\n      {\n        var first = bin.readUshort(data, offset);  offset+=2;\n        var nLeft=0;\n        if(format==1) {  nLeft = data[offset];  offset++;  }\n        else          {  nLeft = bin.readUshort(data, offset);  offset+=2;  }\n        for(var i=0; i<=nLeft; i++)  {  charset.push(first);  first++;  }\n      }\n    }\n\n    else throw \"error: unknown encoding format: \" + format;\n\n    return array;\n  },*/\n\n  readCharset: function (data, offset, num) {\n    var bin = Typr[\"B\"];\n\n    var charset = ['.notdef'];\n    var format = data[offset]; offset++;\n\n    if (format == 0) {\n      for (var i = 0; i < num; i++) {\n        var first = bin.readUshort(data, offset); offset += 2;\n        charset.push(first);\n      }\n    }\n    else if (format == 1 || format == 2) {\n      while (charset.length < num) {\n        var first = bin.readUshort(data, offset); offset += 2;\n        var nLeft = 0;\n        if (format == 1) { nLeft = data[offset]; offset++; }\n        else { nLeft = bin.readUshort(data, offset); offset += 2; }\n        for (var i = 0; i <= nLeft; i++) { charset.push(first); first++; }\n      }\n    }\n    else throw \"error: format: \" + format;\n\n    return charset;\n  },\n\n  readIndex: function (data, offset, inds) {\n    var bin = Typr[\"B\"];\n\n    var count = bin.readUshort(data, offset) + 1; offset += 2;\n    var offsize = data[offset]; offset++;\n\n    if (offsize == 1) for (var i = 0; i < count; i++) inds.push(data[offset + i]);\n    else if (offsize == 2) for (var i = 0; i < count; i++) inds.push(bin.readUshort(data, offset + i * 2));\n    else if (offsize == 3) for (var i = 0; i < count; i++) inds.push(bin.readUint(data, offset + i * 3 - 1) & 0x00ffffff);\n    else if (offsize == 4) for (var i = 0; i < count; i++) inds.push(bin.readUint(data, offset + i * 4));\n    else if (count != 1) throw \"unsupported offset size: \" + offsize + \", count: \" + count;\n\n    offset += count * offsize;\n    return offset - 1;\n  },\n\n  getCharString: function (data, offset, o) {\n    var bin = Typr[\"B\"];\n\n    var b0 = data[offset], b1 = data[offset + 1]; data[offset + 2]; data[offset + 3]; data[offset + 4];\n    var vs = 1;\n    var op = null, val = null;\n    // operand\n    if (b0 <= 20) { op = b0; vs = 1; }\n    if (b0 == 12) { op = b0 * 100 + b1; vs = 2; }\n    //if(b0==19 || b0==20) { op = b0/*+\" \"+b1*/;  vs=2; }\n    if (21 <= b0 && b0 <= 27) { op = b0; vs = 1; }\n    if (b0 == 28) { val = bin.readShort(data, offset + 1); vs = 3; }\n    if (29 <= b0 && b0 <= 31) { op = b0; vs = 1; }\n    if (32 <= b0 && b0 <= 246) { val = b0 - 139; vs = 1; }\n    if (247 <= b0 && b0 <= 250) { val = (b0 - 247) * 256 + b1 + 108; vs = 2; }\n    if (251 <= b0 && b0 <= 254) { val = -(b0 - 251) * 256 - b1 - 108; vs = 2; }\n    if (b0 == 255) { val = bin.readInt(data, offset + 1) / 0xffff; vs = 5; }\n\n    o.val = val != null ? val : \"o\" + op;\n    o.size = vs;\n  },\n\n  readCharString: function (data, offset, length) {\n    var end = offset + length;\n    var bin = Typr[\"B\"];\n    var arr = [];\n\n    while (offset < end) {\n      var b0 = data[offset], b1 = data[offset + 1]; data[offset + 2]; data[offset + 3]; data[offset + 4];\n      var vs = 1;\n      var op = null, val = null;\n      // operand\n      if (b0 <= 20) { op = b0; vs = 1; }\n      if (b0 == 12) { op = b0 * 100 + b1; vs = 2; }\n      if (b0 == 19 || b0 == 20) { op = b0/*+\" \"+b1*/; vs = 2; }\n      if (21 <= b0 && b0 <= 27) { op = b0; vs = 1; }\n      if (b0 == 28) { val = bin.readShort(data, offset + 1); vs = 3; }\n      if (29 <= b0 && b0 <= 31) { op = b0; vs = 1; }\n      if (32 <= b0 && b0 <= 246) { val = b0 - 139; vs = 1; }\n      if (247 <= b0 && b0 <= 250) { val = (b0 - 247) * 256 + b1 + 108; vs = 2; }\n      if (251 <= b0 && b0 <= 254) { val = -(b0 - 251) * 256 - b1 - 108; vs = 2; }\n      if (b0 == 255) { val = bin.readInt(data, offset + 1) / 0xffff; vs = 5; }\n\n      arr.push(val != null ? val : \"o\" + op);\n      offset += vs;\n\n      //var cv = arr[arr.length-1];\n      //if(cv==undefined) throw \"error\";\n      //console.log()\n    }\n    return arr;\n  },\n\n  readDict: function (data, offset, end) {\n    var bin = Typr[\"B\"];\n    //var dict = [];\n    var dict = {};\n    var carr = [];\n\n    while (offset < end) {\n      var b0 = data[offset], b1 = data[offset + 1]; data[offset + 2]; data[offset + 3]; data[offset + 4];\n      var vs = 1;\n      var key = null, val = null;\n      // operand\n      if (b0 == 28) { val = bin.readShort(data, offset + 1); vs = 3; }\n      if (b0 == 29) { val = bin.readInt(data, offset + 1); vs = 5; }\n      if (32 <= b0 && b0 <= 246) { val = b0 - 139; vs = 1; }\n      if (247 <= b0 && b0 <= 250) { val = (b0 - 247) * 256 + b1 + 108; vs = 2; }\n      if (251 <= b0 && b0 <= 254) { val = -(b0 - 251) * 256 - b1 - 108; vs = 2; }\n      if (b0 == 255) { val = bin.readInt(data, offset + 1) / 0xffff; vs = 5; throw \"unknown number\"; }\n\n      if (b0 == 30) {\n        var nibs = [];\n        vs = 1;\n        while (true) {\n          var b = data[offset + vs]; vs++;\n          var nib0 = b >> 4, nib1 = b & 0xf;\n          if (nib0 != 0xf) nibs.push(nib0); if (nib1 != 0xf) nibs.push(nib1);\n          if (nib1 == 0xf) break;\n        }\n        var s = \"\";\n        var chars = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \".\", \"e\", \"e-\", \"reserved\", \"-\", \"endOfNumber\"];\n        for (var i = 0; i < nibs.length; i++) s += chars[nibs[i]];\n        //console.log(nibs);\n        val = parseFloat(s);\n      }\n\n      if (b0 <= 21)\t// operator\n      {\n        var keys = [\"version\", \"Notice\", \"FullName\", \"FamilyName\", \"Weight\", \"FontBBox\", \"BlueValues\", \"OtherBlues\", \"FamilyBlues\", \"FamilyOtherBlues\",\n          \"StdHW\", \"StdVW\", \"escape\", \"UniqueID\", \"XUID\", \"charset\", \"Encoding\", \"CharStrings\", \"Private\", \"Subrs\",\n          \"defaultWidthX\", \"nominalWidthX\"];\n\n        key = keys[b0]; vs = 1;\n        if (b0 == 12) {\n          var keys = [\"Copyright\", \"isFixedPitch\", \"ItalicAngle\", \"UnderlinePosition\", \"UnderlineThickness\", \"PaintType\", \"CharstringType\", \"FontMatrix\", \"StrokeWidth\", \"BlueScale\",\n            \"BlueShift\", \"BlueFuzz\", \"StemSnapH\", \"StemSnapV\", \"ForceBold\", \"\", \"\", \"LanguageGroup\", \"ExpansionFactor\", \"initialRandomSeed\",\n            \"SyntheticBase\", \"PostScript\", \"BaseFontName\", \"BaseFontBlend\", \"\", \"\", \"\", \"\", \"\", \"\",\n            \"ROS\", \"CIDFontVersion\", \"CIDFontRevision\", \"CIDFontType\", \"CIDCount\", \"UIDBase\", \"FDArray\", \"FDSelect\", \"FontName\"];\n          key = keys[b1]; vs = 2;\n        }\n      }\n\n      if (key != null) { dict[key] = carr.length == 1 ? carr[0] : carr; carr = []; }\n      else carr.push(val);\n\n      offset += vs;\n    }\n    return dict;\n  }\n};\n\n\nTypr[\"T\"].cmap = {\n  parseTab: function (data, offset, length) {\n    var obj = { tables: [], ids: {}, off: offset };\n    data = new Uint8Array(data.buffer, offset, length);\n    offset = 0;\n    var bin = Typr[\"B\"], rU = bin.readUshort, cmap = Typr[\"T\"].cmap;\n    rU(data, offset); offset += 2;\n    var numTables = rU(data, offset); offset += 2;\n\n    //console.log(version, numTables);\n\n    var offs = [];\n\n\n    for (var i = 0; i < numTables; i++) {\n      var platformID = rU(data, offset); offset += 2;\n      var encodingID = rU(data, offset); offset += 2;\n      var noffset = bin.readUint(data, offset); offset += 4;\n\n      var id = \"p\" + platformID + \"e\" + encodingID;\n\n      //console.log(\"cmap subtable\", platformID, encodingID, noffset);\n\n\n      var tind = offs.indexOf(noffset);\n\n      if (tind == -1) {\n        tind = obj.tables.length;\n        var subt = {};\n        offs.push(noffset);\n        //var time = Date.now();\n        var format = subt.format = rU(data, noffset);\n        if (format == 0) subt = cmap.parse0(data, noffset, subt);\n        //else if(format== 2) subt.off = noffset;\n        else if (format == 4) subt = cmap.parse4(data, noffset, subt);\n        else if (format == 6) subt = cmap.parse6(data, noffset, subt);\n        else if (format == 12) subt = cmap.parse12(data, noffset, subt);\n        //console.log(format, Date.now()-time);\n        //else console.log(\"unknown format: \"+format, platformID, encodingID, noffset);\n        obj.tables.push(subt);\n      }\n\n      if (obj.ids[id] != null) console.log(\"multiple tables for one platform+encoding: \" + id);\n      obj.ids[id] = tind;\n    }\n    return obj;\n  },\n\n  parse0: function (data, offset, obj) {\n    var bin = Typr[\"B\"];\n    offset += 2;\n    var len = bin.readUshort(data, offset); offset += 2;\n    bin.readUshort(data, offset); offset += 2;\n    obj.map = [];\n    for (var i = 0; i < len - 6; i++) obj.map.push(data[offset + i]);\n    return obj;\n  },\n\n  parse4: function (data, offset, obj) {\n    var bin = Typr[\"B\"], rU = bin.readUshort, rUs = bin.readUshorts;\n    var offset0 = offset;\n    offset += 2;\n    var length = rU(data, offset); offset += 2;\n    rU(data, offset); offset += 2;\n    var segCountX2 = rU(data, offset); offset += 2;\n    var segCount = segCountX2 >>> 1;\n    obj.searchRange = rU(data, offset); offset += 2;\n    obj.entrySelector = rU(data, offset); offset += 2;\n    obj.rangeShift = rU(data, offset); offset += 2;\n    obj.endCount = rUs(data, offset, segCount); offset += segCount * 2;\n    offset += 2;\n    obj.startCount = rUs(data, offset, segCount); offset += segCount * 2;\n    obj.idDelta = [];\n    for (var i = 0; i < segCount; i++) { obj.idDelta.push(bin.readShort(data, offset)); offset += 2; }\n    obj.idRangeOffset = rUs(data, offset, segCount); offset += segCount * 2;\n    obj.glyphIdArray = rUs(data, offset, ((offset0 + length) - offset) >> 1);  //offset += segCount*2;\n    return obj;\n  },\n\n  parse6: function (data, offset, obj) {\n    var bin = Typr[\"B\"];\n    offset += 2;\n    bin.readUshort(data, offset); offset += 2;\n    bin.readUshort(data, offset); offset += 2;\n    obj.firstCode = bin.readUshort(data, offset); offset += 2;\n    var entryCount = bin.readUshort(data, offset); offset += 2;\n    obj.glyphIdArray = [];\n    for (var i = 0; i < entryCount; i++) { obj.glyphIdArray.push(bin.readUshort(data, offset)); offset += 2; }\n\n    return obj;\n  },\n\n  parse12: function (data, offset, obj) {\n    var bin = Typr[\"B\"], rU = bin.readUint;\n    offset += 4;\n    rU(data, offset); offset += 4;\n    rU(data, offset); offset += 4;\n    var nGroups = rU(data, offset) * 3; offset += 4;\n\n    var gps = obj.groups = new Uint32Array(nGroups);//new Uint32Array(data.slice(offset, offset+nGroups*12).buffer);\n\n    for (var i = 0; i < nGroups; i += 3) {\n      gps[i] = rU(data, offset + (i << 2));\n      gps[i + 1] = rU(data, offset + (i << 2) + 4);\n      gps[i + 2] = rU(data, offset + (i << 2) + 8);\n    }\n    return obj;\n  }\n};\n\nTypr[\"T\"].CBLC = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"], ooff = offset;\n\n    bin.readUshort(data, offset); offset += 2;\n    bin.readUshort(data, offset); offset += 2;\n\n    var numSizes = bin.readUint(data, offset); offset += 4;\n\n    var out = [];\n    for (var i = 0; i < numSizes; i++) {\n      var off = bin.readUint(data, offset); offset += 4;  // indexSubTableArrayOffset\n      bin.readUint(data, offset); offset += 4;  // indexTablesSize\n      bin.readUint(data, offset); offset += 4;  // numberOfIndexSubTables\n      offset += 4;\n\n      offset += 2 * 12;\n\n      bin.readUshort(data, offset); offset += 2;\n      bin.readUshort(data, offset); offset += 2;\n\n      //console.log(off,siz,num, sGlyph, eGlyph);\n\n      offset += 4;\n\n      var coff = ooff + off;\n      for (var j = 0; j < 3; j++) {\n        var fgI = bin.readUshort(data, coff); coff += 2;\n        var lgI = bin.readUshort(data, coff); coff += 2;\n        var nxt = bin.readUint(data, coff); coff += 4;\n        var gcnt = lgI - fgI + 1;\n        //console.log(fgI, lgI, nxt);   //if(nxt==0) break;\n\n        var ioff = ooff + off + nxt;\n\n        var inF = bin.readUshort(data, ioff); ioff += 2; if (inF != 1) throw inF;\n        var imF = bin.readUshort(data, ioff); ioff += 2;\n        var imgo = bin.readUint(data, ioff); ioff += 4;\n\n        var oarr = [];\n        for (var gi = 0; gi < gcnt; gi++) {\n          var sbitO = bin.readUint(data, ioff + gi * 4); oarr.push(imgo + sbitO);\n          //console.log(\"--\",sbitO);\n        }\n        out.push([fgI, lgI, imF, oarr]);\n      }\n    }\n    return out;\n  }\n};\n\nTypr[\"T\"].CBDT = {\n  parseTab: function (data, offset, length) {\n    Typr[\"B\"];\n\n    //var maj = bin.readUshort(data,offset);  offset+=2;\n    //var min = bin.readUshort(data,offset);  offset+=2;\n\n    return new Uint8Array(data.buffer, data.byteOffset + offset, length);\n  }\n};\n\nTypr[\"T\"].glyf = {\n  parseTab: function (data, offset, length, font) {\n    var obj = [], ng = font[\"maxp\"][\"numGlyphs\"];\n    for (var g = 0; g < ng; g++) obj.push(null);\n    return obj;\n  },\n\n  _parseGlyf: function (font, g) {\n    var bin = Typr[\"B\"];\n    var data = font[\"_data\"], loca = font[\"loca\"];\n\n    if (loca[g] == loca[g + 1]) return null;\n\n    var offset = Typr[\"findTable\"](data, \"glyf\", font[\"_offset\"])[0] + loca[g];\n\n    var gl = {};\n\n    gl.noc = bin.readShort(data, offset); offset += 2;\t\t// number of contours\n    gl.xMin = bin.readShort(data, offset); offset += 2;\n    gl.yMin = bin.readShort(data, offset); offset += 2;\n    gl.xMax = bin.readShort(data, offset); offset += 2;\n    gl.yMax = bin.readShort(data, offset); offset += 2;\n\n    if (gl.xMin >= gl.xMax || gl.yMin >= gl.yMax) return null;\n\n    if (gl.noc > 0) {\n      gl.endPts = [];\n      for (var i = 0; i < gl.noc; i++) { gl.endPts.push(bin.readUshort(data, offset)); offset += 2; }\n\n      var instructionLength = bin.readUshort(data, offset); offset += 2;\n      if ((data.length - offset) < instructionLength) return null;\n      gl.instructions = bin.readBytes(data, offset, instructionLength); offset += instructionLength;\n\n      var crdnum = gl.endPts[gl.noc - 1] + 1;\n      gl.flags = [];\n      for (var i = 0; i < crdnum; i++) {\n        var flag = data[offset]; offset++;\n        gl.flags.push(flag);\n        if ((flag & 8) != 0) {\n          var rep = data[offset]; offset++;\n          for (var j = 0; j < rep; j++) { gl.flags.push(flag); i++; }\n        }\n      }\n      gl.xs = [];\n      for (var i = 0; i < crdnum; i++) {\n        var i8 = ((gl.flags[i] & 2) != 0), same = ((gl.flags[i] & 16) != 0);\n        if (i8) { gl.xs.push(same ? data[offset] : -data[offset]); offset++; }\n        else {\n          if (same) gl.xs.push(0);\n          else { gl.xs.push(bin.readShort(data, offset)); offset += 2; }\n        }\n      }\n      gl.ys = [];\n      for (var i = 0; i < crdnum; i++) {\n        var i8 = ((gl.flags[i] & 4) != 0), same = ((gl.flags[i] & 32) != 0);\n        if (i8) { gl.ys.push(same ? data[offset] : -data[offset]); offset++; }\n        else {\n          if (same) gl.ys.push(0);\n          else { gl.ys.push(bin.readShort(data, offset)); offset += 2; }\n        }\n      }\n      var x = 0, y = 0;\n      for (var i = 0; i < crdnum; i++) { x += gl.xs[i]; y += gl.ys[i]; gl.xs[i] = x; gl.ys[i] = y; }\n      //console.log(endPtsOfContours, instructionLength, instructions, flags, xCoordinates, yCoordinates);\n    }\n    else {\n      var ARG_1_AND_2_ARE_WORDS = 1 << 0;\n      var ARGS_ARE_XY_VALUES = 1 << 1;\n      var WE_HAVE_A_SCALE = 1 << 3;\n      var MORE_COMPONENTS = 1 << 5;\n      var WE_HAVE_AN_X_AND_Y_SCALE = 1 << 6;\n      var WE_HAVE_A_TWO_BY_TWO = 1 << 7;\n      var WE_HAVE_INSTRUCTIONS = 1 << 8;\n\n      gl.parts = [];\n      var flags;\n      do {\n        flags = bin.readUshort(data, offset); offset += 2;\n        var part = { m: { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 }, p1: -1, p2: -1 }; gl.parts.push(part);\n        part.glyphIndex = bin.readUshort(data, offset); offset += 2;\n        if (flags & ARG_1_AND_2_ARE_WORDS) {\n          var arg1 = bin.readShort(data, offset); offset += 2;\n          var arg2 = bin.readShort(data, offset); offset += 2;\n        } else {\n          var arg1 = bin.readInt8(data, offset); offset++;\n          var arg2 = bin.readInt8(data, offset); offset++;\n        }\n\n        if (flags & ARGS_ARE_XY_VALUES) { part.m.tx = arg1; part.m.ty = arg2; }\n        else { part.p1 = arg1; part.p2 = arg2; }\n        //part.m.tx = arg1;  part.m.ty = arg2;\n        //else { throw \"params are not XY values\"; }\n\n        if (flags & WE_HAVE_A_SCALE) {\n          part.m.a = part.m.d = bin.readF2dot14(data, offset); offset += 2;\n        } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {\n          part.m.a = bin.readF2dot14(data, offset); offset += 2;\n          part.m.d = bin.readF2dot14(data, offset); offset += 2;\n        } else if (flags & WE_HAVE_A_TWO_BY_TWO) {\n          part.m.a = bin.readF2dot14(data, offset); offset += 2;\n          part.m.b = bin.readF2dot14(data, offset); offset += 2;\n          part.m.c = bin.readF2dot14(data, offset); offset += 2;\n          part.m.d = bin.readF2dot14(data, offset); offset += 2;\n        }\n      } while (flags & MORE_COMPONENTS)\n      if (flags & WE_HAVE_INSTRUCTIONS) {\n        var numInstr = bin.readUshort(data, offset); offset += 2;\n        gl.instr = [];\n        for (var i = 0; i < numInstr; i++) { gl.instr.push(data[offset]); offset++; }\n      }\n    }\n    return gl;\n  }\n};\n\nTypr[\"T\"].head = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var obj = {};\n    bin.readFixed(data, offset); offset += 4;\n\n    obj[\"fontRevision\"] = bin.readFixed(data, offset); offset += 4;\n    bin.readUint(data, offset); offset += 4;\n    bin.readUint(data, offset); offset += 4;\n    obj[\"flags\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"unitsPerEm\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"created\"] = bin.readUint64(data, offset); offset += 8;\n    obj[\"modified\"] = bin.readUint64(data, offset); offset += 8;\n    obj[\"xMin\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"yMin\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"xMax\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"yMax\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"macStyle\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"lowestRecPPEM\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"fontDirectionHint\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"indexToLocFormat\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"glyphDataFormat\"] = bin.readShort(data, offset); offset += 2;\n    return obj;\n  }\n};\n\nTypr[\"T\"].hhea = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var obj = {};\n    bin.readFixed(data, offset); offset += 4;\n\n    var keys = [\"ascender\", \"descender\", \"lineGap\",\n      \"advanceWidthMax\", \"minLeftSideBearing\", \"minRightSideBearing\", \"xMaxExtent\",\n      \"caretSlopeRise\", \"caretSlopeRun\", \"caretOffset\",\n      \"res0\", \"res1\", \"res2\", \"res3\",\n      \"metricDataFormat\", \"numberOfHMetrics\"];\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var func = (key == \"advanceWidthMax\" || key == \"numberOfHMetrics\") ? bin.readUshort : bin.readShort;\n      obj[key] = func(data, offset + i * 2);\n    }\n    return obj;\n  }\n};\n\n\nTypr[\"T\"].hmtx = {\n  parseTab: function (data, offset, length, font) {\n    var bin = Typr[\"B\"];\n    var aWidth = [];\n    var lsBearing = [];\n\n    var nG = font[\"maxp\"][\"numGlyphs\"], nH = font[\"hhea\"][\"numberOfHMetrics\"];\n    var aw = 0, lsb = 0, i = 0;\n    while (i < nH) { aw = bin.readUshort(data, offset + (i << 2)); lsb = bin.readShort(data, offset + (i << 2) + 2); aWidth.push(aw); lsBearing.push(lsb); i++; }\n    while (i < nG) { aWidth.push(aw); lsBearing.push(lsb); i++; }\n\n    return { aWidth: aWidth, lsBearing: lsBearing };\n  }\n};\n\n\nTypr[\"T\"].kern = {\n  parseTab: function (data, offset, length, font) {\n    var bin = Typr[\"B\"], kern = Typr[\"T\"].kern;\n\n    var version = bin.readUshort(data, offset);\n    if (version == 1) return kern.parseV1(data, offset, length, font);\n    var nTables = bin.readUshort(data, offset + 2); offset += 4;\n\n    var map = { glyph1: [], rval: [] };\n    for (var i = 0; i < nTables; i++) {\n      offset += 2;\t// skip version\n      var length = bin.readUshort(data, offset); offset += 2;\n      var coverage = bin.readUshort(data, offset); offset += 2;\n      var format = coverage >>> 8;\n\t\t\t/* I have seen format 128 once, that's why I do */ format &= 0xf;\n      if (format == 0) offset = kern.readFormat0(data, offset, map);\n      //else throw \"unknown kern table format: \"+format;\n    }\n    return map;\n  },\n\n  parseV1: function (data, offset, length, font) {\n    var bin = Typr[\"B\"], kern = Typr[\"T\"].kern;\n\n    bin.readFixed(data, offset);   // 0x00010000\n    var nTables = bin.readUint(data, offset + 4); offset += 8;\n\n    var map = { glyph1: [], rval: [] };\n    for (var i = 0; i < nTables; i++) {\n      bin.readUint(data, offset); offset += 4;\n      var coverage = bin.readUshort(data, offset); offset += 2;\n      bin.readUshort(data, offset); offset += 2;\n      var format = coverage & 0xff;\n      if (format == 0) offset = kern.readFormat0(data, offset, map);\n      //else throw \"unknown kern table format: \"+format;\n    }\n    return map;\n  },\n\n  readFormat0: function (data, offset, map) {\n    var bin = Typr[\"B\"], rUs = bin.readUshort;\n    var pleft = -1;\n    var nPairs = rUs(data, offset);\n    rUs(data, offset + 2);\n    rUs(data, offset + 4);\n    rUs(data, offset + 6); offset += 8;\n    for (var j = 0; j < nPairs; j++) {\n      var left = rUs(data, offset); offset += 2;\n      var right = rUs(data, offset); offset += 2;\n      var value = bin.readShort(data, offset); offset += 2;\n      if (left != pleft) { map.glyph1.push(left); map.rval.push({ glyph2: [], vals: [] }); }\n      var rval = map.rval[map.rval.length - 1];\n      rval.glyph2.push(right); rval.vals.push(value);\n      pleft = left;\n    }\n    return offset;\n  }\n};\n\n\nTypr[\"T\"].loca = {\n  parseTab: function (data, offset, length, font) {\n    var bin = Typr[\"B\"];\n    var obj = [];\n\n    var ver = font[\"head\"][\"indexToLocFormat\"];\n    var len = font[\"maxp\"][\"numGlyphs\"] + 1;\n\n    if (ver == 0) for (var i = 0; i < len; i++) obj.push(bin.readUshort(data, offset + (i << 1)) << 1);\n    if (ver == 1) for (var i = 0; i < len; i++) obj.push(bin.readUint(data, offset + (i << 2)));\n\n    return obj;\n  }\n};\n\n\nTypr[\"T\"].maxp = {\n  parseTab: function (data, offset, length) {\n    //console.log(data.length, offset, length);\n\n    var bin = Typr[\"B\"], rU = bin.readUshort;\n    var obj = {};\n\n    // both versions 0.5 and 1.0\n    bin.readUint(data, offset); offset += 4;\n\n    obj[\"numGlyphs\"] = rU(data, offset); offset += 2;\n\n    // only 1.0\n    /*\n    if(ver == 0x00010000) {\n      obj.maxPoints             = rU(data, offset);  offset += 2;\n      obj.maxContours           = rU(data, offset);  offset += 2;\n      obj.maxCompositePoints    = rU(data, offset);  offset += 2;\n      obj.maxCompositeContours  = rU(data, offset);  offset += 2;\n      obj.maxZones              = rU(data, offset);  offset += 2;\n      obj.maxTwilightPoints     = rU(data, offset);  offset += 2;\n      obj.maxStorage            = rU(data, offset);  offset += 2;\n      obj.maxFunctionDefs       = rU(data, offset);  offset += 2;\n      obj.maxInstructionDefs    = rU(data, offset);  offset += 2;\n      obj.maxStackElements      = rU(data, offset);  offset += 2;\n      obj.maxSizeOfInstructions = rU(data, offset);  offset += 2;\n      obj.maxComponentElements  = rU(data, offset);  offset += 2;\n      obj.maxComponentDepth     = rU(data, offset);  offset += 2;\n    }\n    */\n\n    return obj;\n  }\n};\nTypr[\"T\"].name = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var obj = {};\n    bin.readUshort(data, offset); offset += 2;\n    var count = bin.readUshort(data, offset); offset += 2;\n    var stringOffset = bin.readUshort(data, offset); offset += 2;\n\n    var ooo = offset - 6 + stringOffset;\n    //console.log(format,count);\n\n    var names = [\n      \"copyright\",\n      \"fontFamily\",\n      \"fontSubfamily\",\n      \"ID\",\n      \"fullName\",\n      \"version\",\n      \"postScriptName\",\n      \"trademark\",\n      \"manufacturer\",\n      \"designer\",\n      \"description\",\n      \"urlVendor\",\n      \"urlDesigner\",\n      \"licence\",\n      \"licenceURL\",\n      \"---\",\n      \"typoFamilyName\",\n      \"typoSubfamilyName\",\n      \"compatibleFull\",\n      \"sampleText\",\n      \"postScriptCID\",\n      \"wwsFamilyName\",\n      \"wwsSubfamilyName\",\n      \"lightPalette\",\n      \"darkPalette\"\n    ];\n\n    var rU = bin.readUshort;\n\n    for (var i = 0; i < count; i++) {\n      var platformID = rU(data, offset); offset += 2;\n      var encodingID = rU(data, offset); offset += 2;\n      var languageID = rU(data, offset); offset += 2;\n      var nameID = rU(data, offset); offset += 2;\n      var slen = rU(data, offset); offset += 2;\n      var noffset = rU(data, offset); offset += 2;\n      //console.log(platformID, encodingID, languageID.toString(16), nameID, length, noffset);\n\n\n      var soff = ooo + noffset;\n      var str;\n      if (platformID == 0) str = bin.readUnicode(data, soff, slen / 2);\n      else if (platformID == 3 && encodingID == 0) str = bin.readUnicode(data, soff, slen / 2);\n      else if (platformID == 1 && encodingID == 25) str = bin.readUnicode(data, soff, slen / 2);\n      else if (encodingID == 0) str = bin.readASCII(data, soff, slen);\n      else if (encodingID == 1) str = bin.readUnicode(data, soff, slen / 2);\n      else if (encodingID == 3) str = bin.readUnicode(data, soff, slen / 2);\n      else if (encodingID == 4) str = bin.readUnicode(data, soff, slen / 2);\n      else if (encodingID == 5) str = bin.readUnicode(data, soff, slen / 2);\n      else if (encodingID == 10) str = bin.readUnicode(data, soff, slen / 2);\n\n      else if (platformID == 1) { str = bin.readASCII(data, soff, slen); console.log(\"reading unknown MAC encoding \" + encodingID + \" as ASCII\"); }\n      else {\n        console.log(\"unknown encoding \" + encodingID + \", platformID: \" + platformID);\n        str = bin.readASCII(data, soff, slen);\n      }\n\n      var tid = \"p\" + platformID + \",\" + (languageID).toString(16);//Typr._platforms[platformID];\n      if (obj[tid] == null) obj[tid] = {};\n      var name = names[nameID]; if (name == null) name = \"_\" + nameID;\n      obj[tid][name] = str;\n      obj[tid][\"_lang\"] = languageID;\n      //console.log(tid, obj[tid]);\n    }\n    /*\n    if(format == 1)\n    {\n      var langTagCount = bin.readUshort(data, offset);  offset += 2;\n      for(var i=0; i<langTagCount; i++)\n      {\n        var length  = bin.readUshort(data, offset);  offset += 2;\n        var noffset = bin.readUshort(data, offset);  offset += 2;\n      }\n    }\n    */\n    var out = Typr[\"T\"].name.selectOne(obj), ff = \"fontFamily\";\n    if (out[ff] == null) for (var p in obj) if (obj[p][ff] != null) out[ff] = obj[p][ff];\n    return out;\n  },\n  selectOne: function (obj) {\n    //console.log(obj);\n    var psn = \"postScriptName\";\n\n    for (var p in obj) if (obj[p][psn] != null && obj[p][\"_lang\"] == 0x0409) return obj[p];\t\t// United States\n    for (var p in obj) if (obj[p][psn] != null && obj[p][\"_lang\"] == 0x0000) return obj[p];\t\t// Universal\n    for (var p in obj) if (obj[p][psn] != null && obj[p][\"_lang\"] == 0x0c0c) return obj[p];\t\t// Canada\n    for (var p in obj) if (obj[p][psn] != null) return obj[p];\n\n    var out;\n    for (var p in obj) { out = obj[p]; break; }\n    console.log(\"returning name table with languageID \" + out._lang);\n    if (out[psn] == null && out[\"ID\"] != null) out[psn] = out[\"ID\"];\n    return out;\n  }\n};\n\nTypr[\"T\"].OS2 = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var ver = bin.readUshort(data, offset); offset += 2;\n\n    var OS2 = Typr[\"T\"].OS2;\n\n    var obj = {};\n    if (ver == 0) OS2.version0(data, offset, obj);\n    else if (ver == 1) OS2.version1(data, offset, obj);\n    else if (ver == 2 || ver == 3 || ver == 4) OS2.version2(data, offset, obj);\n    else if (ver == 5) OS2.version5(data, offset, obj);\n    else throw \"unknown OS/2 table version: \" + ver;\n\n    return obj;\n  },\n\n  version0: function (data, offset, obj) {\n    var bin = Typr[\"B\"];\n    obj[\"xAvgCharWidth\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"usWeightClass\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"usWidthClass\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"fsType\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"ySubscriptXSize\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySubscriptYSize\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySubscriptXOffset\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySubscriptYOffset\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySuperscriptXSize\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySuperscriptYSize\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySuperscriptXOffset\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"ySuperscriptYOffset\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"yStrikeoutSize\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"yStrikeoutPosition\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"sFamilyClass\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"panose\"] = bin.readBytes(data, offset, 10); offset += 10;\n    obj[\"ulUnicodeRange1\"] = bin.readUint(data, offset); offset += 4;\n    obj[\"ulUnicodeRange2\"] = bin.readUint(data, offset); offset += 4;\n    obj[\"ulUnicodeRange3\"] = bin.readUint(data, offset); offset += 4;\n    obj[\"ulUnicodeRange4\"] = bin.readUint(data, offset); offset += 4;\n    obj[\"achVendID\"] = bin.readASCII(data, offset, 4); offset += 4;\n    obj[\"fsSelection\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"usFirstCharIndex\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"usLastCharIndex\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"sTypoAscender\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"sTypoDescender\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"sTypoLineGap\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"usWinAscent\"] = bin.readUshort(data, offset); offset += 2;\n    obj[\"usWinDescent\"] = bin.readUshort(data, offset); offset += 2;\n    return offset;\n  },\n\n  version1: function (data, offset, obj) {\n    var bin = Typr[\"B\"];\n    offset = Typr[\"T\"].OS2.version0(data, offset, obj);\n\n    obj[\"ulCodePageRange1\"] = bin.readUint(data, offset); offset += 4;\n    obj[\"ulCodePageRange2\"] = bin.readUint(data, offset); offset += 4;\n    return offset;\n  },\n\n  version2: function (data, offset, obj) {\n    var bin = Typr[\"B\"], rU = bin.readUshort;\n    offset = Typr[\"T\"].OS2.version1(data, offset, obj);\n\n    obj[\"sxHeight\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"sCapHeight\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"usDefault\"] = rU(data, offset); offset += 2;\n    obj[\"usBreak\"] = rU(data, offset); offset += 2;\n    obj[\"usMaxContext\"] = rU(data, offset); offset += 2;\n    return offset;\n  },\n\n  version5: function (data, offset, obj) {\n    var rU = Typr[\"B\"].readUshort;\n    offset = Typr[\"T\"].OS2.version2(data, offset, obj);\n\n    obj[\"usLowerOpticalPointSize\"] = rU(data, offset); offset += 2;\n    obj[\"usUpperOpticalPointSize\"] = rU(data, offset); offset += 2;\n    return offset;\n  }\n};\n\nTypr[\"T\"].post = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var obj = {};\n\n    obj[\"version\"] = bin.readFixed(data, offset); offset += 4;\n    obj[\"italicAngle\"] = bin.readFixed(data, offset); offset += 4;\n    obj[\"underlinePosition\"] = bin.readShort(data, offset); offset += 2;\n    obj[\"underlineThickness\"] = bin.readShort(data, offset); offset += 2;\n\n    return obj;\n  }\n};\nTypr[\"T\"].SVG = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var obj = { entries: [], svgs: [] };\n\n    var offset0 = offset;\n\n    bin.readUshort(data, offset); offset += 2;\n    var svgDocIndexOffset = bin.readUint(data, offset); offset += 4;\n    bin.readUint(data, offset); offset += 4;\n\n    offset = svgDocIndexOffset + offset0;\n\n    var numEntries = bin.readUshort(data, offset); offset += 2;\n\n    for (var i = 0; i < numEntries; i++) {\n      var startGlyphID = bin.readUshort(data, offset); offset += 2;\n      var endGlyphID = bin.readUshort(data, offset); offset += 2;\n      var svgDocOffset = bin.readUint(data, offset); offset += 4;\n      var svgDocLength = bin.readUint(data, offset); offset += 4;\n\n      var sbuf = new Uint8Array(data.buffer, offset0 + svgDocOffset + svgDocIndexOffset, svgDocLength);\n      if (sbuf[0] == 0x1f && sbuf[1] == 0x8b && sbuf[2] == 0x08) sbuf = pako[\"inflate\"](sbuf);\n      var svg = bin.readUTF8(sbuf, 0, sbuf.length);\n\n      for (var f = startGlyphID; f <= endGlyphID; f++) {\n        obj.entries[f] = obj.svgs.length;\n      }\n      obj.svgs.push(svg);\n    }\n    return obj;\n  }\n};\n\n\nTypr[\"T\"].sbix = {\n  parseTab: function (data, offset, length, obj) {\n    var numGlyphs = obj[\"maxp\"][\"numGlyphs\"];\n    var ooff = offset;\n    var bin = Typr[\"B\"];\n\n    //var ver = bin.readUshort(data,offset);  offset+=2;\n    //var flg = bin.readUshort(data,offset);  offset+=2;\n\n    var numStrikes = bin.readUint(data, offset + 4);\n\n    var out = [];\n    for (var si = numStrikes - 1; si < numStrikes; si++) {\n      var off = ooff + bin.readUint(data, offset + 8 + si * 4);\n\n      //var ppem = bin.readUshort(data,off);  off+=2;\n      //var ppi  = bin.readUshort(data,off);  off+=2;\n\n      for (var gi = 0; gi < numGlyphs; gi++) {\n        var aoff = bin.readUint(data, off + 4 + gi * 4);\n        var noff = bin.readUint(data, off + 4 + gi * 4 + 4); if (aoff == noff) { out[gi] = null; continue; }\n        var go = off + aoff;\n        //var ooX = bin.readUshort(data,go);\n        //var ooY = bin.readUshort(data,go+2);\n        var tag = bin.readASCII(data, go + 4, 4); if (tag != \"png \") throw tag;\n\n        out[gi] = new Uint8Array(data.buffer, data.byteOffset + go + 8, noff - aoff - 8);\n      }\n    }\n    return out;\n  }\n};\n\nTypr[\"T\"].colr = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var ooff = offset;\n    offset += 2;\n    var num = bin.readUshort(data, offset); offset += 2;\n\n    var boff = bin.readUint(data, offset); offset += 4;\n    var loff = bin.readUint(data, offset); offset += 4;\n\n    var lnum = bin.readUshort(data, offset); offset += 2;\n    //console.log(num,boff,loff,lnum);\n\n    var base = {};\n    var coff = ooff + boff;\n    for (var i = 0; i < num; i++) {\n      base[\"g\" + bin.readUshort(data, coff)] = [bin.readUshort(data, coff + 2), bin.readUshort(data, coff + 4)];\n      coff += 6;\n    }\n\n    var lays = [];\n    coff = ooff + loff;\n    for (var i = 0; i < lnum; i++) {\n      lays.push(bin.readUshort(data, coff), bin.readUshort(data, coff + 2)); coff += 4;\n    }\n    return [base, lays];\n  }\n};\n\nTypr[\"T\"].cpal = {\n  parseTab: function (data, offset, length) {\n    var bin = Typr[\"B\"];\n    var ooff = offset;\n    var vsn = bin.readUshort(data, offset); offset += 2;\n\n    if (vsn == 0) {\n      bin.readUshort(data, offset); offset += 2;\n      bin.readUshort(data, offset); offset += 2;\n      var tot = bin.readUshort(data, offset); offset += 2;\n\n      var fst = bin.readUint(data, offset); offset += 4;\n\n      return new Uint8Array(data.buffer, ooff + fst, tot * 4);\n      /*\n      var coff=ooff+fst;\n\n      for(var i=0; i<tot; i++) {\n        console.log(data[coff],data[coff+1],data[coff+2],data[coff+3]);\n        coff+=4;\n      }\n\n      console.log(ets,pts,tot); */\n    }\n    else throw vsn;//console.log(\"unknown color palette\",vsn);\n  }\n};\n\nTypr[\"T\"].GSUB = {\n  parseTab: function (data, offset, length, obj) {\n    //console.log(obj.name.ID);\n\n    var bin = Typr[\"B\"], rU = bin.readUshort; bin.readUint;\n\n\n    var off = offset;\n    rU(data, off); off += 2;\n    rU(data, off); off += 2;\n    rU(data, off); off += 2;\n    var flO = rU(data, off); off += 2;\n    rU(data, off); off += 2;\n\n    //console.log(maj,min,slO,flO,llO);\n\n    off = offset + flO;\n\n    var fmap = {};\n    var cnt = rU(data, off); off += 2;\n    for (var i = 0; i < cnt; i++) {\n      var tag = bin.readASCII(data, off, 4); off += 4;\n      rU(data, off); off += 2;\n      fmap[tag] = true;\n    }\n    //console.log(fmap);\n    return fmap;\n  }\n};\n\nTypr[\"T\"].fvar = {\n  parseTab: function (data, offset, length, obj) {\n    var name = obj[\"name\"];\n    var off = offset;\n    var bin = Typr[\"B\"];\n    var axes = [], inst = [];\n\n    off += 8;\n    var acnt = bin.readUshort(data, off); off += 2;\n    off += 2;\n    var icnt = bin.readUshort(data, off); off += 2;\n    var isiz = bin.readUshort(data, off); off += 2;\n\n    for (var i = 0; i < acnt; i++) {\n      var tag = bin.readASCII(data, off, 4);\n      var min = bin.readFixed(data, off + 4);\n      var def = bin.readFixed(data, off + 8);\n      var max = bin.readFixed(data, off + 12);\n      var flg = bin.readUshort(data, off + 16);\n      var nid = bin.readUshort(data, off + 18);\n      axes.push([tag, min, def, max, flg, name[\"_\" + nid]]);\n      //console.log(tag,min,def,max,flg,nid);\n      off += 20;\n    }\n    for (var i = 0; i < icnt; i++) {\n      var snid = bin.readUshort(data, off), pnid = null;\n      var flg = bin.readUshort(data, off + 2);\n      var crd = []; for (var j = 0; j < acnt; j++) crd.push(bin.readFixed(data, off + 4 + j * 4));\n      off += 4 + acnt * 4;\n      if ((isiz & 3) == 2) { pnid = bin.readUshort(data, off); off += 2; }\n      inst.push([name[\"_\" + snid], flg, crd, pnid]);\n      //console.log(snid,flg, crd);\n    }\n\n    return [axes, inst];\n  }\n};\n\nTypr[\"T\"].gvar = (function () {\n\n  var EMBEDDED_PEAK_TUPLE = 0x8000;\n  var INTERMEDIATE_REGION = 0x4000;\n  var PRIVATE_POINT_NUMBERS = 0x2000;\n\n  var DELTAS_ARE_ZERO = 0x80;\n  var DELTAS_ARE_WORDS = 0x40;\n\n  var POINTS_ARE_WORDS = 0x80;\n\n  var SHARED_POINT_NUMBERS = 0x8000;\n\n  var bin = Typr[\"B\"];\n\n  function readTuple(data, o, acnt) {\n    var tup = []; for (var j = 0; j < acnt; j++) tup.push(bin.readF2dot14(data, o + j * 2));\n    return tup;\n  }\n\n  function readTupleVarHeader(data, off, vcnt, acnt, eoff) {\n    var out = [];\n    for (var j = 0; j < vcnt; j++) {\n      var dsiz = bin.readUshort(data, off); off += 2;\n      var tind = bin.readUshort(data, off), flag = tind & 0xf000; tind = tind & 0xfff; off += 2;\n      //console.log(j, dsiz,tind, flag.toString(16));\n\n      var peak = null, start = null, end = null;\n      if (flag & EMBEDDED_PEAK_TUPLE) { peak = readTuple(data, off, acnt); off += acnt * 2; }\n      if (flag & INTERMEDIATE_REGION) { start = readTuple(data, off, acnt); off += acnt * 2; }\n      if (flag & INTERMEDIATE_REGION) { end = readTuple(data, off, acnt); off += acnt * 2; }\n      out.push([dsiz, tind, flag, start, peak, end]);\n    }\n    return out;\n  }\n\n  // Packed \"point\" numbers\n  function readPointNumbers(data, off, gid) {\n    var cnt = data[off]; off++; if (cnt == 0) return [[], off];\n    if (127 < cnt) { cnt = ((cnt & 127) << 8) | data[off++]; }\n\n    //if(gid==116) console.log(\"---\",cnt);\n    var pts = [], last = 0;  // point number data runs\n    while (pts.length < cnt) {\n      var v = data[off]; off++;\n      var wds = (v & POINTS_ARE_WORDS) != 0; v = (v & 127) + 1;\n      //if(gid==116) console.log(\"-\",v);\n      for (var i = 0; i < v; i++) {\n        var dif = 0;\n        if (wds) { dif = bin.readUshort(data, off); off += 2; }\n        else { dif = data[off]; off++; }\n        //if(gid==116) console.log(dif);\n        last += dif;\n        pts.push(last);\n      }\n    }\n    //console.log(pts);\n    return [pts, off];\n\n\n    //throw \"e\";\n  }\n\n\n  function parseTab(data, offset, length, obj) {\n    var off = offset + 4;\n    var acnt = bin.readUshort(data, off); off += 2;\n    var tcnt = bin.readUshort(data, off); off += 2;\n    var toff = bin.readUint(data, off); off += 4;\n    var gcnt = bin.readUshort(data, off); off += 2;\n    bin.readUshort(data, off); off += 2;\n\n    var goff = bin.readUint(data, off); off += 4;\n\n    // glyphVariationDataOffsets\n    var offs = []; for (var i = 0; i < gcnt + 1; i++) offs.push(bin.readUint(data, off + i * 4));\n\n\n    // sharedTuples\n    var tups = [], mins = [], maxs = []; off = offset + toff;\n    for (var i = 0; i < tcnt; i++) {\n      var peak = readTuple(data, off + i * acnt * 2, acnt), imin = [], imax = []; tups.push(peak); mins.push(imin); maxs.push(imax);\n      for (var k = 0; k < acnt; k++) {\n        imin[k] = Math.min(peak[k], 0);\n        imax[k] = Math.max(peak[k], 0);\n      }\n    }\n    //console.log(tups);\n\n    //console.log(acnt,stcnt,stoff,gcnt,flgs,goff);\n\n    var i8 = new Int8Array(data.buffer);\n\n    // GlyphVariationData table array\n    var tabs = [];\n    for (var i = 0; i < gcnt; i++) {\n      //console.log(\"-------\",i);\n      off = offset + goff + offs[i];\n      // tupleVariationCount\n      var vcnt = bin.readUshort(data, off); off += 2;  //if((vcnt>>>12)!=0) throw \"e\";\n\n      var snum = vcnt & SHARED_POINT_NUMBERS; vcnt &= 0xfff;\n      //  offset to the serialized data\n      var soff = bin.readUshort(data, off); off += 2;\n\n      var hdr = readTupleVarHeader(data, off, vcnt, acnt);\n\n      var tab = []; tabs.push(tab);\n      // Serialized Data\n      off = offset + goff + offs[i] + soff;\n\n      var sind = null;\n      if (snum) {\n        var oo = readPointNumbers(data, off);\n        sind = oo[0]; off = oo[1];\n      }\n\n      for (var j = 0; j < vcnt; j++) {\n        var vr = hdr[j], end = off + vr[0];  //console.log(vr);  console.log(data.slice(off,off+vr[0]));\n\n        var ind = sind;\n        if (vr[2] & PRIVATE_POINT_NUMBERS) {\n          var oo = readPointNumbers(data, off);\n          ind = oo[0]; off = oo[1];\n        }\n        // read packed deltas (delta runs)\n        var ds = [];\n        while (off < end) {\n          var cb = data[off++];  // control byte;\n          var cnt = (cb & 0x3f) + 1;\n          if (cb & DELTAS_ARE_ZERO) { for (var k = 0; k < cnt; k++) ds.push(0); }\n          else if (cb & DELTAS_ARE_WORDS) { for (var k = 0; k < cnt; k++) ds.push(bin.readShort(data, off + k * 2)); off += cnt * 2; }\n          else { for (var k = 0; k < cnt; k++) ds.push(i8[off + k]); off += cnt; }\n        }\n        //if(ind) console.log(ind, ds);\n        var ti = vr[1];\n\n        tab.push([[\n          vr[3] ? vr[3] : mins[ti],\n          vr[4] ? vr[4] : tups[ti],\n          vr[5] ? vr[5] : maxs[ti]\n        ], ds, ind.length == 0 ? null : ind]);\n\n        if (ind.length != 0 && ind.length * 2 != ds.length) throw \"e\";\n        //if(i==116) console.log(ind, ds);\n      }\n    }\n    return tabs;\n  }\n\n  return { parseTab: parseTab };\n})();\n\nTypr[\"T\"].avar = {\n  parseTab: function (data, offset, length, obj) {\n    var off = offset;\n    var bin = Typr[\"B\"], out = [];\n\n    off += 6;\n    var acnt = bin.readUshort(data, off); off += 2;\n\n    for (var ai = 0; ai < acnt; ai++) {\n      var cnt = bin.readUshort(data, off); off += 2;\n      var poly = []; out.push(poly);\n      for (var i = 0; i < cnt; i++) {\n        var x = bin.readF2dot14(data, off);\n        var y = bin.readF2dot14(data, off + 2); off += 4;\n        poly.push(x, y);\n      }\n    }\n\n    return out;\n  }\n};\n\nTypr[\"T\"].HVAR = {\n  parseTab: function (data, offset, length, obj) {\n    var off = offset, oo = offset;\n    var bin = Typr[\"B\"];\n\n    //console.log(data.slice(off));\n    off += 4;\n\n    var varO = bin.readUint(data, off); off += 4;\n    var advO = bin.readUint(data, off); off += 4;\n    var lsbO = bin.readUint(data, off); off += 4;\n    var rsbO = bin.readUint(data, off); off += 4;\n    if (lsbO != 0 || rsbO != 0) throw lsbO;\n\n    //console.log(varO,advO,lsbO,rsbO);\n\n    off = oo + varO;  // item variation store\n\n    // ItemVariationStore\n    var ioff = off;\n\n    var fmt = bin.readUshort(data, off); off += 2; if (fmt != 1) throw \"e\";\n    var vregO = bin.readUint(data, off); off += 4;\n    // itemVariationDataCount\n    var vcnt = bin.readUshort(data, off); off += 2;\n\n    var offs = []; for (var i = 0; i < vcnt; i++) offs.push(bin.readUint(data, off + i * 4)); off += vcnt * 4;  //if(offs.length!=1) throw \"e\";\n    //console.log(vregO,vcnt,offs);\n\n    off = ioff + vregO;\n    var acnt = bin.readUshort(data, off); off += 2;\n    var rcnt = bin.readUshort(data, off); off += 2;\n\n    var regs = [];\n    for (var i = 0; i < rcnt; i++) {\n      var crd = [[], [], []]; regs.push(crd);\n      for (var j = 0; j < acnt; j++) {\n        crd[0].push(bin.readF2dot14(data, off + 0));\n        crd[1].push(bin.readF2dot14(data, off + 2));\n        crd[2].push(bin.readF2dot14(data, off + 4));\n        off += 6;\n      }\n    }\n    //console.log(acnt, rcnt, regs);\n\n\n    var i8 = new Int8Array(data.buffer);\n    var varStore = [];\n    for (var i = 0; i < offs.length; i++) {\n      // ItemVariationData\n      off = oo + varO + offs[i]; var vdata = []; varStore.push(vdata);\n      var icnt = bin.readUshort(data, off); off += 2;  // itemCount\n      var dcnt = bin.readUshort(data, off); off += 2; if (dcnt & 0x8000) throw \"e\";\n      var rcnt = bin.readUshort(data, off); off += 2;\n      var ixs = []; for (var j = 0; j < rcnt; j++) ixs.push(bin.readUshort(data, off + j * 2)); off += rcnt * 2;\n      //console.log(icnt,dcnt,rcnt,ixs);\n      //console.log(data.slice(off));\n\n      for (var k = 0; k < icnt; k++) {  // deltaSets\n        var deltaData = [];  //vdata.push(deltaData);\n        for (var ri = 0; ri < rcnt; ri++) {\n          deltaData.push(ri < dcnt ? bin.readShort(data, off) : i8[off]);\n          off += ri < dcnt ? 2 : 1;\n\n        }\n        var dd = new Array(regs.length); dd.fill(0); vdata.push(dd);\n        for (var j = 0; j < ixs.length; j++) dd[ixs[j]] = deltaData[j];\n      }\n    }\n\n    //console.log(varStore);\n\n    // VariationRegionList\n\n\n\n    off = oo + advO;  // advance widths\n\n    // DeltaSetIndexMap\n\n    var fmt = data[off++]; if (fmt != 0) throw \"e\";\n    var entryFormat = data[off++];\n\n    var mapCount = bin.readUshort(data, off); off += 2;\n\n    var INNER_INDEX_BIT_COUNT_MASK = 0x0f;\n    var MAP_ENTRY_SIZE_MASK = 0x30;\n    var entrySize = ((entryFormat & MAP_ENTRY_SIZE_MASK) >> 4) + 1;  //if(entrySize!=1) throw entrySize;\n\n    //console.log(fmt, entryFormat, mapCount, entrySize);\n\n    var dfs = [];\n    for (var i = 0; i < mapCount; i++) {\n      var entry = 0;\n      if (entrySize == 1) entry = data[off++];\n      else { entry = bin.readUshort(data, off); off += 2; }\n      var outerIndex = entry >> ((entryFormat & INNER_INDEX_BIT_COUNT_MASK) + 1);\n      var innerIndex = entry & ((1 << ((entryFormat & INNER_INDEX_BIT_COUNT_MASK) + 1)) - 1);\n      //map.push(outerIndex,innerIndex);\n      dfs.push(varStore[outerIndex][innerIndex]);\n      //console.log(outerIndex,innerIndex);\n      //console.log(i,varStore[outerIndex][innerIndex]);\n    }\n\n    return [regs, dfs];\n  }\n};\n\nTypr[\"U\"] = function () {\n  var P = {\n    MoveTo: function (p, x, y) { p.cmds.push(\"M\"); p.crds.push(x, y); },\n    LineTo: function (p, x, y) { p.cmds.push(\"L\"); p.crds.push(x, y); },\n    CurveTo: function (p, a, b, c, d, e, f) { p.cmds.push(\"C\"); p.crds.push(a, b, c, d, e, f); },\n    qCurveTo: function (p, a, b, c, d) { p.cmds.push(\"Q\"); p.crds.push(a, b, c, d); },\n    ClosePath: function (p) { p.cmds.push(\"Z\"); }\n  };\n\n  function getGlyphPosition(font, gls, i1, ltr) {\n    var g1 = gls[i1], g2 = gls[i1 + 1], kern = font[\"kern\"];\n    if (kern) {\n      var ind1 = kern.glyph1.indexOf(g1);\n      if (ind1 != -1) {\n        var ind2 = kern.rval[ind1].glyph2.indexOf(g2);\n        if (ind2 != -1) return [0, 0, kern.rval[ind1].vals[ind2], 0];\n      }\n    }\n    //console.log(\"no kern\");\n    return [0, 0, 0, 0];\n  }\n  function shape(font, str, prm) {\n    if (prm == null) prm = {};\n    prm[\"ltr\"]; prm[\"fts\"]; var axs = prm[\"axs\"];\n    if (font[\"fvar\"] && axs == null) axs = font[\"fvar\"][1][font[\"_index\"]][2];\n\n    var HVAR = font[\"HVAR\"];  //console.log(HVAR);\n    if (axs && HVAR) { axs = _normalizeAxis(font, axs); }  //console.log(S,axs);\n    var gls = [];\n    for (var i = 0; i < str.length; i++) {\n      var cc = str.codePointAt(i); if (cc > 0xffff) i++;\n      gls.push(codeToGlyph(font, cc));\n    }\n    var shape = [];\n\n    for (var i = 0; i < gls.length; i++) {\n      var padj = getGlyphPosition(font, gls, i);\n      var gid = gls[i];  //console.log(gid);\n      var ax = font[\"hmtx\"].aWidth[gid] + padj[2];\n      if (HVAR && HVAR[1][gid]) { //ax+=S*HVAR[1][gid][0];\n        var difs = HVAR[1][gid];  //console.log(difs);\n        for (var j = 0; j < HVAR[0].length; j++) {\n          ax += _interpolate(HVAR[0][j], axs) * difs[j];\n        }\n      }\n      shape.push({ \"g\": gid, \"cl\": i, \"dx\": 0, \"dy\": 0, \"ax\": ax, \"ay\": 0 });\n    }\n    return shape;\n  }\n\n  function shapeToPath(font, shape, prm) {\n    var tpath = { cmds: [], crds: [] };\n    var x = 0, y = 0, clr, axs;\n    if (prm) { clr = prm[\"clr\"]; axs = prm[\"axs\"]; }\n\n    for (var i = 0; i < shape.length; i++) {\n      var it = shape[i];\n      var path = glyphToPath(font, it[\"g\"], false, axs), crds = path[\"crds\"];\n      for (var j = 0; j < crds.length; j += 2) {\n        tpath.crds.push(crds[j] + x + it[\"dx\"]);\n        tpath.crds.push(crds[j + 1] + y + it[\"dy\"]);\n      }\n      if (clr) tpath.cmds.push(clr);\n      for (var j = 0; j < path[\"cmds\"].length; j++) tpath.cmds.push(path[\"cmds\"][j]);\n      var clen = tpath.cmds.length;\n      if (clr) if (clen != 0 && tpath.cmds[clen - 1] != \"X\") tpath.cmds.push(\"X\");  // SVG fonts might contain \"X\". Then, nothing would stroke non-SVG glyphs.\n\n      x += it[\"ax\"]; y += it[\"ay\"];\n    }\n    return { \"cmds\": tpath.cmds, \"crds\": tpath.crds };\n  }\n\n\n  // find the greatest index with a value <=v\n  function arrSearch(arr, k, v) {\n    var l = 0, r = ~~(arr.length / k);\n    while (l + 1 != r) { var mid = l + ((r - l) >>> 1); if (arr[mid * k] <= v) l = mid; else r = mid; }\n\n    //var mi = 0;  for(var i=0; i<arr.length; i+=k) if(arr[i]<=v) mi=i;  if(mi!=l*k) throw \"e\";\n\n    return l * k;\n  }\n\n  var wha = [0x9, 0xa, 0xb, 0xc, 0xd, 0x20, 0x85, 0xa0, 0x1680, 0x180e, 0x2028, 0x2029, 0x202f, 0x2060, 0x3000, 0xfeff], whm = {};\n  for (var i = 0; i < wha.length; i++) whm[wha[i]] = 1;\n  for (var i = 0x2000; i <= 0x200d; i++) whm[i] = 1;\n\n  function codeToGlyph(font, code) {\n    //console.log(cmap);\n    // \"p3e10\" for NotoEmoji-Regular.ttf\n    //console.log(cmap);\n\n    if (font[\"_ctab\"] == null) {\n      var cmap = font[\"cmap\"];\n      var tind = -1, pps = [\"p3e10\", \"p0e4\", \"p3e1\", \"p1e0\", \"p0e3\", \"p0e1\"/*,\"p3e3\"*/, \"p3e0\" /*Hebrew*/, \"p3e5\" /*Korean*/];\n      for (var i = 0; i < pps.length; i++) if (cmap.ids[pps[i]] != null) { tind = cmap.ids[pps[i]]; break; }\n      if (tind == -1) throw \"no familiar platform and encoding!\";\n      font[\"_ctab\"] = cmap.tables[tind];\n    }\n\n    var tab = font[\"_ctab\"], fmt = tab.format, gid = -1;  //console.log(fmt); throw \"e\";\n\n    if (fmt == 0) {\n      if (code >= tab.map.length) gid = 0;\n      else gid = tab.map[code];\n    }\n    /*else if(fmt==2) {\n      var data=font[\"_data\"], off = cmap.off+tab.off+6, bin=Typr[\"B\"];\n      var shKey = bin.readUshort(data,off + 2*(code>>>8));\n      var shInd = off + 256*2 + shKey*8;\n\n      var firstCode = bin.readUshort(data,shInd);\n      var entryCount= bin.readUshort(data,shInd+2);\n      var idDelta   = bin.readShort (data,shInd+4);\n      var idRangeOffset = bin.readUshort(data,shInd+6);\n\n      if(firstCode<=code && code<=firstCode+entryCount) {\n        // not completely correct\n        gid = bin.readUshort(data, shInd+6+idRangeOffset + (code&255)*2);\n      }\n      else gid=0;\n      //if(code>256) console.log(code,(code>>>8),shKey,firstCode,entryCount,idDelta,idRangeOffset);\n\n      //throw \"e\";\n      //console.log(tab,  bin.readUshort(data,off));\n      //throw \"e\";\n    }*/\n    else if (fmt == 4) {\n      var ec = tab.endCount; gid = 0;\n      if (code <= ec[ec.length - 1]) {\n        // smallest index with code <= value\n        var sind = arrSearch(ec, 1, code);\n        if (ec[sind] < code) sind++;\n\n        if (code >= tab.startCount[sind]) {\n          var gli = 0;\n          if (tab.idRangeOffset[sind] != 0) gli = tab.glyphIdArray[(code - tab.startCount[sind]) + (tab.idRangeOffset[sind] >> 1) - (tab.idRangeOffset.length - sind)];\n          else gli = code + tab.idDelta[sind];\n          gid = (gli & 0xFFFF);\n        }\n      }\n    }\n    else if (fmt == 6) {\n      var off = code - tab.firstCode, arr = tab.glyphIdArray;\n      if (off < 0 || off >= arr.length) gid = 0;\n      else gid = arr[off];\n    }\n    else if (fmt == 12) {\n      var grp = tab.groups; gid = 0;  //console.log(grp);  throw \"e\";\n\n      if (code <= grp[grp.length - 2]) {\n        var i = arrSearch(grp, 3, code);\n        if (grp[i] <= code && code <= grp[i + 1]) { gid = grp[i + 2] + (code - grp[i]); }\n      }\n    }\n    else throw \"unknown cmap table format \" + tab.format;\n\n    //*\n    var SVG = font[\"SVG \"], loca = font[\"loca\"];\n    // if the font claims to have a Glyph for a character, but the glyph is empty, and the character is not \"white\", it is a lie!\n    if (gid != 0 && font[\"CFF \"] == null && (SVG == null || SVG.entries[gid] == null) && loca && loca[gid] == loca[gid + 1]  // loca not present in CFF or SVG fonts\n      && whm[code] == null) gid = 0;\n    //*/\n\n    return gid;\n  }\n  function glyphToPath(font, gid, noColor, axs) {\n    var path = { cmds: [], crds: [] };\n\n    if (font[\"fvar\"]) {\n      if (axs == null) axs = font[\"fvar\"][1][font[\"_index\"]][2];\n      axs = _normalizeAxis(font, axs);\n    }\n\n    var SVG = font[\"SVG \"], CFF = font[\"CFF \"], COLR = font[\"COLR\"], CBLC = font[\"CBLC\"], CBDT = font[\"CBDT\"], sbix = font[\"sbix\"], upng = window[\"UPNG\"];\n\n    var strike = null;\n    if (CBLC && upng) for (var i = 0; i < CBLC.length; i++) if (CBLC[i][0] <= gid && gid <= CBLC[i][1]) strike = CBLC[i];\n\n    if (strike || (sbix && sbix[gid])) {\n      if (strike && strike[2] != 17) throw \"not a PNG\";\n\n      if (font[\"__tmp\"] == null) font[\"__tmp\"] = {};\n      var cmd = font[\"__tmp\"][\"g\" + gid];\n      if (cmd == null) {\n        var bmp, len;\n        if (sbix) { bmp = sbix[gid]; len = bmp.length; }\n        else {\n          var boff = strike[3][gid - strike[0]] + 5;  // smallGlyphMetrics\n          len = (CBDT[boff + 1] << 16) | (CBDT[boff + 2] << 8) | CBDT[boff + 3]; boff += 4;\n          bmp = new Uint8Array(CBDT.buffer, CBDT.byteOffset + boff, len);\n        }\n        var str = \"\"; for (var i = 0; i < len; i++) str += String.fromCharCode(bmp[i]);\n        cmd = font[\"__tmp\"][\"g\" + gid] = \"data:image/png;base64,\" + btoa(str);\n      }\n\n      path.cmds.push(cmd);\n      var upe = font[\"head\"][\"unitsPerEm\"] * 1.15;\n      var gw = Math.round(upe), gh = Math.round(upe), dy = Math.round(-gh * 0.15);\n      path.crds.push(0, gh + dy, gw, gh + dy, gw, dy, 0, dy); //*/\n    }\n    else if (SVG && SVG.entries[gid]) {\n      var p = SVG.entries[gid];\n      if (p != null) {\n        if (typeof p == \"number\") {\n          var svg = SVG.svgs[p];\n          if (typeof svg == \"string\") {\n            var prsr = new DOMParser();\n            var doc = prsr[\"parseFromString\"](svg, \"image/svg+xml\");\n            svg = SVG.svgs[p] = doc.getElementsByTagName(\"svg\")[0];\n          }\n          p = Typr[\"U\"][\"SVG\"].toPath(svg, gid); SVG.entries[gid] = p;\n        }\n        path = p;\n      }\n    }\n    else if (noColor != true && COLR && COLR[0][\"g\" + gid] && COLR[0][\"g\" + gid][1] > 1) {\n\n      function toHex(n) { var o = n.toString(16); return (o.length == 1 ? \"0\" : \"\") + o; }\n\n      var CPAL = font[\"CPAL\"], gl = COLR[0][\"g\" + gid];\n      for (var i = 0; i < gl[1]; i++) {\n        var lid = gl[0] + i;\n        var cgl = COLR[1][2 * lid], pid = COLR[1][2 * lid + 1] * 4;\n        var pth = glyphToPath(font, cgl, cgl == gid);\n\n        var col = \"#\" + toHex(CPAL[pid + 2]) + toHex(CPAL[pid + 1]) + toHex(CPAL[pid + 0]);\n        path.cmds.push(col);\n\n        path.cmds = path.cmds.concat(pth[\"cmds\"]);\n        path.crds = path.crds.concat(pth[\"crds\"]);\n        //console.log(gid, cgl,pid,col);\n\n        path.cmds.push(\"X\");\n      }\n    }\n    else if (CFF) {\n      var pdct = CFF[\"Private\"];\n      var state = { x: 0, y: 0, stack: [], nStems: 0, haveWidth: false, width: pdct ? pdct[\"defaultWidthX\"] : 0, open: false };\n      if (CFF[\"ROS\"]) {\n        var gi = 0;\n        while (CFF[\"FDSelect\"][gi + 2] <= gid) gi += 2;\n        pdct = CFF[\"FDArray\"][CFF[\"FDSelect\"][gi + 1]][\"Private\"];\n      }\n      _drawCFF(CFF[\"CharStrings\"][gid], state, CFF, pdct, path);\n    }\n    else if (font[\"glyf\"]) { _drawGlyf(gid, font, path, axs); }\n    return { \"cmds\": path.cmds, \"crds\": path.crds };\n  }\n\n  function _drawGlyf(gid, font, path, axs) {\n    var gl = font[\"glyf\"][gid];\n\n    if (gl == null) gl = font[\"glyf\"][gid] = Typr[\"T\"].glyf._parseGlyf(font, gid);\n    if (gl != null) {\n      if (gl.noc > -1) _simpleGlyph(gl, font, gid, path, axs);\n      else _compoGlyph(gl, font, gid, path, axs);\n    }\n  }\n  function _interpolate(axs, v) {\n    v.length; var S = 1;\n    var s = axs[0];  // start\n    var p = axs[1];  // peak\n    var e = axs[2];  // end\n\n    for (var i = 0; i < v.length; i++) {\n      var AS = 1;\n      if (s[i] > p[i] || p[i] > e[i]) AS = 1;\n      else if (s[i] < 0 && e[i] > 0 && p[i] != 0) AS = 1;\n      else if (p[i] == 0) AS = 1;\n      else if (v[i] < s[i] || v[i] > e[i]) AS = 0;\n      else {\n        if (v[i] == p[i]) AS = 1;\n        else if (v[i] < p[i]) AS = (v[i] - s[i]) / (p[i] - s[i]);\n        else AS = (e[i] - v[i]) / (e[i] - p[i]);\n      }\n      S = S * AS;\n    }\n    return S;\n  }\n  function _normalizeAxis(font, vv) {\n    var fvar = font[\"fvar\"], avar = font[\"avar\"];\n    var fv = fvar ? fvar[0] : null;\n\n    var nv = [];\n    for (var i = 0; i < fv.length; i++) {\n      var min = fv[i][1], def = fv[i][2], max = fv[i][3], v = Math.max(min, Math.min(max, vv[i]));\n      if (v < def) nv[i] = (def - v) / (min - def);\n      else if (v > def) nv[i] = (v - def) / (max - def);\n      else nv[i] = 0;\n\n      if (avar && nv[i] != -1) {\n        var av = avar[i], j = 0;\n        for (; j < av.length; j += 2) if (av[j] >= nv[i]) break;\n        var f = (nv[i] - av[j - 2]) / (av[j] - av[j - 2]);\n        nv[i] = f * av[j + 1] + (1 - f) * av[j - 1];\n      }\n\n    }\n    return nv;\n  }\n  function interpolateDeltas(dfs, ind, xs, ys, endPts) {\n    var N = xs.length, ndfs = new Array(N * 2 + 8); ndfs.fill(0);\n    for (var i = 0; i < N; i++) {\n      var dx = 0, dy = 0, ii = ind.indexOf(i);\n      if (ii != -1) { dx = dfs[ii]; dy = dfs[ind.length + ii]; }\n      else {\n        var cmp = 0; while (endPts[cmp] < i) cmp++;\n        var cmp0 = cmp == 0 ? 0 : endPts[cmp - 1] + 1;\n        var cmp1 = endPts[cmp];\n\n        var i0 = -1, i1 = -1;\n\n        for (var j = 0; j < ind.length; j++) { var v = ind[j]; if (v < cmp0 || v > cmp1 || v >= N) continue; i0 = j; if (i1 == -1) i1 = j; }\n        for (var j = 0; j < ind.length; j++) { var v = ind[j]; if (v < cmp0 || v > cmp1 || v >= N) continue; if (v < i) i0 = j; if (i < v) { i1 = j; break; } }\n\n        //var i0 = ind.length-1, i1=0;  if(ind[i0]>=N) i0--;\n        //for(var j=0; j<ind.length; j++) {  var v=ind[j];  if(v<N) { if(v<i) i0=j;  if(i<v) {  i1=j;  break;  }  }  }\n        for (var ax = 0; ax < 2; ax++) {\n          var crd = ax == 0 ? xs : ys, ofs = ax * ind.length, dlt = 0;\n          var c0 = crd[ind[i0]], c1 = crd[ind[i1]], cC = crd[i];\n          var d0 = dfs[ofs + i0], d1 = dfs[ofs + i1];\n\n          if (c0 == c1) {\n            if (d0 == d1) dlt = d0;\n            else dlt = 0;\n          }\n          else {\n            if (cC <= Math.min(c0, c1)) {\n              if (c0 < c1) dlt = d0;\n              else dlt = d1;\n            }\n            else if (Math.max(c0, c1) <= cC) {\n              if (c0 < c1) dlt = d1;\n              else dlt = d0;\n            }\n            else {\n              var prop = (cC - c0) / (c1 - c0);  //if(prop<0) throw \"e\";\n              dlt = prop * d1 + (1 - prop) * d0;\n            }\n          }\n          if (ax == 0) dx = dlt; else dy = dlt;\n        }\n      }\n      ndfs[i] = dx; ndfs[N + 4 + i] = dy;\n    }\n    return ndfs;\n  }\n  function _simpleGlyph(gl, font, gid, p, axs) {\n    var xs = gl.xs, ys = gl.ys;\n    //*\n    if (font[\"fvar\"] && axs) {\n      xs = xs.slice(0); ys = ys.slice(0);\n      var gvar = font[\"gvar\"];\n      var gv = gvar ? gvar[gid] : null;\n\n      for (var vi = 0; vi < gv.length; vi++) {\n        var axv = gv[vi][0];  //console.log(axs);\n        var S = _interpolate(axv, axs); if (S < 1e-9) continue;\n        var dfs = gv[vi][1], ind = gv[vi][2];  //if(dfs.length!=2*xs.length+8) throw \"e\";\n        //console.log(vi,S,axv,ind,dfs);\n        if (ind) { dfs = gv[vi][1] = interpolateDeltas(dfs, ind, xs, ys, gl.endPts); gv[vi][2] = null; }\n        //if(ind==null)\n        if (dfs.length == xs.length * 2 + 8)\n          for (var i = 0; i < xs.length; i++) {\n            xs[i] += S * dfs[i];\n            ys[i] += S * dfs[i + xs.length + 4];\n          }\n      }\n    } //*/\n\n    for (var c = 0; c < gl.noc; c++) {\n      var i0 = (c == 0) ? 0 : (gl.endPts[c - 1] + 1);\n      var il = gl.endPts[c];\n\n      for (var i = i0; i <= il; i++) {\n        var pr = (i == i0) ? il : (i - 1);\n        var nx = (i == il) ? i0 : (i + 1);\n        var onCurve = gl.flags[i] & 1;\n        var prOnCurve = gl.flags[pr] & 1;\n        var nxOnCurve = gl.flags[nx] & 1;\n\n        var x = xs[i], y = ys[i];\n\n        if (i == i0) {\n          if (onCurve) {\n            if (prOnCurve) P.MoveTo(p, xs[pr], ys[pr]);\n            else { P.MoveTo(p, x, y); continue;  /*  will do CurveTo at il  */ }\n          }\n          else {\n            if (prOnCurve) P.MoveTo(p, xs[pr], ys[pr]);\n            else P.MoveTo(p, Math.floor((xs[pr] + x) * 0.5), Math.floor((ys[pr] + y) * 0.5));\n          }\n        }\n        if (onCurve) {\n          if (prOnCurve) P.LineTo(p, x, y);\n        }\n        else {\n          if (nxOnCurve) P.qCurveTo(p, x, y, xs[nx], ys[nx]);\n          else P.qCurveTo(p, x, y, Math.floor((x + xs[nx]) * 0.5), Math.floor((y + ys[nx]) * 0.5));\n        }\n      }\n      P.ClosePath(p);\n    }\n  }\n  function _compoGlyph(gl, font, gid, p, axs) {\n\n    var dx = [0, 0, 0, 0, 0, 0], dy = [0, 0, 0, 0, 0, 0], ccnt = gl.parts.length;\n\n    if (font[\"fvar\"] && axs) {\n      var gvar = font[\"gvar\"];\n      var gv = gvar ? gvar[gid] : null;\n      for (var vi = 0; vi < gv.length; vi++) {\n        var axv = gv[vi][0];  //console.log(axs);\n        var S = _interpolate(axv, axs); if (S < 1e-6) continue;\n        var dfs = gv[vi][1], ind = gv[vi][2];  //if(dfs.length!=2*ccnt+8) throw \"e\";\n        if (ind == null)\n          for (var i = 0; i < ccnt; i++) {\n            dx[i] += S * dfs[i];\n            dy[i] += S * dfs[i + ccnt + 4];\n          }\n        else\n          for (var j = 0; j < ind.length; j++) {\n            var i = ind[j];\n            dx[i] += S * dfs[0];\n            dy[i] += S * dfs[0 + ccnt];\n          }\n      }\n    }\n\n    for (var j = 0; j < ccnt; j++) {\n      var path = { cmds: [], crds: [] };\n      var prt = gl.parts[j];\n      _drawGlyf(prt.glyphIndex, font, path, axs);\n\n      var m = prt.m, tx = m.tx + dx[j], ty = m.ty + dy[j];\n      for (var i = 0; i < path.crds.length; i += 2) {\n        var x = path.crds[i], y = path.crds[i + 1];\n        p.crds.push(x * m.a + y * m.c + tx);   // not sure, probably right\n        p.crds.push(x * m.b + y * m.d + ty);\n      }\n      for (var i = 0; i < path.cmds.length; i++) p.cmds.push(path.cmds[i]);\n    }\n  }\n\n  function pathToSVG(path, prec) {\n    var cmds = path[\"cmds\"], crds = path[\"crds\"];\n    if (prec == null) prec = 5;\n    function num(v) { return parseFloat(v.toFixed(prec)); }\n    function merge(o) {\n      var no = [], lstF = false, lstC = \"\";\n      for (var i = 0; i < o.length; i++) {\n        var it = o[i], isF = (typeof it) == \"number\";\n        if (!isF) { if (it == lstC && it.length == 1 && it != \"m\") continue; lstC = it; }  // move should not be merged (it actually means lineTo)\n        if (lstF && isF && it >= 0) no.push(\" \");\n        no.push(it); lstF = isF;\n      }\n      return no.join(\"\");\n    }\n\n\n    var out = [], co = 0, lmap = { \"M\": 2, \"L\": 2, \"Q\": 4, \"C\": 6 };\n    var x = 0, y = 0, // perfect coords\n      //dx=0, dy=0, // relative perfect coords\n      //rx=0, ry=0, // relative rounded coords\n      ex = 0, ey = 0, // error between perfect and output coords\n      mx = 0, my = 0; // perfect coords of the last \"Move\"\n\n    for (var i = 0; i < cmds.length; i++) {\n      var cmd = cmds[i], cc = (lmap[cmd] ? lmap[cmd] : 0);\n\n      var o0 = [], dx, dy, rx, ry;  // o1=[], cx, cy, ax,ay;\n      if (cmd == \"L\") {\n        dx = crds[co] - x; dy = crds[co + 1] - y;\n        rx = num(dx + ex); ry = num(dy + ey);\n        // if this \"lineTo\" leads to the starting point, and \"Z\" follows, do not output anything.\n        if (cmds[i + 1] == \"Z\" && crds[co] == mx && crds[co + 1] == my) { rx = dx; ry = dy; }\n        else if (rx == 0 && ry == 0) ;\n        else if (rx == 0) o0.push(\"v\", ry);\n        else if (ry == 0) o0.push(\"h\", rx);\n        else { o0.push(\"l\", rx, ry); }\n      }\n      else {\n        o0.push(cmd.toLowerCase());\n        for (var j = 0; j < cc; j += 2) {\n          dx = crds[co + j] - x; dy = crds[co + j + 1] - y;\n          rx = num(dx + ex); ry = num(dy + ey);\n          o0.push(rx, ry);\n        }\n      }\n      if (cc != 0) { ex += dx - rx; ey += dy - ry; }\n\n      var ou = o0;\n      for (var j = 0; j < ou.length; j++) out.push(ou[j]);\n\n      if (cc != 0) { co += cc; x = crds[co - 2]; y = crds[co - 1]; }\n      if (cmd == \"M\") { mx = x; my = y; }\n      if (cmd == \"Z\") { x = mx; y = my; }\n    }\n\n    return merge(out);\n  }\n  function SVGToPath(d) {\n    var pth = { cmds: [], crds: [] };\n    Typr[\"U\"][\"SVG\"].svgToPath(d, pth);\n    return { \"cmds\": pth.cmds, \"crds\": pth.crds };\n  }\n\n  function mipmapB(buff, w, h, hlp) {\n    var nw = w >> 1, nh = h >> 1;\n    var nbuf = new Uint8Array(nw * nh * 4);\n    var sb32 = new Uint32Array(buff.buffer), nb32 = new Uint32Array(nbuf.buffer);\n    for (var y = 0; y < nh; y++)\n      for (var x = 0; x < nw; x++) {\n        var ti = (y * nw + x), si = ((y << 1) * w + (x << 1));\n        //nbuf[ti  ] = buff[si  ];  nbuf[ti+1] = buff[si+1];  nbuf[ti+2] = buff[si+2];  nbuf[ti+3] = buff[si+3];\n        //*\n        var c0 = sb32[si], c1 = sb32[si + 1], c2 = sb32[si + w], c3 = sb32[si + w + 1];\n\n        var a0 = (c0 >>> 24), a1 = (c1 >>> 24), a2 = (c2 >>> 24), a3 = (c3 >>> 24), a = (a0 + a1 + a2 + a3);\n\n        if (a == 1020) {\n          var r = (((c0 >>> 0) & 255) + ((c1 >>> 0) & 255) + ((c2 >>> 0) & 255) + ((c3 >>> 0) & 255) + 2) >>> 2;\n          var g = (((c0 >>> 8) & 255) + ((c1 >>> 8) & 255) + ((c2 >>> 8) & 255) + ((c3 >>> 8) & 255) + 2) >>> 2;\n          var b = (((c0 >>> 16) & 255) + ((c1 >>> 16) & 255) + ((c2 >>> 16) & 255) + ((c3 >>> 16) & 255) + 2) >>> 2;\n          nb32[ti] = (255 << 24) | (b << 16) | (g << 8) | r;\n        }\n        else if (a == 0) nb32[ti] = 0;\n        else {\n          var r = ((c0 >>> 0) & 255) * a0 + ((c1 >>> 0) & 255) * a1 + ((c2 >>> 0) & 255) * a2 + ((c3 >>> 0) & 255) * a3;\n          var g = ((c0 >>> 8) & 255) * a0 + ((c1 >>> 8) & 255) * a1 + ((c2 >>> 8) & 255) * a2 + ((c3 >>> 8) & 255) * a3;\n          var b = ((c0 >>> 16) & 255) * a0 + ((c1 >>> 16) & 255) * a1 + ((c2 >>> 16) & 255) * a2 + ((c3 >>> 16) & 255) * a3;\n\n          var ia = 1 / a; r = ~~(r * ia + 0.5); g = ~~(g * ia + 0.5); b = ~~(b * ia + 0.5);\n          nb32[ti] = (((a + 2) >>> 2) << 24) | (b << 16) | (g << 8) | r;\n        }\n      }\n    return { buff: nbuf, w: nw, h: nh };\n  }\n\n  var __cnv, __ct;\n  function pathToContext(path, ctx) {\n    var c = 0, cmds = path[\"cmds\"], crds = path[\"crds\"];\n\n    //ctx.translate(3500,500);  ctx.rotate(0.25);  ctx.scale(1,-1);\n\n    for (var j = 0; j < cmds.length; j++) {\n      var cmd = cmds[j];\n      if (cmd == \"M\") {\n        ctx.moveTo(crds[c], crds[c + 1]);\n        c += 2;\n      }\n      else if (cmd == \"L\") {\n        ctx.lineTo(crds[c], crds[c + 1]);\n        c += 2;\n      }\n      else if (cmd == \"C\") {\n        ctx.bezierCurveTo(crds[c], crds[c + 1], crds[c + 2], crds[c + 3], crds[c + 4], crds[c + 5]);\n        c += 6;\n      }\n      else if (cmd == \"Q\") {\n        ctx.quadraticCurveTo(crds[c], crds[c + 1], crds[c + 2], crds[c + 3]);\n        c += 4;\n      }\n      else if (cmd[0] == \"d\") {\n        var upng = window[\"UPNG\"];\n        var x0 = crds[c], y0 = crds[c + 1], x1 = crds[c + 2], y1 = crds[c + 3], x2 = crds[c + 4], y2 = crds[c + 5], x3 = crds[c + 6], y3 = crds[c + 7]; c += 8;\n        //y0+=400;  y1+=400;  y1+=600;\n        if (upng == null) {\n          ctx.moveTo(x0, y0); ctx.lineTo(x1, y1); ctx.lineTo(x2, y2); ctx.lineTo(x3, y3); ctx.closePath();\n          continue;\n        }\n        var dx0 = (x1 - x0), dy0 = (y1 - y0), dx1 = (x3 - x0), dy1 = (y3 - y0);\n        var sbmp = atob(cmd.slice(22));\n        var bmp = new Uint8Array(sbmp.length);\n        for (var i = 0; i < sbmp.length; i++) bmp[i] = sbmp.charCodeAt(i);\n\n        var img = upng[\"decode\"](bmp.buffer), w = img[\"width\"], h = img[\"height\"];  //console.log(img);\n\n        var nbmp = new Uint8Array(upng[\"toRGBA8\"](img)[0]);\n        var tr = ctx[\"getTransform\"]();\n        var scl = Math.sqrt(Math.abs(tr[\"a\"] * tr[\"d\"] - tr[\"b\"] * tr[\"c\"])) * Math.sqrt(dx1 * dx1 + dy1 * dy1) / h;\n        while (scl < 0.5) {\n          var nd = mipmapB(nbmp, w, h);\n          nbmp = nd.buff; w = nd.w; h = nd.h; scl *= 2;\n        }\n\n        if (__cnv == null) { __cnv = document.createElement(\"canvas\"); __ct = __cnv.getContext(\"2d\"); }\n        if (__cnv.width != w || __cnv.height != h) { __cnv.width = w; __cnv.height = h; }\n\n        __ct.putImageData(new ImageData(new Uint8ClampedArray(nbmp.buffer), w, h), 0, 0);\n        ctx.save();\n        ctx.transform(dx0, dy0, dx1, dy1, x0, y0);\n        ctx.scale(1 / w, 1 / h);\n        ctx.drawImage(__cnv, 0, 0); //*/\n        ctx.restore();\n      }\n      else if (cmd.charAt(0) == \"#\" || cmd.charAt(0) == \"r\") {\n        ctx.beginPath();\n        ctx.fillStyle = cmd;\n      }\n      else if (cmd.charAt(0) == \"O\" && cmd != \"OX\") {\n        ctx.beginPath();\n        var pts = cmd.split(\"-\");\n        ctx.lineWidth = parseFloat(pts[2]);\n        ctx.lineCap = [\"butt\", \"round\", \"square\"][parseFloat(pts[3])];\n        ctx.lineJoin = [\"miter\", \"round\", \"bevel\"][parseFloat(pts[4])];\n        ctx.miterLimit = parseFloat(pts[5]);\n        ctx.lineDashOffset = parseFloat(pts[6]);\n        ctx.setLineDash(pts[7].split(\",\").map(parseFloat));\n        ctx.strokeStyle = pts[1];\n      }\n      else if (cmd == \"Z\") {\n        ctx.closePath();\n      }\n      else if (cmd == \"X\") {\n        ctx.fill();\n      }\n      else if (cmd == \"OX\") {\n        ctx.stroke();\n      }\n    }\n  }\n\n\n  function _drawCFF(cmds, state, font, pdct, p) {\n    var stack = state.stack;\n    var nStems = state.nStems, haveWidth = state.haveWidth, width = state.width, open = state.open;\n    var i = 0;\n    var x = state.x, y = state.y, c1x = 0, c1y = 0, c2x = 0, c2y = 0, c3x = 0, c3y = 0, c4x = 0, c4y = 0, jpx = 0, jpy = 0;\n    var CFF = Typr[\"T\"].CFF;\n\n    var nominalWidthX = pdct[\"nominalWidthX\"];\n    var o = { val: 0, size: 0 };\n    //console.log(cmds);\n    while (i < cmds.length) {\n      CFF.getCharString(cmds, i, o);\n      var v = o.val;\n      i += o.size;\n\n      if (v == \"o1\" || v == \"o18\")  //  hstem || hstemhm\n      {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n          width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n      }\n      else if (v == \"o3\" || v == \"o23\")  // vstem || vstemhm\n      {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n          width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n      }\n      else if (v == \"o4\") {\n        if (stack.length > 1 && !haveWidth) {\n          width = stack.shift() + nominalWidthX;\n          haveWidth = true;\n        }\n        if (open) P.ClosePath(p);\n\n        y += stack.pop();\n        P.MoveTo(p, x, y); open = true;\n      }\n      else if (v == \"o5\") {\n        while (stack.length > 0) {\n          x += stack.shift();\n          y += stack.shift();\n          P.LineTo(p, x, y);\n        }\n      }\n      else if (v == \"o6\" || v == \"o7\")  // hlineto || vlineto\n      {\n        var count = stack.length;\n        var isX = (v == \"o6\");\n\n        for (var j = 0; j < count; j++) {\n          var sval = stack.shift();\n\n          if (isX) x += sval; else y += sval;\n          isX = !isX;\n          P.LineTo(p, x, y);\n        }\n      }\n      else if (v == \"o8\" || v == \"o24\")\t// rrcurveto || rcurveline\n      {\n        var count = stack.length;\n        var index = 0;\n        while (index + 6 <= count) {\n          c1x = x + stack.shift();\n          c1y = y + stack.shift();\n          c2x = c1x + stack.shift();\n          c2y = c1y + stack.shift();\n          x = c2x + stack.shift();\n          y = c2y + stack.shift();\n          P.CurveTo(p, c1x, c1y, c2x, c2y, x, y);\n          index += 6;\n        }\n        if (v == \"o24\") {\n          x += stack.shift();\n          y += stack.shift();\n          P.LineTo(p, x, y);\n        }\n      }\n      else if (v == \"o11\") break;\n      else if (v == \"o1234\" || v == \"o1235\" || v == \"o1236\" || v == \"o1237\")//if((v+\"\").slice(0,3)==\"o12\")\n      {\n        if (v == \"o1234\") {\n          c1x = x + stack.shift();    // dx1\n          c1y = y;                      // dy1\n          c2x = c1x + stack.shift();    // dx2\n          c2y = c1y + stack.shift();    // dy2\n          jpx = c2x + stack.shift();    // dx3\n          jpy = c2y;                    // dy3\n          c3x = jpx + stack.shift();    // dx4\n          c3y = c2y;                    // dy4\n          c4x = c3x + stack.shift();    // dx5\n          c4y = y;                      // dy5\n          x = c4x + stack.shift();      // dx6\n          P.CurveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n          P.CurveTo(p, c3x, c3y, c4x, c4y, x, y);\n\n        }\n        if (v == \"o1235\") {\n          c1x = x + stack.shift();    // dx1\n          c1y = y + stack.shift();    // dy1\n          c2x = c1x + stack.shift();    // dx2\n          c2y = c1y + stack.shift();    // dy2\n          jpx = c2x + stack.shift();    // dx3\n          jpy = c2y + stack.shift();    // dy3\n          c3x = jpx + stack.shift();    // dx4\n          c3y = jpy + stack.shift();    // dy4\n          c4x = c3x + stack.shift();    // dx5\n          c4y = c3y + stack.shift();    // dy5\n          x = c4x + stack.shift();      // dx6\n          y = c4y + stack.shift();      // dy6\n          stack.shift();                // flex depth\n          P.CurveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n          P.CurveTo(p, c3x, c3y, c4x, c4y, x, y);\n        }\n        if (v == \"o1236\") {\n          c1x = x + stack.shift();    // dx1\n          c1y = y + stack.shift();    // dy1\n          c2x = c1x + stack.shift();    // dx2\n          c2y = c1y + stack.shift();    // dy2\n          jpx = c2x + stack.shift();    // dx3\n          jpy = c2y;                    // dy3\n          c3x = jpx + stack.shift();    // dx4\n          c3y = c2y;                    // dy4\n          c4x = c3x + stack.shift();    // dx5\n          c4y = c3y + stack.shift();    // dy5\n          x = c4x + stack.shift();      // dx6\n          P.CurveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n          P.CurveTo(p, c3x, c3y, c4x, c4y, x, y);\n        }\n        if (v == \"o1237\") {\n          c1x = x + stack.shift();    // dx1\n          c1y = y + stack.shift();    // dy1\n          c2x = c1x + stack.shift();    // dx2\n          c2y = c1y + stack.shift();    // dy2\n          jpx = c2x + stack.shift();    // dx3\n          jpy = c2y + stack.shift();    // dy3\n          c3x = jpx + stack.shift();    // dx4\n          c3y = jpy + stack.shift();    // dy4\n          c4x = c3x + stack.shift();    // dx5\n          c4y = c3y + stack.shift();    // dy5\n          if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n            x = c4x + stack.shift();\n          } else {\n            y = c4y + stack.shift();\n          }\n          P.CurveTo(p, c1x, c1y, c2x, c2y, jpx, jpy);\n          P.CurveTo(p, c3x, c3y, c4x, c4y, x, y);\n        }\n      }\n      else if (v == \"o14\") {\n        if (stack.length > 0 && stack.length != 4 && !haveWidth) {\n          width = stack.shift() + font[\"nominalWidthX\"];\n          haveWidth = true;\n        }\n        if (stack.length == 4) // seac = standard encoding accented character\n        {\n          var adx = stack.shift();\n          var ady = stack.shift();\n          var bchar = stack.shift();\n          var achar = stack.shift();\n\n\n          var bind = CFF.glyphBySE(font, bchar);\n          var aind = CFF.glyphBySE(font, achar);\n\n          //console.log(bchar, bind);\n          //console.log(achar, aind);\n          //state.x=x; state.y=y; state.nStems=nStems; state.haveWidth=haveWidth; state.width=width;  state.open=open;\n\n          _drawCFF(font[\"CharStrings\"][bind], state, font, pdct, p);\n          state.x = adx; state.y = ady;\n          _drawCFF(font[\"CharStrings\"][aind], state, font, pdct, p);\n\n          //x=state.x; y=state.y; nStems=state.nStems; haveWidth=state.haveWidth; width=state.width;  open=state.open;\n        }\n        if (open) { P.ClosePath(p); open = false; }\n      }\n      else if (v == \"o19\" || v == \"o20\") {\n        var hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n          width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n\n        i += (nStems + 7) >> 3;\n      }\n\n      else if (v == \"o21\") {\n        if (stack.length > 2 && !haveWidth) {\n          width = stack.shift() + nominalWidthX;\n          haveWidth = true;\n        }\n\n        y += stack.pop();\n        x += stack.pop();\n\n        if (open) P.ClosePath(p);\n        P.MoveTo(p, x, y); open = true;\n      }\n      else if (v == \"o22\") {\n        if (stack.length > 1 && !haveWidth) {\n          width = stack.shift() + nominalWidthX;\n          haveWidth = true;\n        }\n\n        x += stack.pop();\n\n        if (open) P.ClosePath(p);\n        P.MoveTo(p, x, y); open = true;\n      }\n      else if (v == \"o25\") {\n        while (stack.length > 6) {\n          x += stack.shift();\n          y += stack.shift();\n          P.LineTo(p, x, y);\n        }\n\n        c1x = x + stack.shift();\n        c1y = y + stack.shift();\n        c2x = c1x + stack.shift();\n        c2y = c1y + stack.shift();\n        x = c2x + stack.shift();\n        y = c2y + stack.shift();\n        P.CurveTo(p, c1x, c1y, c2x, c2y, x, y);\n      }\n      else if (v == \"o26\") {\n        if (stack.length % 2) {\n          x += stack.shift();\n        }\n\n        while (stack.length > 0) {\n          c1x = x;\n          c1y = y + stack.shift();\n          c2x = c1x + stack.shift();\n          c2y = c1y + stack.shift();\n          x = c2x;\n          y = c2y + stack.shift();\n          P.CurveTo(p, c1x, c1y, c2x, c2y, x, y);\n        }\n\n      }\n      else if (v == \"o27\") {\n        if (stack.length % 2) {\n          y += stack.shift();\n        }\n\n        while (stack.length > 0) {\n          c1x = x + stack.shift();\n          c1y = y;\n          c2x = c1x + stack.shift();\n          c2y = c1y + stack.shift();\n          x = c2x + stack.shift();\n          y = c2y;\n          P.CurveTo(p, c1x, c1y, c2x, c2y, x, y);\n        }\n      }\n      else if (v == \"o10\" || v == \"o29\")\t// callsubr || callgsubr\n      {\n        var obj = (v == \"o10\" ? pdct : font);\n        if (stack.length == 0) { console.log(\"error: empty stack\"); }\n        else {\n          var ind = stack.pop();\n          var subr = obj[\"Subrs\"][ind + obj[\"Bias\"]];\n          state.x = x; state.y = y; state.nStems = nStems; state.haveWidth = haveWidth; state.width = width; state.open = open;\n          _drawCFF(subr, state, font, pdct, p);\n          x = state.x; y = state.y; nStems = state.nStems; haveWidth = state.haveWidth; width = state.width; open = state.open;\n        }\n      }\n      else if (v == \"o30\" || v == \"o31\")   // vhcurveto || hvcurveto\n      {\n        var count, count1 = stack.length;\n        var index = 0;\n        var alternate = v == \"o31\";\n\n        count = count1 & -3;\n        index += count1 - count;\n\n        while (index < count) {\n          if (alternate) {\n            c1x = x + stack.shift();\n            c1y = y;\n            c2x = c1x + stack.shift();\n            c2y = c1y + stack.shift();\n            y = c2y + stack.shift();\n            if (count - index == 5) { x = c2x + stack.shift(); index++; }\n            else x = c2x;\n            alternate = false;\n          }\n          else {\n            c1x = x;\n            c1y = y + stack.shift();\n            c2x = c1x + stack.shift();\n            c2y = c1y + stack.shift();\n            x = c2x + stack.shift();\n            if (count - index == 5) { y = c2y + stack.shift(); index++; }\n            else y = c2y;\n            alternate = true;\n          }\n          P.CurveTo(p, c1x, c1y, c2x, c2y, x, y);\n          index += 4;\n        }\n      }\n\n      else if ((v + \"\").charAt(0) == \"o\") { console.log(\"Unknown operation: \" + v, cmds); throw v; }\n      else stack.push(v);\n    }\n    //console.log(cmds);\n    state.x = x; state.y = y; state.nStems = nStems; state.haveWidth = haveWidth; state.width = width; state.open = open;\n  }\n\n  function initHB(hurl, resp) {\n    var codeLength = function (code) {\n      var len = 0;\n      if ((code & (0xffffffff - (1 << 7) + 1)) == 0) { len = 1; }\n      else if ((code & (0xffffffff - (1 << 11) + 1)) == 0) { len = 2; }\n      else if ((code & (0xffffffff - (1 << 16) + 1)) == 0) { len = 3; }\n      else if ((code & (0xffffffff - (1 << 21) + 1)) == 0) { len = 4; }\n      return len;\n    };\n\n    fetch(hurl)\n      .then(function (x) { return x[\"arrayBuffer\"](); })\n      .then(function (ab) { return WebAssembly[\"instantiate\"](ab); })\n      .then(function (res) {\n        console.log(\"HB ready\");\n        var exp = res[\"instance\"][\"exports\"], mem = exp[\"memory\"];\n        //mem[\"grow\"](30); // each page is 64kb in size\n        var heapu8, u32, i32, f32;\n        var __lastFnt, blob, blobPtr, face, font;\n\n        Typr[\"U\"][\"shapeHB\"] = (function () {\n\n          var toJson = function (ptr) {\n            var length = exp[\"hb_buffer_get_length\"](ptr);\n            var result = [];\n            var iPtr32 = exp[\"hb_buffer_get_glyph_infos\"](ptr, 0) >>> 2;\n            var pPtr32 = exp[\"hb_buffer_get_glyph_positions\"](ptr, 0) >>> 2;\n            for (var i = 0; i < length; ++i) {\n              var a = iPtr32 + i * 5, b = pPtr32 + i * 5;\n              result.push({\n                \"g\": u32[a + 0],\n                \"cl\": u32[a + 2],\n                \"ax\": i32[b + 0],\n                \"ay\": i32[b + 1],\n                \"dx\": i32[b + 2],\n                \"dy\": i32[b + 3]\n              });\n            }\n            //console.log(result);\n            return result;\n          };\n          var te;\n\n          return function (fnt, str, prm) {\n            var fdata = fnt[\"_data\"], fn = fnt[\"name\"][\"postScriptName\"];\n            var ltr = prm[\"ltr\"], fts = prm[\"fts\"], axs = prm[\"axs\"];\n            if (fnt[\"fvar\"] && axs == null) axs = fnt[\"fvar\"][1][fnt[\"_index\"]][2];\n\n            //var olen = mem.buffer.byteLength, nlen = 2*fdata.length+str.length*16 + 4e6;\n            //if(olen<nlen) mem[\"grow\"](((nlen-olen)>>>16)+4);  //console.log(\"growing\",nlen);\n\n            heapu8 = new Uint8Array(mem.buffer);\n            u32 = new Uint32Array(mem.buffer);\n            i32 = new Int32Array(mem.buffer);\n            f32 = new Float32Array(mem.buffer);\n\n            if (__lastFnt != fn) {\n              if (blob != null) {\n                exp[\"hb_blob_destroy\"](blob);\n                exp[\"free\"](blobPtr);\n                exp[\"hb_face_destroy\"](face);\n                exp[\"hb_font_destroy\"](font);\n              }\n              blobPtr = exp[\"malloc\"](fdata.byteLength); heapu8.set(fdata, blobPtr);\n              blob = exp[\"hb_blob_create\"](blobPtr, fdata.byteLength, 2, 0, 0);\n              face = exp[\"hb_face_create\"](blob, fnt[\"_index\"]);\n              font = exp[\"hb_font_create\"](face);\n              __lastFnt = fn;\n            }\n            if (window[\"TextEncoder\"] == null) { alert(\"Your browser is too old. Please, update it.\"); return; }\n            if (te == null) te = new window[\"TextEncoder\"](\"utf8\");\n\n            var buffer = exp[\"hb_buffer_create\"]();\n            var bytes = te[\"encode\"](str);\n            var len = bytes.length, strp = exp[\"malloc\"](len); heapu8.set(bytes, strp);\n            exp[\"hb_buffer_add_utf8\"](buffer, strp, len, 0, len);\n            exp[\"free\"](strp);\n\n            var bin = Typr[\"B\"];\n\n            var feat = 0;\n            if (fts) {\n              feat = exp[\"malloc\"](16 * fts.length);\n              for (var i = 0; i < fts.length; i++) {\n                var fe = fts[i];\n                var off = feat + i * 16, qo = off >>> 2;\n                bin.writeASCII(heapu8, off, fe[0].split(\"\").reverse().join(\"\"));\n                u32[qo + 1] = fe[1];\n                u32[qo + 2] = fe[2];\n                u32[qo + 3] = fe[3];\n              }\n              //console.log(fts);\n            }\n            var vdat = 0;\n            if (axs && fnt[\"fvar\"]) {\n              var axes = fnt[\"fvar\"][0];  //console.log(axes, axs);\n              vdat = exp[\"malloc\"](8 * axs.length);\n              for (var i = 0; i < axs.length; i++) {\n                var off = vdat + i * 8, qo = off >>> 2;\n                bin.writeASCII(heapu8, off, axes[i][0].split(\"\").reverse().join(\"\"));\n                f32[qo + 1] = axs[i];\n              }\n            }\n            //*/\n\n            if (axs) exp[\"hb_font_set_variations\"](font, vdat, axs.length);\n            exp[\"hb_buffer_set_direction\"](buffer, ltr ? 4 : 5);\n            exp[\"hb_buffer_guess_segment_properties\"](buffer);\n            exp[\"hb_shape\"](font, buffer, feat, fts ? fts.length : 0);\n            var json = toJson(buffer);//buffer[\"json\"]();\n            exp[\"hb_buffer_destroy\"](buffer);\n            if (fts) exp[\"free\"](feat);\n            if (axs) exp[\"free\"](vdat);\n\n            var arr = json.slice(0); if (!ltr) arr.reverse();\n            var ci = 0, bi = 0;  // character index, binary index\n            for (var i = 1; i < arr.length; i++) {\n              var gl = arr[i], cl = gl[\"cl\"];\n              while (true) {\n                var cpt = str.codePointAt(ci), cln = codeLength(cpt);\n                if (bi + cln <= cl) { bi += cln; ci += cpt <= 0xffff ? 1 : 2; }\n                else break;\n              }\n              //while(bi+codeLength(str.charCodeAt(ci)) <=cl) {  bi+=codeLength(str.charCodeAt(ci));  ci++;  }\n              gl[\"cl\"] = ci;\n            }\n            return json;\n          }\n        }());\n        resp();\n      });\n  }\n\n  return { \"shape\": shape, \"shapeToPath\": shapeToPath, \"codeToGlyph\": codeToGlyph, \"glyphToPath\": glyphToPath, \"pathToSVG\": pathToSVG, \"SVGToPath\": SVGToPath, \"pathToContext\": pathToContext, \"initHB\": initHB };\n}();\n\nexport { Typr as default };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8408, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ryan%20Purnomo/Bahasa-Pemrograman/Website/Javascript/NextJS/CG-GAMES/node_modules/p5/dist/type/p5.Font.js"],"sourcesContent":["import { textCoreConstants } from './textCore.js';\nimport { C as CENTER, R as RIGHT, a as RADIUS } from '../constants-C-g_eAdC.js';\nimport { UnicodeRange } from '@japont/unicode-range';\nimport { unicodeRanges } from './unicodeRanges.js';\nimport Typr from './lib/Typr.js';\nimport { createFromCommands } from '@davepagurek/bezier-path';\nimport '../p5.Renderer-CwAYZOC2.js';\nimport '../creating_reading-D4AAKRbx.js';\nimport 'colorjs.io/fn';\nimport '../color/color_spaces/hsb.js';\nimport '../image/filters.js';\nimport '../math/p5.Vector.js';\nimport '../shape/custom_shapes.js';\nimport '../core/States.js';\nimport '../io/utilities.js';\nimport 'file-saver';\nimport 'pako';\n\n/**\n * @module Typography\n */\n\n\nconst pathArgCounts = { M: 2, L: 2, C: 6, Q: 4 };\nconst validFontTypes = ['ttf', 'otf', 'woff'];//, 'woff2'];\nconst validFontTypesRe = new RegExp(`\\\\.(${validFontTypes.join('|')})`, 'i');\nconst extractFontNameRe = new RegExp(`([^/]+)(\\\\.(?:${validFontTypes.join('|')}))`, 'i');\nconst invalidFontError = 'Sorry, only TTF, OTF and WOFF files are supported.'; // and WOFF2\nconst fontFaceVariations = ['weight', 'stretch', 'style'];\n\n\nlet nextId = 0;\nclass Font {\n  constructor(p, fontFace, name, path, data) {\n    if (!(fontFace instanceof FontFace)) {\n      throw Error('FontFace is required');\n    }\n    this._pInst = p;\n    this.name = name;\n    this.path = path;\n    this.data = data;\n    this.face = fontFace;\n    this.id = nextId++;\n  }\n\n  /**\n   * Checks whether a font has glyph point data and\n   * can thus be used for textToPoints(), WEBGL mode, etc.\n   * @private\n   */\n  static hasGlyphData(textFont) {\n    let { font } = textFont;\n    return typeof font === 'object' && typeof font.data !== 'undefined';\n  }\n\n  fontBounds(str, x, y, width, height, options) {\n    ({ width, height, options } = this._parseArgs(width, height, options));\n    let renderer = options?.graphics?._renderer || this._pInst._renderer;\n    if (!renderer) throw Error('p5 or graphics required for fontBounds()');\n    return renderer.fontBounds(str, x, y, width, height);\n  }\n\n  textBounds(str, x, y, width, height, options) {\n    ({ width, height, options } = this._parseArgs(width, height, options));\n    let renderer = options?.graphics?._renderer || this._pInst._renderer;\n    if (!renderer) throw Error('p5 or graphics required for fontBounds()');\n    return renderer.textBounds(str, x, y, width, height);\n  }\n\n  /**\n   * Returns a flat array of path commands that describe the outlines of a string of text.\n   *\n   * Each command is represented as an array of the form `[type, ...coords]`, where:\n   * - `type` is one of `'M'`, `'L'`, `'Q'`, `'C'`, or `'Z'`,\n   * - `coords` are the numeric values needed for that command.\n   *\n   * `'M'` indicates a \"move to\" (starting a new contour),\n   * `'L'` a line segment,\n   * `'Q'` a quadratic bezier,\n   * `'C'` a cubic bezier, and\n   * `'Z'` closes the current path.\n   *\n   * The first two parameters, `x` and `y`, specify the baseline origin for the text.\n   * Optionally, you can provide a `width` and `height` for text wrapping; if you don't need\n   * wrapping, you can omit them and directly pass `options` as the fourth parameter.\n   *\n   * @param  {String} str            The text to convert into path commands.\n   * @param  {Number} x              x‐coordinate of the text baseline.\n   * @param  {Number} y              y‐coordinate of the text baseline.\n   * @param  {Number} [width]        Optional width for text wrapping.\n   * @param  {Number} [height]       Optional height for text wrapping.\n   * @param  {Object} [options]      Configuration object for rendering text.\n   * @return {Array<Array>}          A flat array of path commands.\n   *\n   * @example\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup() {\n   *   font = await loadFont('assets/inconsolata.otf');\n   *   createCanvas(200, 200);\n   *   background(220);\n   *   noLoop();\n   * }\n   *\n   * function draw() {\n   *   background(220);\n   *   stroke(0);\n   *   noFill();\n   *   textSize(60);\n   *\n   *   // Get path commands for \"Hello\" (drawn at baseline x=50, y=100):\n   *   const pathCommands = font.textToPaths('Hello', 30, 110);\n   *\n   *   beginShape();\n   *   for (let i = 0; i < pathCommands.length; i++) {\n   *     const cmd = pathCommands[i];\n   *     const type = cmd[0];\n   *\n   *     switch (type) {\n   *       case 'M': {\n   *         // Move to (start a new contour)\n   *         const x = cmd[1];\n   *         const y = cmd[2];\n   *         endContour(); // In case we were already drawing\n   *         beginContour();\n   *         vertex(x, y);\n   *         break;\n   *       }\n   *       case 'L': {\n   *         // Line to\n   *         const x = cmd[1];\n   *         const y = cmd[2];\n   *         vertex(x, y);\n   *         break;\n   *       }\n   *       case 'Q': {\n   *         // Quadratic bezier\n   *         const cx = cmd[1];\n   *         const cy = cmd[2];\n   *         const x = cmd[3];\n   *         const y = cmd[4];\n   *         bezierOrder(2);\n   *         bezierVertex(cx, cy);\n   *         bezierVertex(x, y);\n   *         break;\n   *       }\n   *       case 'C': {\n   *         // Cubic bezier\n   *         const cx1 = cmd[1];\n   *         const cy1 = cmd[2];\n   *         const cx2 = cmd[3];\n   *         const cy2 = cmd[4];\n   *         const x = cmd[5];\n   *         const y = cmd[6];\n   *         bezierOrder(3);\n   *         bezierVertex(cx1, cy1);\n   *         bezierVertex(cx2, cy2);\n   *         bezierVertex(x, y);\n   *         break;\n   *       }\n   *       case 'Z': {\n   *         // Close path\n   *         endContour(CLOSE);\n   *         beginContour();\n   *         break;\n   *       }\n   *     }\n   *   }\n   *   endContour();\n   *   endShape();\n   * }\n   * </code>\n   * </div>\n   */\n\n  textToPaths(str, x, y, width, height, options) {\n\n    ({ width, height, options } = this._parseArgs(width, height, options));\n\n    if (!this.data) {\n      throw Error('No font data available for \"' + this.name\n        + '\"\\nTry downloading a local copy of the font file');\n    }\n\n    // lineate and get glyphs/paths for each line\n    let lines = this._lineateAndPathify(str, x, y, width, height, options);\n\n    // flatten into a single array containing all the glyphs\n    let glyphs = lines.map(o => o.glyphs).flat();\n\n    // flatten into a single array with all the path commands\n    return glyphs.map(g => g.path.commands).flat();\n  }\n\n  /**\n   * Returns an array of points outlining a string of text written using the\n   * font.\n   *\n   * Each point object in the array has three properties that describe the\n   * point's location and orientation, called its path angle. For example,\n   * `{ x: 10, y: 20, alpha: 450 }`.\n   *\n   * The first parameter, `str`, is a string of text. The second and third\n   * parameters, `x` and `y`, are the text's position. By default, they set the\n   * coordinates of the bounding box's bottom-left corner. See\n   * <a href=\"#/p5/textAlign\">textAlign()</a> for more ways to align text.\n   *\n   * The fourth parameter, `options`, is also optional. `font.textToPoints()`\n   * expects an object with the following properties:\n   *\n   * `sampleFactor` is the ratio of the text's path length to the number of\n   * samples. It defaults to 0.1. Higher values produce more points along the\n   * path and are more precise.\n   *\n   * `simplifyThreshold` removes collinear points if it's set to a number other\n   * than 0. The value represents the threshold angle to use when determining\n   * whether two edges are collinear.\n   *\n   * @param  {String} str        string of text.\n   * @param  {Number} x          x-coordinate of the text.\n   * @param  {Number} y          y-coordinate of the text.\n   * @param  {Object} [options]  object with sampleFactor and simplifyThreshold\n   *                             properties.\n   * @return {Array<Object>} array of point objects, each with `x`, `y`, and `alpha` (path angle) properties.\n   *\n   * @example\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup() {\n   *   createCanvas(100, 100);\n   *   font = await loadFont('assets/inconsolata.otf');\n   *\n   *   background(200);\n   *   textSize(35);\n   *\n   *   // Get the point array.\n   *   let points = font.textToPoints('p5*js', 6, 60, { sampleFactor: 0.5 });\n   *\n   *   // Draw a dot at each point.\n   *   for (let p of points) {\n   *     point(p.x, p.y);\n   *   }\n   *\n   *   describe('A set of black dots outlining the text \"p5*js\" on a gray background.');\n   * }\n   * </code>\n   * </div>\n   */\n  textToPoints(str, x, y, width, height, options) {\n    // By segmenting per contour, pointAtLength becomes much faster\n    const contourPoints = this.textToContours(str, x, y, width, height, options);\n    return contourPoints.reduce((acc, next) => {\n      acc.push(...next);\n      return acc;\n    }, []);\n  }\n\n  /**\n   * Returns an array of arrays of points outlining a string of text written using the\n   * font. Each array represents a contour, so the letter O will have two outer arrays:\n   * one for the outer edge of the shape, and one for the inner edge of the hole.\n   *\n   * Each point object in a contour array has three properties that describe the\n   * point's location and orientation, called its path angle. For example,\n   * `{ x: 10, y: 20, alpha: 450 }`.\n   *\n   * The first parameter, `str`, is a string of text. The second and third\n   * parameters, `x` and `y`, are the text's position. By default, they set the\n   * coordinates of the bounding box's bottom-left corner. See\n   * <a href=\"#/p5/textAlign\">textAlign()</a> for more ways to align text.\n   *\n   * The fourth parameter, `options`, is also optional. `font.textToPoints()`\n   * expects an object with the following properties:\n   *\n   * `sampleFactor` is the ratio of the text's path length to the number of\n   * samples. It defaults to 0.1. Higher values produce more points along the\n   * path and are more precise.\n   *\n   * `simplifyThreshold` removes collinear points if it's set to a number other\n   * than 0. The value represents the threshold angle to use when determining\n   * whether two edges are collinear.\n   *\n   * @param  {String} str        string of text.\n   * @param  {Number} x          x-coordinate of the text.\n   * @param  {Number} y          y-coordinate of the text.\n   * @param  {Object} [options]  object with sampleFactor and simplifyThreshold\n   *                             properties.\n   * @return {Array<Array<Object>>} array of point objects, each with `x`, `y`, and `alpha` (path angle) properties.\n   *\n   * @example\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup() {\n   *   createCanvas(100, 100);\n   *   font = await loadFont('/assets/inconsolata.otf');\n   * }\n   *\n   * function draw() {\n   *   background(200);\n   *   textAlign(CENTER, CENTER);\n   *   textSize(30);\n   *\n   *   // Get the point array.\n   *   let contours = font.textToContours('p5*js', width/2, height/2, { sampleFactor: 0.5 });\n   *\n   *   beginShape();\n   *   for (const pts of contours) {\n   *     beginContour();\n   *     for (const pt of pts) {\n   *       vertex(pt.x + 5*sin(pt.y*0.1 + millis()*0.01), pt.y);\n   *     }\n   *     endContour(CLOSE);\n   *   }\n   *   endShape();\n   *\n   *   describe('The text p5*js wobbling over time');\n   * }\n   * </code>\n   * </div>\n   */\n  textToContours(str, x = 0, y = 0, width, height, options) {\n    ({ width, height, options } = this._parseArgs(width, height, options));\n\n    const cmds = this.textToPaths(str, x, y, width, height, options);\n    const cmdContours = [];\n    for (const cmd of cmds) {\n      if (cmd[0] === 'M') {\n        cmdContours.push([]);\n      }\n      cmdContours[cmdContours.length - 1].push(cmd);\n    }\n\n    return cmdContours.map((commands) => pathToPoints(commands, options, this));\n  }\n  /**\n      *\n      * Converts text into a 3D model that can be rendered in WebGL mode.\n      *\n      * This method transforms flat text into extruded 3D geometry, allowing\n      * for dynamic effects like depth, warping, and custom shading.\n      *\n      * It works by taking the outlines (contours) of each character in the\n      * provided text string and constructing a 3D shape from them.\n      *\n      * Once your 3D text is ready, you can rotate it in 3D space using <a href=\"#/p5/orbitControl\">orbitControl()</a>\n      * — just click and drag with your mouse to see it from all angles!\n      *\n      * Use the extrude slider to give your letters depth: slide it up, and your\n      * flat text turns into a solid, multi-dimensional object.\n      *\n      * You can also choose from various fonts such as \"Anton\", \"Montserrat\", or \"Source Serif\",\n      * much like selecting fancy fonts in a word processor,\n      *\n      * The generated model (a Geometry object) can be manipulated further—rotated, scaled,\n      * or styled with shaders—to create engaging, interactive visual art.\n      *\n      * @param {String} str The text string to convert into a 3D model.\n      * @param {Number} x The x-coordinate for the starting position of the text.\n      * @param {Number} y The y-coordinate for the starting position of the text.\n      * @param {Number} width Maximum width of the text block (wraps text if exceeded).\n      * @param {Number} height Maximum height of the text block.\n      * @param {Object} [options] Configuration options for the 3D text:\n      * @param {Number} [options.extrude=0] The depth to extrude the text. A value of 0 produces\n      * flat text; higher values create thicker, 3D models.\n      * @param {Number} [options.sampleFactor=1] A factor controlling the level of detail for the text contours.\n      *  Higher values result in smoother curves.\n      * @return {p5.Geometry} A geometry object representing the 3D model of the text.\n      *\n      * @example\n      * <div modernizr='webgl'>\n      * <code>\n      * let font;\n      * let geom;\n      *\n      * async function setup() {\n      *   createCanvas(200, 200, WEBGL);\n      *   font = await loadFont('https://fonts.gstatic.com/s/anton/v25/1Ptgg87LROyAm0K08i4gS7lu.ttf');\n      *\n      *   geom = font.textToModel(\"Hello\", 50, 0, { sampleFactor: 2 });\n      *   geom.clearColors();\n      *   geom.normalize();\n      * }\n      *\n      * function draw() {\n      *   background(255);\n      *   orbitControl();\n      *   fill(\"red\");\n      *   strokeWeight(4);\n      *   scale(min(width, height) / 300);\n      *   model(geom);\n      *   describe('A red non-extruded \"Hello\" in Anton on white canvas, rotatable via mouse.');\n      * }\n      * </code>\n      * </div>\n      *\n      * @example\n      * <div modernizr='webgl'>\n      * <code>\n      * let font;\n      * let geom;\n      *\n      * async function setup() {\n      *   createCanvas(200, 200, WEBGL);\n      *\n      *   // Alternative fonts:\n      *   // Anton: 'https://fonts.gstatic.com/s/anton/v25/1Ptgg87LROyAm0K08i4gS7lu.ttf'\n      *   // Montserrat: 'https://fonts.gstatic.com/s/montserrat/v29/JTUHjIg1_i6t8kCHKm4532VJOt5-QNFgpCtr6Ew-Y3tcoqK5.ttf'\n      *   // Source Serif: 'https://fonts.gstatic.com/s/sourceserif4/v8/vEFy2_tTDB4M7-auWDN0ahZJW3IX2ih5nk3AucvUHf6OAVIJmeUDygwjihdqrhxXD-wGvjU.ttf'\n      *\n      *   // Using Source Serif for this example:\n      *   font = await loadFont('https://fonts.gstatic.com/s/sourceserif4/v8/vEFy2_tTDB4M7-auWDN0ahZJW3IX2ih5nk3AucvUHf6OAVIJmeUDygwjihdqrhxXD-wGvjU.ttf');\n      *\n      *   geom = font.textToModel(\"Hello\", 50, 0, { sampleFactor: 2, extrude: 5 });\n      *   geom.clearColors();\n      *   geom.normalize();\n      * }\n      *\n      * function draw() {\n      *   background(255);\n      *   orbitControl();\n      *   fill(\"red\");\n      *   strokeWeight(4);\n      *   scale(min(width, height) / 300);\n      *   model(geom);\n      *   describe('3D red extruded \"Hello\" in Source Serif on white, rotatable via mouse.');\n      * }\n      * </code>\n      * </div>\n      *\n      * @example\n      * <div modernizr='webgl'>\n      * <code>\n      * let geom;\n      * let activeFont;\n      * let artShader;\n      * let lineShader;\n      *\n      * // Define parameters as simple variables\n      * let words = 'HELLO';\n      * let warp = 1;\n      * let extrude = 5;\n      * let palette = [\"#ffe03d\", \"#fe4830\", \"#d33033\", \"#6d358a\", \"#1c509e\", \"#00953c\"];\n      *\n      * async function setup() {\n      *   createCanvas(200, 200, WEBGL);\n      *\n      *   // Using Anton as the default font for this example:\n      *\n      *  // Alternative fonts:\n      *  // Anton: 'https://fonts.gstatic.com/s/anton/v25/1Ptgg87LROyAm0K08i4gS7lu.ttf'\n      *  // Montserrat: 'https://fonts.gstatic.com/s/montserrat/v29/JTUHjIg1_i6t8kCHKm4532VJOt5-QNFgpCtr6Ew-Y3tcoqK5.ttf'\n      *  // Source Serif: 'https://fonts.gstatic.com/s/sourceserif4/v8/vEFy2_tTDB4M7-auWDN0ahZJW3IX2ih5nk3AucvUHf6OAVIJmeUDygwjihdqrhxXD-wGvjU.ttf'\n      *   activeFont = await loadFont('https://fonts.gstatic.com/s/anton/v25/1Ptgg87LROyAm0K08i4gS7lu.ttf');\n      *\n      *   geom = activeFont.textToModel(words, 0, 50, { sampleFactor: 2, extrude });\n      *   geom.clearColors();\n      *   geom.normalize();\n      *\n      *   artShader = baseMaterialShader().modify({\n      *     uniforms: {\n      *       'float time': () => millis(),\n      *       'float warp': () => warp,\n      *       'float numColors': () => palette.length,\n      *       'vec3[6] colors': () => palette.flatMap((c) => [red(c)/255, green(c)/255, blue(c)/255]),\n      *     },\n      *     vertexDeclarations: 'out vec3 vPos;',\n      *     fragmentDeclarations: 'in vec3 vPos;',\n      *     'Vertex getObjectInputs': `(Vertex inputs) {\n      *       vPos = inputs.position;\n      *       inputs.position.x += 5. * warp * sin(inputs.position.y * 0.1 + time * 0.001) / (1. + warp);\n      *       inputs.position.y += 5. * warp * sin(inputs.position.x * 0.1 + time * 0.0009) / (1. + warp);\n      *       return inputs;\n      *     }`,\n      *     'vec4 getFinalColor': `(vec4 _c) {\n      *       float x = vPos.x * 0.005;\n      *       float a = floor(fract(x) * numColors);\n      *       float b = a == numColors - 1. ? 0. : a + 1.;\n      *       float t = fract(x * numColors);\n      *       vec3 c = mix(colors[int(a)], colors[int(b)], t);\n      *       return vec4(c, 1.);\n      *     }`\n      *   });\n      *\n      *   lineShader = baseStrokeShader().modify({\n      *     uniforms: {\n      *       'float time': () => millis(),\n      *       'float warp': () => warp,\n      *     },\n      *     'StrokeVertex getObjectInputs': `(StrokeVertex inputs) {\n      *       inputs.position.x += 5. * warp * sin(inputs.position.y * 0.1 + time * 0.001) / (1. + warp);\n      *       inputs.position.y += 5. * warp * sin(inputs.position.x * 0.1 + time * 0.0009) / (1. + warp);\n      *       return inputs;\n      *     }`,\n      *   });\n      * }\n      *\n      * function draw() {\n      *   background(255);\n      *   orbitControl();\n      *   shader(artShader);\n      *   strokeShader(lineShader);\n      *   strokeWeight(4);\n      *   scale(min(width, height) / 210);\n      *   model(geom);\n      *   describe('3D wavy with different color sets \"Hello\" in Anton on white canvas, rotatable via mouse.');\n      * }\n      * </code>\n      * </div>\n      */\n  textToModel(str, x, y, width, height, options) {\n    ({ width, height, options } = this._parseArgs(width, height, options));\n    const extrude = options?.extrude || 0;\n    const contours = this.textToContours(str, x, y, width, height, options);\n    const geom = this._pInst.buildGeometry(() => {\n      if (extrude === 0) {\n        this._pInst.beginShape();\n        this._pInst.normal(0, 0, 1);\n        for (const contour of contours) {\n          this._pInst.beginContour();\n          for (const { x, y } of contour) {\n            this._pInst.vertex(x, y);\n          }\n          this._pInst.endContour(this._pInst.CLOSE);\n        }\n        this._pInst.endShape();\n      } else {\n        // Draw front faces\n        for (const side of [1, -1]) {\n          this._pInst.beginShape();\n          for (const contour of contours) {\n            this._pInst.beginContour();\n            for (const { x, y } of contour) {\n              this._pInst.vertex(x, y, side * extrude * 0.5);\n            }\n            this._pInst.endContour(this._pInst.CLOSE);\n          }\n          this._pInst.endShape();\n          this._pInst.beginShape();\n        }\n        // Draw sides\n        for (const contour of contours) {\n          this._pInst.beginShape(this._pInst.QUAD_STRIP);\n          for (const v of contour) {\n            for (const side of [-1, 1]) {\n              this._pInst.vertex(v.x, v.y, side * extrude * 0.5);\n            }\n          }\n          this._pInst.endShape();\n        }\n      }\n    });\n    if (extrude !== 0) {\n      geom.computeNormals();\n      for (const face of geom.faces) {\n        if (face.every((idx) => geom.vertices[idx].z <= -extrude * 0.5 + 0.1)) {\n          for (const idx of face) geom.vertexNormals[idx].set(0, 0, -1);\n          face.reverse();\n        }\n      }\n    }\n    return geom;\n  }\n\n  variations() {\n    let vars = {};\n    if (this.data) {\n      let axes = this.face?.axes;\n      if (axes) {\n        axes.forEach(ax => {\n          vars[ax.tag] = ax.value;\n        });\n      }\n    }\n    fontFaceVariations.forEach(v => {\n      let val = this.face[v];\n      if (val !== 'normal') {\n        vars[v] = vars[v] || val;\n      }\n    });\n    return vars;\n  }\n\n  metadata() {\n    let meta = this.data?.name || {};\n    for (let p in this.face) {\n      if (!/^load/.test(p)) {\n        meta[p] = meta[p] || this.face[p];\n      }\n    }\n    return meta;\n  }\n\n  static async list(log = false) { // tmp\n    if (log) {\n      console.log('There are', document.fonts.size, 'font-faces\\n');\n      let loaded = 0;\n      for (let fontFace of document.fonts.values()) {\n        console.log('FontFace: {');\n        for (let property in fontFace) {\n          console.log('  ' + property + ': ' + fontFace[property]);\n        }\n        console.log('}\\n');\n        if (fontFace.status === 'loaded') {\n          loaded++;\n        }\n      }\n      console.log(loaded + ' loaded');\n    }\n    return await Array.from(document.fonts);\n  }\n\n  /////////////////////////////// HELPERS ////////////////////////////////\n\n  _verticalAlign(size) {\n    const { sCapHeight } = this.data?.['OS/2'] || {};\n    const { unitsPerEm = 1000 } = this.data?.head || {};\n    const { ascender = 0, descender = 0 } = this.data?.hhea || {};\n    const current = ascender / 2;\n    const target = (sCapHeight || (ascender + descender)) / 2;\n    const offset = target - current;\n    return offset * size / unitsPerEm;\n  }\n\n  /*\n    Returns an array of line objects, each containing { text, x, y, glyphs: [ {g, path} ] }\n  */\n  _lineateAndPathify(str, x, y, width, height, options = {}) {\n\n    let renderer = options?.graphics?._renderer || this._pInst._renderer;\n\n    // save the baseline\n    let setBaseline = renderer.drawingContext.textBaseline;\n\n    // lineate and compute bounds for the text\n    let { lines, bounds } = renderer._computeBounds\n      (textCoreConstants._FONT_BOUNDS, str, x, y, width, height,\n        { ignoreRectMode: true, ...options });\n\n    // compute positions for each of the lines\n    lines = this._position(renderer, lines, bounds, width, height);\n\n    // convert lines to paths\n    let uPE = this.data?.head?.unitsPerEm || 1000;\n    let scale = renderer.states.textSize / uPE;\n\n    const axs = this._currentAxes(renderer);\n    let pathsForLine = lines.map(l => this._lineToGlyphs(l, { scale, axs }));\n\n    // restore the baseline\n    renderer.drawingContext.textBaseline = setBaseline;\n\n    return pathsForLine;\n  }\n\n  _currentAxes(renderer) {\n    let axs;\n    if ((this.data?.fvar?.length ?? 0) > 0) {\n      const fontAxes = this.data.fvar[0];\n      axs = fontAxes.map(([tag, minVal, defaultVal, maxVal, flags, name]) => {\n        if (!renderer) return defaultVal;\n        if (tag === 'wght') {\n          return renderer.states.fontWeight;\n        } else if (tag === 'wdth') {\n          // TODO: map from keywords (normal, ultra-condensed, etc) to values\n          // return renderer.states.fontStretch\n          return 100;\n        } else if (renderer.textCanvas().style.fontVariationSettings) {\n          const match = new RegExp(`\\\\b${tag}\\s+(\\d+)`)\n            .exec(renderer.textCanvas().style.fontVariationSettings);\n          if (match) {\n            return parseInt(match[1]);\n          } else {\n            return defaultVal;\n          }\n        } else {\n          return defaultVal;\n        }\n      });\n    }\n    return axs;\n  }\n\n  _textToPathPoints(str, x, y, width, height, options) {\n\n    ({ width, height, options } = this._parseArgs(width, height, options));\n\n    // lineate and get the points for each line\n    let cmds = this.textToPaths(str, x, y, width, height, options);\n\n    // divide line-segments with intermediate points\n    const subdivide = (pts, pt1, pt2, md) => {\n      if (fn.dist(pt1.x, pt1.y, pt2.x, pt2.y) > md) {\n        let middle = { x: (pt1.x + pt2.x) / 2, y: (pt1.y + pt2.y) / 2 };\n        pts.push(middle);\n        subdivide(pts, pt1, middle, md);\n        subdivide(pts, middle, pt2, md);\n      }\n    };\n\n    // a point for each path-command plus line subdivisions\n    let pts = [];\n    let { textSize } = this._pInst._renderer.states;\n    let maxDist = (textSize / this.data.head.unitsPerEm) * 500;\n\n    for (let i = 0; i < cmds.length; i++) {\n      let { type, data: d } = cmds[i];\n      if (type !== 'Z') {\n        let pt = { x: d[d.length - 2], y: d[d.length - 1] };\n        if (type === 'L' && pts.length && !options?.nodivide > 0) {\n          subdivide(pts, pts[pts.length - 1], pt, maxDist);\n        }\n        pts.push(pt);\n      }\n    }\n\n    return pts;\n  }\n\n  _parseArgs(width, height, options = {}) {\n\n    if (typeof width === 'object') {\n      options = width;\n      width = height = undefined;\n    }\n    else if (typeof height === 'object') {\n      options = height;\n      height = undefined;\n    }\n    return { width, height, options };\n  }\n\n  _position(renderer, lines, bounds, width, height) {\n\n    let { textAlign, textLeading } = renderer.states;\n    let metrics = this._measureTextDefault(renderer, 'X');\n    let ascent = metrics.fontBoundingBoxAscent;\n\n    let coordify = (text, i) => {\n      let x = bounds.x;\n      let y = bounds.y + (i * textLeading) + ascent;\n      let lineWidth = renderer._fontWidthSingle(text);\n      if (textAlign === CENTER) {\n        x += (bounds.w - lineWidth) / 2;\n      }\n      else if (textAlign === RIGHT) {\n        x += (bounds.w - lineWidth);\n      }\n      if (typeof width !== 'undefined') {\n        switch (renderer.states.rectMode) {\n          case CENTER:\n            x -= width / 2;\n            y -= height / 2;\n            break;\n          case RADIUS:\n            x -= width;\n            y -= height;\n            break;\n        }\n      }\n      return { text, x, y };\n    };\n\n    return lines.map(coordify);\n  }\n\n  _lineToGlyphs(line, { scale = 1, axs } = {}) {\n\n    if (!this.data) {\n      throw Error('No font data available for \"' + this.name\n        + '\"\\nTry downloading a local copy of the font file');\n    }\n    let glyphShapes = Typr.U.shape(this.data, line.text, { axs });\n    line.glyphShapes = glyphShapes;\n\n    line.glyphs = this._shapeToPaths(glyphShapes, line, { scale, axs });\n\n    return line;\n  }\n\n  _positionGlyphs(text, options) {\n    let renderer = options?.graphics?._renderer || this._pInst._renderer;\n    const axs = this._currentAxes(renderer);\n    const glyphShapes = Typr.U.shape(this.data, text, { axs });\n    const positionedGlyphs = [];\n    let x = 0;\n    for (const glyph of glyphShapes) {\n      positionedGlyphs.push({ x, index: glyph.g, shape: glyph });\n      x += glyph.ax;\n    }\n    return positionedGlyphs;\n  }\n\n  _singleShapeToPath(shape, { scale = 1, x = 0, y = 0, lineX = 0, lineY = 0, axs } = {}) {\n    let font = this.data;\n    let crdIdx = 0;\n    let { g, ax, ay, dx, dy } = shape;\n    let { crds, cmds } = Typr.U.glyphToPath(font, g, true, axs);\n\n    // can get simple points for each glyph here, but we don't need them ?\n    let glyph = { /*g: line.text[i], points: [],*/ path: { commands: [] } };\n\n    for (let j = 0; j < cmds.length; j++) {\n      let type = cmds[j], command = [type];\n      if (type in pathArgCounts) {\n        let argCount = pathArgCounts[type];\n        for (let k = 0; k < argCount; k += 2) {\n          let gx = crds[k + crdIdx] + x + dx;\n          let gy = crds[k + crdIdx + 1] + y + dy;\n          let fx = lineX + gx * scale;\n          let fy = lineY + gy * -scale;\n          command.push(fx);\n          command.push(fy);\n          /*if (k === argCount - 2) {\n            glyph.points.push({ x: fx, y: fy });\n          }*/\n        }\n        crdIdx += argCount;\n      }\n      glyph.path.commands.push(command);\n    }\n\n    return { glyph, ax, ay };\n  }\n\n  _shapeToPaths(glyphs, line, { scale = 1, axs } = {}) {\n    let x = 0, y = 0, paths = [];\n\n    if (glyphs.length !== line.text.length) {\n      throw Error('Invalid shape data');\n    }\n\n    // iterate over the glyphs, converting each to a glyph object\n    // with a path property containing an array of commands\n    for (let i = 0; i < glyphs.length; i++) {\n      const { glyph, ax, ay } = this._singleShapeToPath(glyphs[i], {\n        scale,\n        x,\n        y,\n        lineX: line.x,\n        lineY: line.y,\n        axs,\n      });\n\n      paths.push(glyph);\n      x += ax; y += ay;\n    }\n\n    return paths;\n  }\n\n  _measureTextDefault(renderer, str) {\n    let { textAlign, textBaseline } = renderer.states;\n    let ctx = renderer.textDrawingContext();\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'alphabetic';\n    let metrics = ctx.measureText(str);\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n    return metrics;\n  }\n\n  drawPaths(ctx, commands, opts) { // for debugging\n    ctx.strokeStyle = opts?.stroke || ctx.strokeStyle;\n    ctx.fillStyle = opts?.fill || ctx.fillStyle;\n    ctx.beginPath();\n    commands.forEach(([type, ...data]) => {\n      if (type === 'M') {\n        ctx.moveTo(...data);\n      } else if (type === 'L') {\n        ctx.lineTo(...data);\n      } else if (type === 'C') {\n        ctx.bezierCurveTo(...data);\n      } else if (type === 'Q') {\n        ctx.quadraticCurveTo(...data);\n      } else if (type === 'Z') {\n        ctx.closePath();\n      }\n    });\n    if (opts?.fill) ctx.fill();\n    if (opts?.stroke) ctx.stroke();\n  }\n\n  _pathsToCommands(paths, scale) {\n    let commands = [];\n    for (let i = 0; i < paths.length; i++) {\n      let pathData = paths[i];\n      let { x, y, path } = pathData;\n      let { crds, cmds } = path;\n\n      // iterate over the path, storing each non-control point\n      for (let c = 0, j = 0; j < cmds.length; j++) {\n        let cmd = cmds[j], obj = { type: cmd, data: [] };\n        if (cmd == \"M\" || cmd == \"L\") {\n          obj.data.push(x + crds[c] * scale, y + crds[c + 1] * -scale);\n          c += 2;\n        }\n        else if (cmd == \"C\") {\n          for (let i = 0; i < 6; i += 2) {\n            obj.data.push(x + crds[c + i] * scale, y + crds[c + i + 1] * -scale);\n          }\n          c += 6;\n        }\n        else if (cmd == \"Q\") {\n          for (let i = 0; i < 4; i += 2) {\n            obj.data.push(x + crds[c + i] * scale, y + crds[c + i + 1] * -scale);\n          }\n          c += 4;\n        }\n        commands.push(obj);\n      }\n    }\n\n    return commands;\n  }\n}\n\nasync function create(pInst, name, path, descriptors, rawFont) {\n\n  let face = createFontFace(name, path, descriptors, rawFont);\n\n  // load if we need to\n  if (face.status !== 'loaded') await face.load();\n\n  // add it to the document\n  document.fonts.add(face);\n\n  // return a new p5.Font\n  return new Font(pInst, face, name, path, rawFont);\n}\n\nfunction createFontFace(name, path, descriptors, rawFont) {\n\n  if (name.includes(' ')) name = \"'\" + name + \"'\"; // NOTE: must be single-quotes\n\n  let fontArg = rawFont?._compressedData ?? rawFont?._data;\n  if (!fontArg) {\n    if (!validFontTypesRe.test(path)) {\n      throw Error(invalidFontError);\n    }\n    if (!path.startsWith('url(')) {\n      path = 'url(' + path + ')';\n    }\n    fontArg = path;\n  }\n\n  if ((rawFont?.fvar?.length ?? 0) > 0) {\n    descriptors = descriptors || {};\n    for (const [tag, minVal, defaultVal, maxVal, flags, name] of rawFont.fvar[0]) {\n      if (tag === 'wght') {\n        descriptors.weight = `${minVal} ${maxVal}`;\n      } else if (tag === 'wdth') {\n        descriptors.stretch = `${minVal}% ${maxVal}%`;\n      }\n      // TODO add other descriptors\n    }\n  }\n\n  // create/return the FontFace object\n  let face = new FontFace(name, fontArg, descriptors);\n  if (face.status === 'error') {\n    throw Error('Failed to create FontFace for \"' + name + '\"');\n  }\n  return face;\n}\n\nfunction extractFontName(font, path) {\n  let result, meta = font?.name;\n\n  // use the metadata if we have it\n  if (meta) {\n    if (meta.fullName) {\n      return meta.fullName;\n    }\n    if (meta.familyName) {\n      result = meta.familyName;\n    }\n  }\n\n  if (!result) {\n\n    // if not, try to extract the name from the path\n    let matches = extractFontNameRe.exec(path);\n    if (matches && matches.length >= 3) {\n      result = matches[1];\n    }\n    else {\n      // give up and return the full path\n      result = path;\n    }\n  }\n\n  // replace spaces with underscores\n  if (result.includes(' ')) {\n    result = result.replace(/ /g, '_');\n  }\n\n  return result;\n}\nfunction pathToPoints(cmds, options, font) {\n\n  const parseOpts = (options, defaults) => {\n    if (typeof options !== 'object') {\n      options = defaults;\n    } else {\n      for (const key in defaults) {\n        if (typeof options[key] === 'undefined') {\n          options[key] = defaults[key];\n        }\n      }\n    }\n    return options;\n  };\n\n  const at = (v, i) => {\n    const s = v.length;\n    return v[i < 0 ? i % s + s : i % s];\n  };\n\n  const simplify = (pts, angle) => {\n    angle = angle || 0;\n    let num = 0;\n    for (let i = pts.length - 1; pts.length > 3 && i >= 0; --i) {\n      if (collinear(at(pts, i - 1), at(pts, i), at(pts, i + 1), angle)) {\n        pts.splice(i % pts.length, 1); // Remove middle point\n        num++;\n      }\n    }\n    return num;\n  };\n\n  const path = createFromCommands(arrayCommandsToObjects(cmds));\n  let opts = parseOpts(options, {\n    sampleFactor: 0.1,\n    simplifyThreshold: 0\n  });\n\n  const totalPoints = Math.max(1, Math.ceil(path.getTotalLength() * opts.sampleFactor));\n  let points = [];\n\n  const mode = font._pInst.angleMode();\n  const DEGREES = font._pInst.DEGREES;\n  for (let i = 0; i < totalPoints; i++) {\n    const length = path.getTotalLength() * (\n      totalPoints === 1\n        ? 0\n        : (i / (totalPoints - 1))\n    );\n    points.push({\n      ...path.getPointAtLength(length),\n      get angle() {\n        const angle = path.getAngleAtLength(length);\n        if (mode === DEGREES) {\n          return angle * 180 / Math.PI;\n        } else {\n          return angle;\n        }\n      },\n      // For backwards compatibility\n      get alpha() {\n        return this.angle;\n      }\n    });\n  }\n\n  if (opts.simplifyThreshold) {\n    simplify(points, opts.simplifyThreshold);\n  }\n\n  return points;\n}\n\nfunction unquote(name) {\n  // Unquote name from CSS\n  if ((name.startsWith('\"') || name.startsWith(\"'\")) && name.at(0) === name.at(-1)) {\n    return name.slice(1, -1).replace(/\\/(['\"])/g, '$1');\n  }\n  return name;\n}\n\nfunction parseCreateArgs(...args/*path, name, onSuccess, onError*/) {\n\n  // parse the path\n  let path = args.shift();\n  if (typeof path !== 'string' || path.length === 0) {\n    p5._friendlyError(invalidFontError, 'p5.loadFont'); // ?\n  }\n\n  // parse the name\n  let name;\n  if (typeof args[0] === 'string') {\n    name = args.shift();\n  }\n\n  // get the callbacks/descriptors if any\n  let success, error, options;\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (typeof arg === 'function') {\n      if (!success) {\n        success = arg;\n      } else {\n        error = arg;\n      }\n    }\n    else if (typeof arg === 'object') {\n      options = arg;\n    }\n  }\n\n  return { path, name, success, error, options };\n}\n\nfunction font(p5, fn) {\n\n  /**\n   * A class to describe fonts. Create through <a href=\"#/p5/loadFont\">`loadFont()`</a>.\n   *\n   * @class p5.Font\n   */\n  p5.Font = Font;\n\n  /**\n   * @private\n   */\n  fn.parseFontData = async function(pathOrData) {\n    // load the raw font bytes\n    let result = pathOrData instanceof Uint8Array\n      ? pathOrData\n      : await fn.loadBytes(pathOrData);\n    //console.log('result:', result);\n\n    if (!result) {\n      throw Error('Failed to load font data');\n    }\n\n    // parse the font data\n    let fonts = Typr.parse(result);\n\n    // TODO: generate descriptors from font in the future\n\n    if (fonts.length === 0 || fonts[0].cmap === undefined) {\n      throw Error('parsing font data');\n    }\n\n    return fonts[0];\n  };\n\n  /**\n   * Loads a font and creates a <a href=\"#/p5.Font\">p5.Font</a> object.\n   * `loadFont()` can load fonts in either .otf or .ttf format. Loaded fonts can\n   * be used to style text on the canvas and in HTML elements.\n   *\n   * The first parameter, `path`, is the path to a font file.\n   * Paths to local files should be relative. For example,\n   * `'assets/inconsolata.otf'`. The Inconsolata font used in the following\n   * examples can be downloaded for free\n   * <a href=\"https://www.fontsquirrel.com/fonts/inconsolata\" target=\"_blank\">here</a>.\n   * Paths to remote files should be URLs. For example,\n   * `'https://example.com/inconsolata.otf'`. URLs may be blocked due to browser\n   * security.\n   *\n   * In 2D mode, `path` can take on a few other forms. It could be a path to a CSS file,\n   * such as one from <a href=\"https://fonts.google.com/\">Google Fonts.</a> It could also\n   * be a string with a <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face\">CSS `@font-face` declaration.</a>\n   *\n   * The second parameter, `successCallback`, is optional. If a function is\n   * passed, it will be called once the font has loaded. The callback function\n   * may use the new <a href=\"#/p5.Font\">p5.Font</a> object if needed.\n   *\n   * The third parameter, `failureCallback`, is also optional. If a function is\n   * passed, it will be called if the font fails to load. The callback function\n   * may use the error\n   * <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event\" target=\"_blank\">Event</a>\n   * object if needed.\n   *\n   * Fonts can take time to load. `await` the result of `loadFont()` in\n   * <a href=\"#/p5/setup\">setup()</a> before using the result.\n   *\n   * @method loadFont\n   * @for p5\n   * @param  {String}        path       path of the font or CSS file to be loaded, or a CSS `@font-face` string.\n   * @param  {String}        [name]            An alias that can be used for this font in `textFont()`. Defaults to the name in the font's metadata.\n   * @param  {Object}        [options]         An optional object with extra CSS font face descriptors, or p5.js font settings.\n   * @param  {String|Array<String>} [options.sets] (Experimental) An optional string of list of strings with Unicode character set names that should be included. When a CSS file is used as the font, it may contain multiple font files. The font best matching the requested character sets will be picked.\n   * @param  {Function}      [successCallback] function called with the\n   *                                           <a href=\"#/p5.Font\">p5.Font</a> object after it\n   *                                           loads.\n   * @param  {Function}      [failureCallback] function called with the error\n   *                                           <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event\" target=\"_blank\">Event</a>\n   *                                           object if the font fails to load.\n   * @return {Promise<p5.Font>}                         <a href=\"#/p5.Font\">p5.Font</a> object.\n   * @example\n   * <div>\n   * <code>\n   * let font;\n   *\n   * async function setup() {\n   *   createCanvas(100, 100);\n   *   font = await loadFont('assets/inconsolata.otf');\n   *   fill('deeppink');\n   *   textFont(font);\n   *   textSize(36);\n   *   text('p5*js', 10, 50);\n   *\n   *   describe('The text \"p5*js\" written in pink on a white background.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   loadFont('assets/inconsolata.otf', font => {\n   *     fill('deeppink');\n   *     textFont(font);\n   *     textSize(36);\n   *     text('p5*js', 10, 50);\n   *\n   *     describe('The text \"p5*js\" written in pink on a white background.');\n   *   });\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * function setup() {\n   *   createCanvas(100, 100);\n   *   loadFont('assets/inconsolata.otf', success, failure);\n   * }\n   *\n   * function success(font) {\n   *   fill('deeppink');\n   *   textFont(font);\n   *   textSize(36);\n   *   text('p5*js', 10, 50);\n   *\n   *   describe('The text \"p5*js\" written in pink on a white background.');\n   * }\n   *\n   * function failure(event) {\n   *   console.error('Oops!', event);\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div>\n   * <code>\n   * async function setup() {\n   *   createCanvas(100, 100);\n   *   await loadFont('assets/inconsolata.otf');\n   *   let p = createP('p5*js');\n   *   p.style('color', 'deeppink');\n   *   p.style('font-family', 'Inconsolata');\n   *   p.style('font-size', '36px');\n   *   p.position(10, 50);\n   *\n   *   describe('The text \"p5*js\" written in pink on a white background.');\n   * }\n   * </code>\n   * </div>\n   *\n   * @example\n   * <div class=\"norender\">\n   * <code>\n   * // Some other forms of loading fonts:\n   * loadFont(\"https://fonts.googleapis.com/css2?family=Bricolage+Grotesque:opsz,wght@12..96,200..800&display=swap\");\n   * loadFont(`@font-face { font-family: \"Bricolage Grotesque\", serif; font-optical-sizing: auto; font-weight: 400; font-style: normal; font-variation-settings: \"wdth\" 100; }`);\n   * </code>\n   * </div>\n   */\n  /**\n    * @method loadFont\n    * @for p5\n    * @param  {String}        path              path of the font to be loaded.\n    * @param  {Function}      [successCallback] function called with the\n    *                                           <a href=\"#/p5.Font\">p5.Font</a> object after it\n    *                                           loads.\n    * @param  {Function}      [failureCallback] function called with the error\n    *                                           <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Event\" target=\"_blank\">Event</a>\n    *                                           object if the font fails to load.\n    * @returns {Promise<p5.Font>} The font.\n    */\n  fn.loadFont = async function (...args/*path, name, onSuccess, onError, descriptors*/) {\n\n    let { path, name, success, error, options: { sets, ...descriptors } = {} } = parseCreateArgs(...args);\n\n    let isCSS = path.includes('@font-face');\n\n    if (!isCSS) {\n      const info = await fetch(path, { method: 'HEAD' });\n      const isCSSFile = info.headers.get('content-type')?.startsWith('text/css');\n      if (isCSSFile) {\n        isCSS = true;\n        path = await fetch(path).then((res) => res.text());\n      }\n    }\n\n    if (isCSS) {\n      const stylesheet = new CSSStyleSheet();\n      await stylesheet.replace(path);\n      const possibleFonts = [];\n      for (const rule of stylesheet.cssRules) {\n        if (rule instanceof CSSFontFaceRule) {\n          const style = rule.style;\n          let name = unquote(style.getPropertyValue('font-family'));\n          const src = style.getPropertyValue('src');\n          const fontDescriptors = { ...(descriptors || {}) };\n          for (const key of style) {\n            if (key === 'font-family' || key === 'src') continue;\n            const camelCaseKey = key\n              .replace(/^font-/, '')\n              .split('-')\n              .map((v, i) => i === 0 ? v : `${v[0].toUpperCase()}${v.slice(1)}`)\n              .join('');\n            fontDescriptors[camelCaseKey] = style.getPropertyValue(key);\n          }\n          possibleFonts.push({\n            name,\n            src,\n            fontDescriptors,\n            loadWithData: async () => {\n              let fontData;\n              try {\n                const urlMatch = /url\\(([^\\)]+)\\)/.exec(src);\n                if (urlMatch) {\n                  let url = urlMatch[1];\n                  if (/^['\"]/.exec(url) && url.at(0) === url.at(-1)) {\n                    url = url.slice(1, -1);\n                  }\n                  fontData = await fn.parseFontData(url);\n                }\n              } catch (_e) {}\n              return create(this, name, src, fontDescriptors, fontData)\n            },\n            loadWithoutData: () => create(this, name, src, fontDescriptors)\n          });\n        }\n      }\n\n      // TODO: handle multiple font faces?\n      sets = sets || ['latin']; // Default to latin for now if omitted\n      const requestedGroups = (sets instanceof Array ? sets : [sets])\n        .map(s => s.toLowerCase());\n      // Grab thr named groups with names that include the requested keywords\n      const requestedCategories = unicodeRanges\n        .filter((r) => requestedGroups.some(\n          g => r.category.includes(g) &&\n            // Only include extended character sets if specifically requested\n            r.category.includes('ext') === g.includes('ext')\n        ));\n      const requestedRanges = new Set(\n        UnicodeRange.parse(\n          requestedCategories.map((c) => `U+${c.hexrange[0]}-${c.hexrange[1]}`)\n        )\n      );\n      let closestRangeOverlap = 0;\n      let closestDescriptorOverlap = 0;\n      let closestMatch = undefined;\n      for (const font of possibleFonts) {\n        if (!font.fontDescriptors.unicodeRange) continue;\n        const fontRange = new Set(\n          UnicodeRange.parse(\n            font.fontDescriptors.unicodeRange.split(/,\\s*/g)\n          )\n        );\n        const rangeOverlap = [...fontRange.values()]\n          .filter(v => requestedRanges.has(v))\n          .length;\n\n        const targetDescriptors = {\n          // Default to normal style at regular weight\n          style: 'normal',\n          weight: 400,\n          // Override from anything else passed in\n          ...descriptors\n        };\n        const descriptorOverlap = Object.keys(font.fontDescriptors)\n          .filter(k => font.fontDescriptors[k] === targetDescriptors[k])\n          .length;\n\n        if (\n          descriptorOverlap > closestDescriptorOverlap ||\n          (descriptorOverlap === closestDescriptorOverlap && rangeOverlap >= closestRangeOverlap)\n        ) {\n          closestDescriptorOverlap = descriptorOverlap;\n          closestRangeOverlap = rangeOverlap;\n          closestMatch = font;\n        }\n      }\n      const picked = (closestMatch || possibleFonts.at(-1));\n      for (const font of possibleFonts) {\n        if (font !== picked) {\n          // Load without parsing data with Typr so that it still can be accessed\n          // via regular CSS by name\n          font.loadWithoutData();\n        }\n      }\n      return picked?.loadWithData();\n    }\n\n    let pfont;\n    try {\n      const fontData = await fn.parseFontData(path);\n\n      // make sure we have a valid name\n      name = name || extractFontName(fontData, path);\n\n      // create a FontFace object and pass it to the p5.Font constructor\n      pfont = await create(this, name, path, descriptors, fontData);\n\n    } catch (err) {\n      // failed to parse the font, load it as a simple FontFace\n      let ident = name || path\n        .substring(path.lastIndexOf('/') + 1)\n        .replace(/\\.[^/.]+$/, \"\");\n\n      console.warn(`WARN: No glyph data for '${ident}', retrying as FontFace`);\n\n      try {\n        // create a FontFace object and pass it to p5.Font\n        pfont = await create(this, ident, path, descriptors);\n      }\n      catch (err) {\n        if (error) return error(err);\n        throw err;\n      }\n    }\n    if (success) return success(pfont);\n\n    return pfont;\n  };\n}\n// Convert arrays to named objects\nconst arrayCommandsToObjects = (commands) => commands.map((command) => {\n  const type = command[0];\n  switch (type) {\n    case 'Z': {\n      return { type };\n    }\n    case 'M':\n    case 'L': {\n      const [, x, y] = command;\n      return { type, x, y };\n    }\n    case 'Q': {\n      const [, x1, y1, x, y] = command;\n      return { type, x1, y1, x, y };\n    }\n    case 'C': {\n      const [, x1, y1, x2, y2, x, y] = command;\n      return { type, x1, y1, x2, y2, x, y };\n    }\n    default: {\n      throw new Error(`Unexpected path command: ${type}`);\n    }\n  }\n});\n\nif (typeof p5 !== 'undefined') {\n  font(p5, p5.prototype);\n}\n\nexport { Font, arrayCommandsToObjects, font as default };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9837, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ryan%20Purnomo/Bahasa-Pemrograman/Website/Javascript/NextJS/CG-GAMES/node_modules/p5/dist/type/index.js"],"sourcesContent":["import textCore from './textCore.js';\nimport font from './p5.Font.js';\nimport '../p5.Renderer-CwAYZOC2.js';\nimport '../creating_reading-D4AAKRbx.js';\nimport 'colorjs.io/fn';\nimport '../color/color_spaces/hsb.js';\nimport '../constants-C-g_eAdC.js';\nimport '../image/filters.js';\nimport '../math/p5.Vector.js';\nimport '../shape/custom_shapes.js';\nimport '../core/States.js';\nimport '../io/utilities.js';\nimport 'file-saver';\nimport '@japont/unicode-range';\nimport './unicodeRanges.js';\nimport './lib/Typr.js';\nimport 'pako';\nimport '@davepagurek/bezier-path';\n\nfunction type(p5){\n  p5.registerAddon(textCore);\n  p5.registerAddon(font);\n}\n\nexport { type as default };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAEA,SAAS,KAAK,EAAE;IACd,GAAG,aAAa,CAAC,8IAAA,CAAA,UAAQ;IACzB,GAAG,aAAa,CAAC,gJAAA,CAAA,UAAI;AACvB","ignoreList":[0],"debugId":null}}]
}